{"ast":null,"code":"import { defineComponent, ref, computed, provide, renderSlot } from 'vue';\nimport '../../../tokens/index.mjs';\nimport { usePopperProps } from './popper.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { POPPER_INJECTION_KEY } from '../../../tokens/popper.mjs';\nconst __default__ = {\n  name: \"ElPopperRoot\",\n  inheritAttrs: false\n};\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: usePopperProps,\n\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const triggerRef = ref();\n    const popperInstanceRef = ref();\n    const contentRef = ref();\n    const referenceRef = ref();\n    const role = computed(() => props.role);\n    const popperProvides = {\n      triggerRef,\n      popperInstanceRef,\n      contentRef,\n      referenceRef,\n      role\n    };\n    expose(popperProvides);\n    provide(POPPER_INJECTION_KEY, popperProvides);\n    return (_ctx, _cache) => {\n      return renderSlot(_ctx.$slots, \"default\");\n    };\n  }\n\n});\n\nvar Popper = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/popper/src/popper.vue\"]]);\n\nexport { Popper as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;IAkBA;IACA;IACA;IACA;IACA;IAEA;MAIAA,UAJA;MAQAC,iBARA;MAYAC,UAZA;MAgBAC,YAhBA;MAoBAC;IApBA;IAuBAC;IAEAC","names":["triggerRef","popperInstanceRef","contentRef","referenceRef","role","expose","provide"],"sources":["../../../../../../packages/components/popper/src/popper.vue"],"sourcesContent":["<template>\n  <slot />\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed, provide, ref } from 'vue'\nimport { POPPER_INJECTION_KEY } from '@element-plus/tokens'\nimport { usePopperProps } from './popper'\n\nimport type { Instance as PopperInstance } from '@popperjs/core'\nimport type { ElPopperInjectionContext } from '@element-plus/tokens'\n\ndefineOptions({\n  name: 'ElPopperRoot',\n  inheritAttrs: false,\n})\nconst props = defineProps(usePopperProps)\n\nconst triggerRef = ref<HTMLElement>()\nconst popperInstanceRef = ref<PopperInstance>()\nconst contentRef = ref<HTMLElement>()\nconst referenceRef = ref<HTMLElement>()\nconst role = computed(() => props.role)\n\nconst popperProvides = {\n  /**\n   * @description trigger element\n   */\n  triggerRef,\n  /**\n   * @description popperjs instance\n   */\n  popperInstanceRef,\n  /**\n   * @description popper content element\n   */\n  contentRef,\n  /**\n   * @description popper reference element\n   */\n  referenceRef,\n  /**\n   * @description role determines how aria attributes are distributed\n   */\n  role,\n} as ElPopperInjectionContext\n\ndefineExpose(popperProvides)\n\nprovide(POPPER_INJECTION_KEY, popperProvides)\n</script>\n"]},"metadata":{},"sourceType":"module"}