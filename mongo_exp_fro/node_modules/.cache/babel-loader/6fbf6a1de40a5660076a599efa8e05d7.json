{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport { isVNode, Fragment, Text, Comment, openBlock, createBlock, createCommentVNode } from 'vue';\nimport { hasOwn, camelize, isArray } from '@vue/shared';\nimport '../objects.mjs';\nimport { debugWarn } from '../error.mjs';\nconst SCOPE = \"utils/vue/vnode\";\n\nvar PatchFlags = /* @__PURE__ */(PatchFlags2 => {\n  PatchFlags2[PatchFlags2[\"TEXT\"] = 1] = \"TEXT\";\n  PatchFlags2[PatchFlags2[\"CLASS\"] = 2] = \"CLASS\";\n  PatchFlags2[PatchFlags2[\"STYLE\"] = 4] = \"STYLE\";\n  PatchFlags2[PatchFlags2[\"PROPS\"] = 8] = \"PROPS\";\n  PatchFlags2[PatchFlags2[\"FULL_PROPS\"] = 16] = \"FULL_PROPS\";\n  PatchFlags2[PatchFlags2[\"HYDRATE_EVENTS\"] = 32] = \"HYDRATE_EVENTS\";\n  PatchFlags2[PatchFlags2[\"STABLE_FRAGMENT\"] = 64] = \"STABLE_FRAGMENT\";\n  PatchFlags2[PatchFlags2[\"KEYED_FRAGMENT\"] = 128] = \"KEYED_FRAGMENT\";\n  PatchFlags2[PatchFlags2[\"UNKEYED_FRAGMENT\"] = 256] = \"UNKEYED_FRAGMENT\";\n  PatchFlags2[PatchFlags2[\"NEED_PATCH\"] = 512] = \"NEED_PATCH\";\n  PatchFlags2[PatchFlags2[\"DYNAMIC_SLOTS\"] = 1024] = \"DYNAMIC_SLOTS\";\n  PatchFlags2[PatchFlags2[\"HOISTED\"] = -1] = \"HOISTED\";\n  PatchFlags2[PatchFlags2[\"BAIL\"] = -2] = \"BAIL\";\n  return PatchFlags2;\n})(PatchFlags || {});\n\nfunction isFragment(node) {\n  return isVNode(node) && node.type === Fragment;\n}\n\nfunction isText(node) {\n  return isVNode(node) && node.type === Text;\n}\n\nfunction isComment(node) {\n  return isVNode(node) && node.type === Comment;\n}\n\nconst TEMPLATE = \"template\";\n\nfunction isTemplate(node) {\n  return isVNode(node) && node.type === TEMPLATE;\n}\n\nfunction isValidElementNode(node) {\n  return isVNode(node) && !isFragment(node) && !isComment(node);\n}\n\nfunction getChildren(node, depth) {\n  if (isComment(node)) return;\n\n  if (isFragment(node) || isTemplate(node)) {\n    return depth > 0 ? getFirstValidNode(node.children, depth - 1) : void 0;\n  }\n\n  return node;\n}\n\nconst getFirstValidNode = (nodes, maxDepth = 3) => {\n  if (Array.isArray(nodes)) {\n    return getChildren(nodes[0], maxDepth);\n  } else {\n    return getChildren(nodes, maxDepth);\n  }\n};\n\nfunction renderIf(condition, ...args) {\n  return condition ? renderBlock(...args) : createCommentVNode(\"v-if\", true);\n}\n\nfunction renderBlock(...args) {\n  return openBlock(), createBlock(...args);\n}\n\nconst getNormalizedProps = node => {\n  if (!isVNode(node)) {\n    debugWarn(SCOPE, \"[getNormalizedProps] must be a VNode\");\n    return {};\n  }\n\n  const raw = node.props || {};\n  const type = (isVNode(node.type) ? node.type.props : void 0) || {};\n  const props = {};\n  Object.keys(type).forEach(key => {\n    if (hasOwn(type[key], \"default\")) {\n      props[key] = type[key].default;\n    }\n  });\n  Object.keys(raw).forEach(key => {\n    props[camelize(key)] = raw[key];\n  });\n  return props;\n};\n\nconst ensureOnlyChild = children => {\n  if (!isArray(children) || children.length > 1) {\n    throw new Error(\"expect to receive a single Vue element child\");\n  }\n\n  return children[0];\n};\n\nexport { PatchFlags, ensureOnlyChild, getFirstValidNode, getNormalizedProps, isComment, isFragment, isTemplate, isText, isValidElementNode, renderBlock, renderIf };","map":{"version":3,"mappings":"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","names":["SCOPE","PatchFlags","PatchFlags2","isFragment","node","isVNode","type","Fragment","isText","Text","isComment","Comment","TEMPLATE","isTemplate","isValidElementNode","getChildren","depth","getFirstValidNode","children","nodes","maxDepth","Array","isArray","renderIf","condition","args","renderBlock","createCommentVNode","openBlock","createBlock","getNormalizedProps","debugWarn","raw","props","Object","keys","forEach","key","hasOwn","default","camelize","ensureOnlyChild","length","Error"],"sources":["../../../../../packages/utils/vue/vnode.ts"],"sourcesContent":["import {\n  Comment,\n  Fragment,\n  Text,\n  createBlock,\n  createCommentVNode,\n  isVNode,\n  openBlock,\n} from 'vue'\nimport { camelize, isArray } from '@vue/shared'\nimport { hasOwn } from '../objects'\nimport { debugWarn } from '../error'\nimport type {\n  VNode,\n  VNodeArrayChildren,\n  VNodeChild,\n  VNodeNormalizedChildren,\n} from 'vue'\n\nconst SCOPE = 'utils/vue/vnode'\n\nexport enum PatchFlags {\n  TEXT = 1,\n  CLASS = 2,\n  STYLE = 4,\n  PROPS = 8,\n  FULL_PROPS = 16,\n  HYDRATE_EVENTS = 32,\n  STABLE_FRAGMENT = 64,\n  KEYED_FRAGMENT = 128,\n  UNKEYED_FRAGMENT = 256,\n  NEED_PATCH = 512,\n  DYNAMIC_SLOTS = 1024,\n  HOISTED = -1,\n  BAIL = -2,\n}\n\nexport function isFragment(node: VNode): boolean\nexport function isFragment(node: unknown): node is VNode\nexport function isFragment(node: unknown): node is VNode {\n  return isVNode(node) && node.type === Fragment\n}\n\nexport function isText(node: VNode): boolean\nexport function isText(node: unknown): node is VNode\nexport function isText(node: unknown): node is VNode {\n  return isVNode(node) && node.type === Text\n}\n\nexport function isComment(node: VNode): boolean\nexport function isComment(node: unknown): node is VNode\nexport function isComment(node: unknown): node is VNode {\n  return isVNode(node) && node.type === Comment\n}\n\nconst TEMPLATE = 'template'\nexport function isTemplate(node: VNode): boolean\nexport function isTemplate(node: unknown): node is VNode\nexport function isTemplate(node: unknown): node is VNode {\n  return isVNode(node) && node.type === TEMPLATE\n}\n\n/**\n * determine if the element is a valid element type rather than fragments and comment e.g. <template> v-if\n * @param node {VNode} node to be tested\n */\nexport function isValidElementNode(node: VNode): boolean\nexport function isValidElementNode(node: unknown): node is VNode\nexport function isValidElementNode(node: unknown): node is VNode {\n  return isVNode(node) && !isFragment(node) && !isComment(node)\n}\n\n/**\n * get a valid child node (not fragment nor comment)\n * @param node {VNode} node to be searched\n * @param depth {number} depth to be searched\n */\nfunction getChildren(\n  node: VNodeNormalizedChildren | VNodeChild,\n  depth: number\n): VNodeNormalizedChildren | VNodeChild {\n  if (isComment(node)) return\n  if (isFragment(node) || isTemplate(node)) {\n    return depth > 0 ? getFirstValidNode(node.children, depth - 1) : undefined\n  }\n  return node\n}\n\nexport const getFirstValidNode = (\n  nodes: VNodeNormalizedChildren,\n  maxDepth = 3\n) => {\n  if (Array.isArray(nodes)) {\n    return getChildren(nodes[0], maxDepth)\n  } else {\n    return getChildren(nodes, maxDepth)\n  }\n}\n\nexport function renderIf(\n  condition: boolean,\n  ...args: Parameters<typeof createBlock>\n) {\n  return condition ? renderBlock(...args) : createCommentVNode('v-if', true)\n}\n\nexport function renderBlock(...args: Parameters<typeof createBlock>) {\n  return openBlock(), createBlock(...args)\n}\n\nexport const getNormalizedProps = (node: VNode) => {\n  if (!isVNode(node)) {\n    debugWarn(SCOPE, '[getNormalizedProps] must be a VNode')\n    return {}\n  }\n\n  const raw = node.props || {}\n  const type = (isVNode(node.type) ? node.type.props : undefined) || {}\n  const props: Record<string, any> = {}\n\n  Object.keys(type).forEach((key) => {\n    if (hasOwn(type[key], 'default')) {\n      props[key] = type[key].default\n    }\n  })\n\n  Object.keys(raw).forEach((key) => {\n    props[camelize(key)] = raw[key]\n  })\n\n  return props\n}\n\nexport const ensureOnlyChild = (children: VNodeArrayChildren | undefined) => {\n  if (!isArray(children) || children.length > 1) {\n    throw new Error('expect to receive a single Vue element child')\n  }\n  return children[0]\n}\n"]},"metadata":{},"sourceType":"module"}