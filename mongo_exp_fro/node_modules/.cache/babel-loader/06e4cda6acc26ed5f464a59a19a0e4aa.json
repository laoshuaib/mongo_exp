{"ast":null,"code":"import { ref, computed } from 'vue';\n\nfunction useAllowCreate(props, states) {\n  const createOptionCount = ref(0);\n  const cachedSelectedOption = ref(null);\n  const enableAllowCreateMode = computed(() => {\n    return props.allowCreate && props.filterable;\n  });\n\n  function hasExistingOption(query) {\n    const hasValue = option => option.value === query;\n\n    return props.options && props.options.some(hasValue) || states.createdOptions.some(hasValue);\n  }\n\n  function selectNewOption(option) {\n    if (!enableAllowCreateMode.value) {\n      return;\n    }\n\n    if (props.multiple && option.created) {\n      createOptionCount.value++;\n    } else {\n      cachedSelectedOption.value = option;\n    }\n  }\n\n  function createNewOption(query) {\n    if (enableAllowCreateMode.value) {\n      if (query && query.length > 0 && !hasExistingOption(query)) {\n        const newOption = {\n          value: query,\n          label: query,\n          created: true,\n          disabled: false\n        };\n\n        if (states.createdOptions.length >= createOptionCount.value) {\n          states.createdOptions[createOptionCount.value] = newOption;\n        } else {\n          states.createdOptions.push(newOption);\n        }\n      } else {\n        if (props.multiple) {\n          states.createdOptions.length = createOptionCount.value;\n        } else {\n          const selectedOption = cachedSelectedOption.value;\n          states.createdOptions.length = 0;\n\n          if (selectedOption && selectedOption.created) {\n            states.createdOptions.push(selectedOption);\n          }\n        }\n      }\n    }\n  }\n\n  function removeNewOption(option) {\n    if (!enableAllowCreateMode.value || !option || !option.created || option.created && props.reserveKeyword && states.inputValue === option.label) {\n      return;\n    }\n\n    const idx = states.createdOptions.findIndex(it => it.value === option.value);\n\n    if (~idx) {\n      states.createdOptions.splice(idx, 1);\n      createOptionCount.value--;\n    }\n  }\n\n  function clearAllNewOption() {\n    if (enableAllowCreateMode.value) {\n      states.createdOptions.length = 0;\n      createOptionCount.value = 0;\n    }\n  }\n\n  return {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption\n  };\n}\n\nexport { useAllowCreate };","map":{"version":3,"mappings":"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","names":["useAllowCreate","props","states","createOptionCount","ref","cachedSelectedOption","enableAllowCreateMode","computed","allowCreate","filterable","hasExistingOption","query","hasValue","option","value","options","some","createdOptions","selectNewOption","multiple","created","createNewOption","length","newOption","label","disabled","push","selectedOption","removeNewOption","reserveKeyword","inputValue","idx","findIndex","it","splice","clearAllNewOption"],"sources":["../../../../../../packages/components/select-v2/src/useAllowCreate.ts"],"sourcesContent":["// @ts-nocheck\nimport { computed, ref } from 'vue'\nimport type { ISelectProps } from './token'\nimport type { Option } from './select.types'\n\nexport function useAllowCreate(props: ISelectProps, states) {\n  const createOptionCount = ref(0)\n  const cachedSelectedOption = ref<Option>(null)\n\n  const enableAllowCreateMode = computed(() => {\n    return props.allowCreate && props.filterable\n  })\n\n  function hasExistingOption(query: string) {\n    const hasValue = (option) => option.value === query\n    return (\n      (props.options && props.options.some(hasValue)) ||\n      states.createdOptions.some(hasValue)\n    )\n  }\n\n  function selectNewOption(option: Option) {\n    if (!enableAllowCreateMode.value) {\n      return\n    }\n    if (props.multiple && option.created) {\n      createOptionCount.value++\n    } else {\n      cachedSelectedOption.value = option\n    }\n  }\n\n  function createNewOption(query: string) {\n    if (enableAllowCreateMode.value) {\n      if (query && query.length > 0 && !hasExistingOption(query)) {\n        const newOption = {\n          value: query,\n          label: query,\n          created: true,\n          disabled: false,\n        }\n        if (states.createdOptions.length >= createOptionCount.value) {\n          states.createdOptions[createOptionCount.value] = newOption\n        } else {\n          states.createdOptions.push(newOption)\n        }\n      } else {\n        if (props.multiple) {\n          states.createdOptions.length = createOptionCount.value\n        } else {\n          const selectedOption = cachedSelectedOption.value\n          states.createdOptions.length = 0\n          if (selectedOption && selectedOption.created) {\n            states.createdOptions.push(selectedOption)\n          }\n        }\n      }\n    }\n  }\n\n  function removeNewOption(option: Option) {\n    if (\n      !enableAllowCreateMode.value ||\n      !option ||\n      !option.created ||\n      (option.created &&\n        props.reserveKeyword &&\n        states.inputValue === option.label)\n    ) {\n      return\n    }\n    const idx = states.createdOptions.findIndex(\n      (it) => it.value === option.value\n    )\n    if (~idx) {\n      states.createdOptions.splice(idx, 1)\n      createOptionCount.value--\n    }\n  }\n\n  function clearAllNewOption() {\n    if (enableAllowCreateMode.value) {\n      states.createdOptions.length = 0\n      createOptionCount.value = 0\n    }\n  }\n\n  return {\n    createNewOption,\n    removeNewOption,\n    selectNewOption,\n    clearAllNewOption,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}