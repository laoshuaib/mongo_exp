{"ast":null,"code":"import { watch } from 'vue';\nimport { isClient, useEventListener } from '@vueuse/core';\nimport '../../constants/index.mjs';\nimport { EVENT_CODE } from '../../constants/aria.mjs';\nconst modalStack = [];\n\nconst closeModal = e => {\n  if (modalStack.length === 0) return;\n\n  if (e.code === EVENT_CODE.esc) {\n    e.stopPropagation();\n    const topModal = modalStack[modalStack.length - 1];\n    topModal.handleClose();\n  }\n};\n\nconst useModal = (instance, visibleRef) => {\n  watch(visibleRef, val => {\n    if (val) {\n      modalStack.push(instance);\n    } else {\n      modalStack.splice(modalStack.indexOf(instance), 1);\n    }\n  });\n};\n\nif (isClient) useEventListener(document, \"keydown\", closeModal);\nexport { useModal };","map":{"version":3,"mappings":";;;;AAGA,MAAMA,UAAU,GAAG,EAAnB;;AACA,MAAMC,UAAU,GAAIC,CAAD,IAAO;EACxB,IAAIF,UAAU,CAACG,MAAX,KAAsB,CAA1B,EACE;;EACF,IAAID,CAAC,CAACE,IAAF,KAAWC,UAAU,CAACC,GAA1B,EAA+B;IAC7BJ,CAAC,CAACK,eAAF;IACA,MAAMC,QAAQ,GAAGR,UAAU,CAACA,UAAU,CAACG,MAAX,GAAoB,CAArB,CAA3B;IACAK,QAAQ,CAACC,WAAT;EACD;AACF,CARD;;AASY,MAACC,QAAQ,GAAG,CAACC,QAAD,EAAWC,UAAX,KAA0B;EAChDC,KAAK,CAACD,UAAD,EAAcE,GAAD,IAAS;IACzB,IAAIA,GAAJ,EAAS;MACPd,UAAU,CAACe,IAAX,CAAgBJ,QAAhB;IACD,CAFD,MAEO;MACLX,UAAU,CAACgB,MAAX,CAAkBhB,UAAU,CAACiB,OAAX,CAAmBN,QAAnB,CAAlB,EAAgD,CAAhD;IACD;EACF,CANI,CAAL;AAOF,CARY;;AASZ,IAAIO,QAAJ,EACEC,gBAAgB,CAACC,QAAD,EAAW,SAAX,EAAsBnB,UAAtB,CAAhB","names":["modalStack","closeModal","e","length","code","EVENT_CODE","esc","stopPropagation","topModal","handleClose","useModal","instance","visibleRef","watch","val","push","splice","indexOf","isClient","useEventListener","document"],"sources":["../../../../../packages/hooks/use-modal/index.ts"],"sourcesContent":["import { watch } from 'vue'\nimport { isClient, useEventListener } from '@vueuse/core'\nimport { EVENT_CODE } from '@element-plus/constants'\n\nimport type { Ref } from 'vue'\n\ntype ModalInstance = {\n  handleClose: () => void\n}\n\nconst modalStack: ModalInstance[] = []\n\nconst closeModal = (e: KeyboardEvent) => {\n  if (modalStack.length === 0) return\n  if (e.code === EVENT_CODE.esc) {\n    e.stopPropagation()\n    const topModal = modalStack[modalStack.length - 1]\n    topModal.handleClose()\n  }\n}\n\nexport const useModal = (instance: ModalInstance, visibleRef: Ref<boolean>) => {\n  watch(visibleRef, (val) => {\n    if (val) {\n      modalStack.push(instance)\n    } else {\n      modalStack.splice(modalStack.indexOf(instance), 1)\n    }\n  })\n}\n\nif (isClient) useEventListener(document, 'keydown', closeModal)\n"]},"metadata":{},"sourceType":"module"}