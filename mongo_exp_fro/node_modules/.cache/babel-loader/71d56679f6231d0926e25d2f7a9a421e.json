{"ast":null,"code":"import '../../../constants/index.mjs';\nimport '../../../utils/index.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nimport { CHANGE_EVENT } from '../../../constants/event.mjs';\nimport { isNumber } from '@vueuse/core';\nconst stepsProps = buildProps({\n  space: {\n    type: [Number, String],\n    default: \"\"\n  },\n  active: {\n    type: Number,\n    default: 0\n  },\n  direction: {\n    type: String,\n    default: \"horizontal\",\n    values: [\"horizontal\", \"vertical\"]\n  },\n  alignCenter: {\n    type: Boolean\n  },\n  simple: {\n    type: Boolean\n  },\n  finishStatus: {\n    type: String,\n    values: [\"wait\", \"process\", \"finish\", \"error\", \"success\"],\n    default: \"finish\"\n  },\n  processStatus: {\n    type: String,\n    values: [\"wait\", \"process\", \"finish\", \"error\", \"success\"],\n    default: \"process\"\n  }\n});\nconst stepsEmits = {\n  [CHANGE_EVENT]: (newVal, oldVal) => [newVal, oldVal].every(isNumber)\n};\nexport { stepsEmits, stepsProps };","map":{"version":3,"mappings":";;;;;AAEY,MAACA,UAAU,GAAGC,UAAU,CAAC;EACnCC,KAAK,EAAE;IACLC,IAAI,EAAE,CAACC,MAAD,EAASC,MAAT,CADD;IAELC,OAAO,EAAE;EAFJ,CAD4B;EAKnCC,MAAM,EAAE;IACNJ,IAAI,EAAEC,MADA;IAENE,OAAO,EAAE;EAFH,CAL2B;EASnCE,SAAS,EAAE;IACTL,IAAI,EAAEE,MADG;IAETC,OAAO,EAAE,YAFA;IAGTG,MAAM,EAAE,CAAC,YAAD,EAAe,UAAf;EAHC,CATwB;EAcnCC,WAAW,EAAE;IACXP,IAAI,EAAEQ;EADK,CAdsB;EAiBnCC,MAAM,EAAE;IACNT,IAAI,EAAEQ;EADA,CAjB2B;EAoBnCE,YAAY,EAAE;IACZV,IAAI,EAAEE,MADM;IAEZI,MAAM,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,SAAvC,CAFI;IAGZH,OAAO,EAAE;EAHG,CApBqB;EAyBnCQ,aAAa,EAAE;IACbX,IAAI,EAAEE,MADO;IAEbI,MAAM,EAAE,CAAC,MAAD,EAAS,SAAT,EAAoB,QAApB,EAA8B,OAA9B,EAAuC,SAAvC,CAFK;IAGbH,OAAO,EAAE;EAHI;AAzBoB,CAAD,CAAxB;AA+BA,MAACS,UAAU,GAAG;EACxB,CAACC,YAAD,GAAgB,CAACC,MAAD,EAASC,MAAT,KAAoB,CAACD,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CAAuBC,QAAvB;AADZ,CAAd","names":["stepsProps","buildProps","space","type","Number","String","default","active","direction","values","alignCenter","Boolean","simple","finishStatus","processStatus","stepsEmits","CHANGE_EVENT","newVal","oldVal","every","isNumber"],"sources":["../../../../../../packages/components/steps/src/steps.ts"],"sourcesContent":["import { CHANGE_EVENT } from '@element-plus/constants'\nimport { buildProps, isNumber } from '@element-plus/utils'\nimport type Steps from './steps.vue'\nimport type { ExtractPropTypes } from 'vue'\n\nexport const stepsProps = buildProps({\n  space: {\n    type: [Number, String],\n    default: '',\n  },\n  active: {\n    type: Number,\n    default: 0,\n  },\n  direction: {\n    type: String,\n    default: 'horizontal',\n    values: ['horizontal', 'vertical'],\n  },\n  alignCenter: {\n    type: Boolean,\n  },\n  simple: {\n    type: Boolean,\n  },\n  finishStatus: {\n    type: String,\n    values: ['wait', 'process', 'finish', 'error', 'success'],\n    default: 'finish',\n  },\n  processStatus: {\n    type: String,\n    values: ['wait', 'process', 'finish', 'error', 'success'],\n    default: 'process',\n  },\n} as const)\nexport type StepsProps = ExtractPropTypes<typeof stepsProps>\n\nexport const stepsEmits = {\n  [CHANGE_EVENT]: (newVal: number, oldVal: number) =>\n    [newVal, oldVal].every(isNumber),\n}\nexport type StepsEmits = typeof stepsEmits\n\nexport type StepsInstance = InstanceType<typeof Steps>\n"]},"metadata":{},"sourceType":"module"}