{"ast":null,"code":"import apply from './_apply.js';\nimport createCtor from './_createCtor.js';\nimport root from './_root.js';\n/** Used to compose bitmasks for function metadata. */\n\nvar WRAP_BIND_FLAG = 1;\n/**\n * Creates a function that wraps `func` to invoke it with the `this` binding\n * of `thisArg` and `partials` prepended to the arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to\n *  the new function.\n * @returns {Function} Returns the new wrapped function.\n */\n\nfunction createPartial(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength),\n        fn = this && this !== root && this instanceof wrapper ? Ctor : func;\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n\n    return apply(fn, isBind ? thisArg : this, args);\n  }\n\n  return wrapper;\n}\n\nexport default createPartial;","map":{"version":3,"names":["apply","createCtor","root","WRAP_BIND_FLAG","createPartial","func","bitmask","thisArg","partials","isBind","Ctor","wrapper","argsIndex","argsLength","arguments","length","leftIndex","leftLength","args","Array","fn"],"sources":["C:/Users/laoshuaib/Desktop/mongo_exp_fro/node_modules/lodash-es/_createPartial.js"],"sourcesContent":["import apply from './_apply.js';\nimport createCtor from './_createCtor.js';\nimport root from './_root.js';\n\n/** Used to compose bitmasks for function metadata. */\nvar WRAP_BIND_FLAG = 1;\n\n/**\n * Creates a function that wraps `func` to invoke it with the `this` binding\n * of `thisArg` and `partials` prepended to the arguments it receives.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {number} bitmask The bitmask flags. See `createWrap` for more details.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} partials The arguments to prepend to those provided to\n *  the new function.\n * @returns {Function} Returns the new wrapped function.\n */\nfunction createPartial(func, bitmask, thisArg, partials) {\n  var isBind = bitmask & WRAP_BIND_FLAG,\n      Ctor = createCtor(func);\n\n  function wrapper() {\n    var argsIndex = -1,\n        argsLength = arguments.length,\n        leftIndex = -1,\n        leftLength = partials.length,\n        args = Array(leftLength + argsLength),\n        fn = (this && this !== root && this instanceof wrapper) ? Ctor : func;\n\n    while (++leftIndex < leftLength) {\n      args[leftIndex] = partials[leftIndex];\n    }\n    while (argsLength--) {\n      args[leftIndex++] = arguments[++argsIndex];\n    }\n    return apply(fn, isBind ? thisArg : this, args);\n  }\n  return wrapper;\n}\n\nexport default createPartial;\n"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,IAAP,MAAiB,YAAjB;AAEA;;AACA,IAAIC,cAAc,GAAG,CAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,aAAT,CAAuBC,IAAvB,EAA6BC,OAA7B,EAAsCC,OAAtC,EAA+CC,QAA/C,EAAyD;EACvD,IAAIC,MAAM,GAAGH,OAAO,GAAGH,cAAvB;EAAA,IACIO,IAAI,GAAGT,UAAU,CAACI,IAAD,CADrB;;EAGA,SAASM,OAAT,GAAmB;IACjB,IAAIC,SAAS,GAAG,CAAC,CAAjB;IAAA,IACIC,UAAU,GAAGC,SAAS,CAACC,MAD3B;IAAA,IAEIC,SAAS,GAAG,CAAC,CAFjB;IAAA,IAGIC,UAAU,GAAGT,QAAQ,CAACO,MAH1B;IAAA,IAIIG,IAAI,GAAGC,KAAK,CAACF,UAAU,GAAGJ,UAAd,CAJhB;IAAA,IAKIO,EAAE,GAAI,QAAQ,SAASlB,IAAjB,IAAyB,gBAAgBS,OAA1C,GAAqDD,IAArD,GAA4DL,IALrE;;IAOA,OAAO,EAAEW,SAAF,GAAcC,UAArB,EAAiC;MAC/BC,IAAI,CAACF,SAAD,CAAJ,GAAkBR,QAAQ,CAACQ,SAAD,CAA1B;IACD;;IACD,OAAOH,UAAU,EAAjB,EAAqB;MACnBK,IAAI,CAACF,SAAS,EAAV,CAAJ,GAAoBF,SAAS,CAAC,EAAEF,SAAH,CAA7B;IACD;;IACD,OAAOZ,KAAK,CAACoB,EAAD,EAAKX,MAAM,GAAGF,OAAH,GAAa,IAAxB,EAA8BW,IAA9B,CAAZ;EACD;;EACD,OAAOP,OAAP;AACD;;AAED,eAAeP,aAAf"},"metadata":{},"sourceType":"module"}