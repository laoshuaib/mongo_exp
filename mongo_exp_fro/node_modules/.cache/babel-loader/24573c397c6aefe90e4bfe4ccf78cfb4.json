{"ast":null,"code":"import { defineComponent, inject, h } from 'vue';\nimport '../../../hooks/index.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElTreeNodeContent\",\n  props: {\n    node: {\n      type: Object,\n      required: true\n    },\n    renderContent: Function\n  },\n\n  setup(props) {\n    const ns = useNamespace(\"tree\");\n    const nodeInstance = inject(\"NodeInstance\");\n    const tree = inject(\"RootTree\");\n    return () => {\n      const node = props.node;\n      const {\n        data,\n        store\n      } = node;\n      return props.renderContent ? props.renderContent(h, {\n        _self: nodeInstance,\n        node,\n        data,\n        store\n      }) : tree.ctx.slots.default ? tree.ctx.slots.default({\n        node,\n        data\n      }) : h(\"span\", {\n        class: ns.be(\"node\", \"label\")\n      }, [node.label]);\n    };\n  }\n\n});\n\nvar NodeContent = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tree/src/tree-node-content.vue\"]]);\n\nexport { NodeContent as default };","map":{"version":3,"mappings":";;;;;AAQA,MAAKA,YAAaC,eAAa;EAC7BC,IAAM,qBADuB;EAE7BC,KAAO;IACLC,IAAM;MACJC,IAAM,QADF;MAEJC,QAAU;IAFN,CADD;IAKLC,aAAe;EALV,CAFsB;;EAS7BC,MAAML,KAAN,EAAa;IACL,WAAKM,aAAa,MAAb,CAAL;IACA,qBAAeC,OAAkC,cAAlC,CAAf;IACA,aAAOA,OAAqB,UAArB,CAAP;IACN,OAAO,MAAM;MACX,MAAMN,OAAOD,KAAM,KAAnB;MACM;QAAEQ,IAAF;QAAQC;MAAR,IAAkBR,IAAlB;MACN,OAAOD,MAAMI,aAAN,GACHJ,MAAMI,aAAN,CAAoBM,CAApB,EAAuB;QAAEC,KAAO,cAAT;QAAuBV,IAAvB;QAA6BO,IAA7B;QAAmCC;MAAnC,CAAvB,CADG,GAEHG,KAAKC,GAAL,CAASC,KAAT,CAAeC,OAAf,GACAH,IAAK,IAAL,CAASE,KAAT,CAAeC,OAAf,CAAuB;QAAEd,IAAF;QAAQO;MAAR,CAAvB,CADA,GAEAE,EAAE,MAAF,EAAU;QAAEM,OAAOC,EAAG,GAAH,CAAM,MAAN,EAAc,OAAd;MAAT,CAAV,EAA6C,CAAChB,KAAKiB,KAAN,CAA7C,CAJJ;IAKF,CARA;EASF;;AAtB6B,EAA/B","names":["_sfc_main","defineComponent","name","props","node","type","required","renderContent","setup","useNamespace","inject","data","store","h","_self","tree","ctx","slots","default","class","ns","label"],"sources":["../../../../../../packages/components/tree/src/tree-node-content.vue"],"sourcesContent":["<script lang=\"ts\">\n// @ts-nocheck\nimport { defineComponent, h, inject } from 'vue'\n\nimport { useNamespace } from '@element-plus/hooks'\nimport type { ComponentInternalInstance } from 'vue'\nimport type { RootTreeType } from './tree.type'\n\nexport default defineComponent({\n  name: 'ElTreeNodeContent',\n  props: {\n    node: {\n      type: Object,\n      required: true,\n    },\n    renderContent: Function,\n  },\n  setup(props) {\n    const ns = useNamespace('tree')\n    const nodeInstance = inject<ComponentInternalInstance>('NodeInstance')\n    const tree = inject<RootTreeType>('RootTree')\n    return () => {\n      const node = props.node\n      const { data, store } = node\n      return props.renderContent\n        ? props.renderContent(h, { _self: nodeInstance, node, data, store })\n        : tree.ctx.slots.default\n        ? tree.ctx.slots.default({ node, data })\n        : h('span', { class: ns.be('node', 'label') }, [node.label])\n    }\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}