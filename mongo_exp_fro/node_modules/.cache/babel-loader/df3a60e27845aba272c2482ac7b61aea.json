{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport \"core-js/modules/es.array.includes.js\";\nimport { watch } from 'vue';\nimport { debounce } from 'lodash-unified';\nimport useStore from './index.mjs';\nconst InitialStateMap = {\n  rowKey: \"rowKey\",\n  defaultExpandAll: \"defaultExpandAll\",\n  selectOnIndeterminate: \"selectOnIndeterminate\",\n  indent: \"indent\",\n  lazy: \"lazy\",\n  data: \"data\",\n  [\"treeProps.hasChildren\"]: {\n    key: \"lazyColumnIdentifier\",\n    default: \"hasChildren\"\n  },\n  [\"treeProps.children\"]: {\n    key: \"childrenColumnName\",\n    default: \"children\"\n  }\n};\n\nfunction createStore(table, props) {\n  if (!table) {\n    throw new Error(\"Table is required.\");\n  }\n\n  const store = useStore();\n  store.toggleAllSelection = debounce(store._toggleAllSelection, 10);\n  Object.keys(InitialStateMap).forEach(key => {\n    handleValue(getArrKeysValue(props, key), key, store);\n  });\n  proxyTableProps(store, props);\n  return store;\n}\n\nfunction proxyTableProps(store, props) {\n  Object.keys(InitialStateMap).forEach(key => {\n    watch(() => getArrKeysValue(props, key), value => {\n      handleValue(value, key, store);\n    });\n  });\n}\n\nfunction handleValue(value, propsKey, store) {\n  let newVal = value;\n  let storeKey = InitialStateMap[propsKey];\n\n  if (typeof InitialStateMap[propsKey] === \"object\") {\n    storeKey = storeKey.key;\n    newVal = newVal || InitialStateMap[propsKey].default;\n  }\n\n  store.states[storeKey].value = newVal;\n}\n\nfunction getArrKeysValue(props, keys) {\n  if (keys.includes(\".\")) {\n    const keyList = keys.split(\".\");\n    let value = props;\n    keyList.forEach(key => {\n      value = value[key];\n    });\n    return value;\n  } else {\n    return props[keys];\n  }\n}\n\nexport { createStore };","map":{"version":3,"mappings":";;;;;AAGA,MAAMA,eAAe,GAAG;EACtBC,MAAM,EAAE,QADc;EAEtBC,gBAAgB,EAAE,kBAFI;EAGtBC,qBAAqB,EAAE,uBAHD;EAItBC,MAAM,EAAE,QAJc;EAKtBC,IAAI,EAAE,MALgB;EAMtBC,IAAI,EAAE,MANgB;EAOtB,CAAC,uBAAD,GAA2B;IACzBC,GAAG,EAAE,sBADoB;IAEzBC,OAAO,EAAE;EAFgB,CAPL;EAWtB,CAAC,oBAAD,GAAwB;IACtBD,GAAG,EAAE,oBADiB;IAEtBC,OAAO,EAAE;EAFa;AAXF,CAAxB;;AAgBO,SAASC,WAAT,CAAqBC,KAArB,EAA4BC,KAA5B,EAAmC;EACxC,IAAI,CAACD,KAAL,EAAY;IACV,MAAM,IAAIE,KAAJ,CAAU,oBAAV,CAAN;EACD;;EACD,MAAMC,KAAK,GAAGC,QAAQ,EAAtB;EACAD,KAAK,CAACE,kBAAN,GAA2BC,QAAQ,CAACH,KAAK,CAACI,mBAAP,EAA4B,EAA5B,CAAnC;EACAC,MAAM,CAACC,IAAP,CAAYnB,eAAZ,EAA6BoB,OAA7B,CAAsCb,GAAD,IAAS;IAC5Cc,WAAW,CAACC,eAAe,CAACX,KAAD,EAAQJ,GAAR,CAAhB,EAA8BA,GAA9B,EAAmCM,KAAnC,CAAX;EACD,CAFD;EAGAU,eAAe,CAACV,KAAD,EAAQF,KAAR,CAAf;EACA,OAAOE,KAAP;AACD;;AACD,SAASU,eAAT,CAAyBV,KAAzB,EAAgCF,KAAhC,EAAuC;EACrCO,MAAM,CAACC,IAAP,CAAYnB,eAAZ,EAA6BoB,OAA7B,CAAsCb,GAAD,IAAS;IAC5CiB,KAAK,CAAC,MAAMF,eAAe,CAACX,KAAD,EAAQJ,GAAR,CAAtB,EAAqCkB,KAAD,IAAW;MAClDJ,WAAW,CAACI,KAAD,EAAQlB,GAAR,EAAaM,KAAb,CAAX;IACD,CAFI,CAAL;EAGD,CAJD;AAKD;;AACD,SAASQ,WAAT,CAAqBI,KAArB,EAA4BC,QAA5B,EAAsCb,KAAtC,EAA6C;EAC3C,IAAIc,MAAM,GAAGF,KAAb;EACA,IAAIG,QAAQ,GAAG5B,eAAe,CAAC0B,QAAD,CAA9B;;EACA,IAAI,OAAO1B,eAAe,CAAC0B,QAAD,CAAtB,KAAqC,QAAzC,EAAmD;IACjDE,QAAQ,GAAGA,QAAQ,CAACrB,GAApB;IACAoB,MAAM,GAAGA,MAAM,IAAI3B,eAAe,CAAC0B,QAAD,CAAf,CAA0BlB,OAA7C;EACD;;EACDK,KAAK,CAACgB,MAAN,CAAaD,QAAb,EAAuBH,KAAvB,GAA+BE,MAA/B;AACD;;AACD,SAASL,eAAT,CAAyBX,KAAzB,EAAgCQ,IAAhC,EAAsC;EACpC,IAAIA,IAAI,CAACW,QAAL,CAAc,GAAd,CAAJ,EAAwB;IACtB,MAAMC,OAAO,GAAGZ,IAAI,CAACa,KAAL,CAAW,GAAX,CAAhB;IACA,IAAIP,KAAK,GAAGd,KAAZ;IACAoB,OAAO,CAACX,OAAR,CAAiBb,GAAD,IAAS;MACvBkB,KAAK,GAAGA,KAAK,CAAClB,GAAD,CAAb;IACD,CAFD;IAGA,OAAOkB,KAAP;EACD,CAPD,MAOO;IACL,OAAOd,KAAK,CAACQ,IAAD,CAAZ;EACD;AACH","names":["InitialStateMap","rowKey","defaultExpandAll","selectOnIndeterminate","indent","lazy","data","key","default","createStore","table","props","Error","store","useStore","toggleAllSelection","debounce","_toggleAllSelection","Object","keys","forEach","handleValue","getArrKeysValue","proxyTableProps","watch","value","propsKey","newVal","storeKey","states","includes","keyList","split"],"sources":["../../../../../../../packages/components/table/src/store/helper.ts"],"sourcesContent":["// @ts-nocheck\nimport { watch } from 'vue'\nimport { debounce } from 'lodash-unified'\nimport useStore from '.'\n\nimport type { Store } from '.'\nimport type { Table, TableProps } from '../table/defaults'\n\nconst InitialStateMap = {\n  rowKey: 'rowKey',\n  defaultExpandAll: 'defaultExpandAll',\n  selectOnIndeterminate: 'selectOnIndeterminate',\n  indent: 'indent',\n  lazy: 'lazy',\n  data: 'data',\n  ['treeProps.hasChildren']: {\n    key: 'lazyColumnIdentifier',\n    default: 'hasChildren',\n  },\n  ['treeProps.children']: {\n    key: 'childrenColumnName',\n    default: 'children',\n  },\n}\n\nexport function createStore<T>(table: Table<T>, props: TableProps<T>) {\n  if (!table) {\n    throw new Error('Table is required.')\n  }\n\n  const store = useStore<T>()\n  // fix https://github.com/ElemeFE/element/issues/14075\n  // related pr https://github.com/ElemeFE/element/pull/14146\n  store.toggleAllSelection = debounce(store._toggleAllSelection, 10)\n  Object.keys(InitialStateMap).forEach((key) => {\n    handleValue(getArrKeysValue(props, key), key, store)\n  })\n  proxyTableProps(store, props)\n  return store\n}\n\nfunction proxyTableProps<T>(store: Store<T>, props: TableProps<T>) {\n  Object.keys(InitialStateMap).forEach((key) => {\n    watch(\n      () => getArrKeysValue(props, key),\n      (value) => {\n        handleValue(value, key, store)\n      }\n    )\n  })\n}\n\nfunction handleValue<T>(value, propsKey: string, store: Store<T>) {\n  let newVal = value\n  let storeKey = InitialStateMap[propsKey]\n  if (typeof InitialStateMap[propsKey] === 'object') {\n    storeKey = storeKey.key\n    newVal = newVal || InitialStateMap[propsKey].default\n  }\n  store.states[storeKey].value = newVal\n}\n\nfunction getArrKeysValue<T>(props: TableProps<T>, keys: string) {\n  if (keys.includes('.')) {\n    const keyList = keys.split('.')\n    let value = props\n    keyList.forEach((key) => {\n      value = value[key]\n    })\n    return value\n  } else {\n    return props[keys]\n  }\n}\n"]},"metadata":{},"sourceType":"module"}