{"ast":null,"code":"import { ref, onMounted, watch } from 'vue';\n\nconst useThrottleRender = (loading, throttle = 0) => {\n  if (throttle === 0) return loading;\n  const throttled = ref(false);\n  let timeoutHandle = 0;\n\n  const dispatchThrottling = () => {\n    if (timeoutHandle) {\n      clearTimeout(timeoutHandle);\n    }\n\n    timeoutHandle = window.setTimeout(() => {\n      throttled.value = loading.value;\n    }, throttle);\n  };\n\n  onMounted(dispatchThrottling);\n  watch(() => loading.value, val => {\n    if (val) {\n      dispatchThrottling();\n    } else {\n      throttled.value = val;\n    }\n  });\n  return throttled;\n};\n\nexport { useThrottleRender };","map":{"version":3,"mappings":";;AACY,MAACA,iBAAiB,GAAG,CAACC,OAAD,EAAUC,QAAQ,GAAG,CAArB,KAA2B;EAC1D,IAAIA,QAAQ,KAAK,CAAjB,EACE,OAAOD,OAAP;EACF,MAAME,SAAS,GAAGC,GAAG,CAAC,KAAD,CAArB;EACA,IAAIC,aAAa,GAAG,CAApB;;EACA,MAAMC,kBAAkB,GAAG,MAAM;IAC/B,IAAID,aAAJ,EAAmB;MACjBE,YAAY,CAACF,aAAD,CAAZ;IACD;;IACDA,aAAa,GAAGG,MAAM,CAACC,UAAP,CAAkB,MAAM;MACtCN,SAAS,CAACO,KAAV,GAAkBT,OAAO,CAACS,KAA1B;IACD,CAFe,EAEbR,QAFa,CAAhB;EAGD,CAPD;;EAQAS,SAAS,CAACL,kBAAD,CAAT;EACAM,KAAK,CAAC,MAAMX,OAAO,CAACS,KAAf,EAAuBG,GAAD,IAAS;IAClC,IAAIA,GAAJ,EAAS;MACPP,kBAAkB;IACnB,CAFD,MAEO;MACLH,SAAS,CAACO,KAAV,GAAkBG,GAAlB;IACD;EACF,CANI,CAAL;EAOA,OAAOV,SAAP;AACF,CAtBY","names":["useThrottleRender","loading","throttle","throttled","ref","timeoutHandle","dispatchThrottling","clearTimeout","window","setTimeout","value","onMounted","watch","val"],"sources":["../../../../../packages/hooks/use-throttle-render/index.ts"],"sourcesContent":["import { onMounted, ref, watch } from 'vue'\n\nimport type { Ref } from 'vue'\n\nexport const useThrottleRender = (loading: Ref<boolean>, throttle = 0) => {\n  if (throttle === 0) return loading\n  const throttled = ref(false)\n  let timeoutHandle = 0\n\n  const dispatchThrottling = () => {\n    if (timeoutHandle) {\n      clearTimeout(timeoutHandle)\n    }\n    timeoutHandle = window.setTimeout(() => {\n      throttled.value = loading.value\n    }, throttle)\n  }\n  onMounted(dispatchThrottling)\n\n  watch(\n    () => loading.value,\n    (val) => {\n      if (val) {\n        dispatchThrottling()\n      } else {\n        throttled.value = val\n      }\n    }\n  )\n  return throttled\n}\n"]},"metadata":{},"sourceType":"module"}