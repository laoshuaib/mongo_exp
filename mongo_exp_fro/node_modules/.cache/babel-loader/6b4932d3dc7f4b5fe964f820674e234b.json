{"ast":null,"code":"import '../../../utils/index.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nconst progressProps = buildProps({\n  type: {\n    type: String,\n    default: \"line\",\n    values: [\"line\", \"circle\", \"dashboard\"]\n  },\n  percentage: {\n    type: Number,\n    default: 0,\n    validator: val => val >= 0 && val <= 100\n  },\n  status: {\n    type: String,\n    default: \"\",\n    values: [\"\", \"success\", \"exception\", \"warning\"]\n  },\n  indeterminate: {\n    type: Boolean,\n    default: false\n  },\n  duration: {\n    type: Number,\n    default: 3\n  },\n  strokeWidth: {\n    type: Number,\n    default: 6\n  },\n  strokeLinecap: {\n    type: definePropType(String),\n    default: \"round\"\n  },\n  textInside: {\n    type: Boolean,\n    default: false\n  },\n  width: {\n    type: Number,\n    default: 126\n  },\n  showText: {\n    type: Boolean,\n    default: true\n  },\n  color: {\n    type: definePropType([String, Array, Function]),\n    default: \"\"\n  },\n  format: {\n    type: definePropType(Function),\n    default: percentage => `${percentage}%`\n  }\n});\nexport { progressProps };","map":{"version":3,"mappings":";;AACY,MAACA,aAAa,GAAGC,UAAU,CAAC;EACtCC,IAAI,EAAE;IACJA,IAAI,EAAEC,MADF;IAEJC,OAAO,EAAE,MAFL;IAGJC,MAAM,EAAE,CAAC,MAAD,EAAS,QAAT,EAAmB,WAAnB;EAHJ,CADgC;EAMtCC,UAAU,EAAE;IACVJ,IAAI,EAAEK,MADI;IAEVH,OAAO,EAAE,CAFC;IAGVI,SAAS,EAAGC,GAAD,IAASA,GAAG,IAAI,CAAP,IAAYA,GAAG,IAAI;EAH7B,CAN0B;EAWtCC,MAAM,EAAE;IACNR,IAAI,EAAEC,MADA;IAENC,OAAO,EAAE,EAFH;IAGNC,MAAM,EAAE,CAAC,EAAD,EAAK,SAAL,EAAgB,WAAhB,EAA6B,SAA7B;EAHF,CAX8B;EAgBtCM,aAAa,EAAE;IACbT,IAAI,EAAEU,OADO;IAEbR,OAAO,EAAE;EAFI,CAhBuB;EAoBtCS,QAAQ,EAAE;IACRX,IAAI,EAAEK,MADE;IAERH,OAAO,EAAE;EAFD,CApB4B;EAwBtCU,WAAW,EAAE;IACXZ,IAAI,EAAEK,MADK;IAEXH,OAAO,EAAE;EAFE,CAxByB;EA4BtCW,aAAa,EAAE;IACbb,IAAI,EAAEc,cAAc,CAACb,MAAD,CADP;IAEbC,OAAO,EAAE;EAFI,CA5BuB;EAgCtCa,UAAU,EAAE;IACVf,IAAI,EAAEU,OADI;IAEVR,OAAO,EAAE;EAFC,CAhC0B;EAoCtCc,KAAK,EAAE;IACLhB,IAAI,EAAEK,MADD;IAELH,OAAO,EAAE;EAFJ,CApC+B;EAwCtCe,QAAQ,EAAE;IACRjB,IAAI,EAAEU,OADE;IAERR,OAAO,EAAE;EAFD,CAxC4B;EA4CtCgB,KAAK,EAAE;IACLlB,IAAI,EAAEc,cAAc,CAAC,CACnBb,MADmB,EAEnBkB,KAFmB,EAGnBC,QAHmB,CAAD,CADf;IAMLlB,OAAO,EAAE;EANJ,CA5C+B;EAoDtCmB,MAAM,EAAE;IACNrB,IAAI,EAAEc,cAAc,CAACM,QAAD,CADd;IAENlB,OAAO,EAAGE,UAAD,IAAiB,GAAEA,UAAW;EAFjC;AApD8B,CAAD,CAA3B","names":["progressProps","buildProps","type","String","default","values","percentage","Number","validator","val","status","indeterminate","Boolean","duration","strokeWidth","strokeLinecap","definePropType","textInside","width","showText","color","Array","Function","format"],"sources":["../../../../../../packages/components/progress/src/progress.ts"],"sourcesContent":["import { buildProps, definePropType } from '@element-plus/utils'\nimport type { ExtractPropTypes, SVGAttributes } from 'vue'\nimport type Progress from './progress.vue'\n\nexport type ProgressColor = { color: string; percentage: number }\nexport type ProgressFn = (percentage: number) => string\n\nexport const progressProps = buildProps({\n  type: {\n    type: String,\n    default: 'line',\n    values: ['line', 'circle', 'dashboard'],\n  },\n  percentage: {\n    type: Number,\n    default: 0,\n    validator: (val: number): boolean => val >= 0 && val <= 100,\n  },\n  status: {\n    type: String,\n    default: '',\n    values: ['', 'success', 'exception', 'warning'],\n  },\n  indeterminate: {\n    type: Boolean,\n    default: false,\n  },\n  duration: {\n    type: Number,\n    default: 3,\n  },\n  strokeWidth: {\n    type: Number,\n    default: 6,\n  },\n  strokeLinecap: {\n    type: definePropType<NonNullable<SVGAttributes['stroke-linecap']>>(String),\n    default: 'round',\n  },\n  textInside: {\n    type: Boolean,\n    default: false,\n  },\n  width: {\n    type: Number,\n    default: 126,\n  },\n  showText: {\n    type: Boolean,\n    default: true,\n  },\n  color: {\n    type: definePropType<string | ProgressColor[] | ProgressFn>([\n      String,\n      Array,\n      Function,\n    ]),\n    default: '',\n  },\n  format: {\n    type: definePropType<ProgressFn>(Function),\n    default: (percentage: number): string => `${percentage}%`,\n  },\n} as const)\n\nexport type ProgressProps = ExtractPropTypes<typeof progressProps>\nexport type ProgressInstance = InstanceType<typeof Progress>\n"]},"metadata":{},"sourceType":"module"}