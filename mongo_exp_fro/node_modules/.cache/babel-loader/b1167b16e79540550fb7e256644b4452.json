{"ast":null,"code":"import { isClient } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nimport { buildProps, definePropType } from '../../../utils/vue/props/runtime.mjs';\nimport { iconPropType } from '../../../utils/vue/icon.mjs';\nconst messageTypes = [\"success\", \"info\", \"warning\", \"error\"];\nconst messageDefaults = mutable({\n  customClass: \"\",\n  center: false,\n  dangerouslyUseHTMLString: false,\n  duration: 3e3,\n  icon: \"\",\n  id: \"\",\n  message: \"\",\n  onClose: void 0,\n  showClose: false,\n  type: \"info\",\n  offset: 16,\n  zIndex: 0,\n  grouping: false,\n  repeatNum: 1,\n  appendTo: isClient ? document.body : void 0\n});\nconst messageProps = buildProps({\n  customClass: {\n    type: String,\n    default: messageDefaults.customClass\n  },\n  center: {\n    type: Boolean,\n    default: messageDefaults.center\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: messageDefaults.dangerouslyUseHTMLString\n  },\n  duration: {\n    type: Number,\n    default: messageDefaults.duration\n  },\n  icon: {\n    type: iconPropType,\n    default: messageDefaults.icon\n  },\n  id: {\n    type: String,\n    default: messageDefaults.id\n  },\n  message: {\n    type: definePropType([String, Object, Function]),\n    default: messageDefaults.message\n  },\n  onClose: {\n    type: definePropType(Function),\n    required: false\n  },\n  showClose: {\n    type: Boolean,\n    default: messageDefaults.showClose\n  },\n  type: {\n    type: String,\n    values: messageTypes,\n    default: messageDefaults.type\n  },\n  offset: {\n    type: Number,\n    default: messageDefaults.offset\n  },\n  zIndex: {\n    type: Number,\n    default: messageDefaults.zIndex\n  },\n  grouping: {\n    type: Boolean,\n    default: messageDefaults.grouping\n  },\n  repeatNum: {\n    type: Number,\n    default: messageDefaults.repeatNum\n  }\n});\nconst messageEmits = {\n  destroy: () => true\n};\nexport { messageDefaults, messageEmits, messageProps, messageTypes };","map":{"version":3,"mappings":";;;;;AAOY,MAACA,YAAY,GAAG,CAAC,SAAD,EAAY,MAAZ,EAAoB,SAApB,EAA+B,OAA/B,CAAhB;AACA,MAACC,eAAe,GAAGC,OAAO,CAAC;EACrCC,WAAW,EAAE,EADwB;EAErCC,MAAM,EAAE,KAF6B;EAGrCC,wBAAwB,EAAE,KAHW;EAIrCC,QAAQ,EAAE,GAJ2B;EAKrCC,IAAI,EAAE,EAL+B;EAMrCC,EAAE,EAAE,EANiC;EAOrCC,OAAO,EAAE,EAP4B;EAQrCC,OAAO,EAAE,KAAK,CARuB;EASrCC,SAAS,EAAE,KAT0B;EAUrCC,IAAI,EAAE,MAV+B;EAWrCC,MAAM,EAAE,EAX6B;EAYrCC,MAAM,EAAE,CAZ6B;EAarCC,QAAQ,EAAE,KAb2B;EAcrCC,SAAS,EAAE,CAd0B;EAerCC,QAAQ,EAAEC,QAAQ,GAAGC,QAAQ,CAACC,IAAZ,GAAmB,KAAK;AAfL,CAAD,CAA1B;AAiBA,MAACC,YAAY,GAAGC,UAAU,CAAC;EACrCnB,WAAW,EAAE;IACXS,IAAI,EAAEW,MADK;IAEXC,OAAO,EAAEvB,eAAe,CAACE;EAFd,CADwB;EAKrCC,MAAM,EAAE;IACNQ,IAAI,EAAEa,OADA;IAEND,OAAO,EAAEvB,eAAe,CAACG;EAFnB,CAL6B;EASrCC,wBAAwB,EAAE;IACxBO,IAAI,EAAEa,OADkB;IAExBD,OAAO,EAAEvB,eAAe,CAACI;EAFD,CATW;EAarCC,QAAQ,EAAE;IACRM,IAAI,EAAEc,MADE;IAERF,OAAO,EAAEvB,eAAe,CAACK;EAFjB,CAb2B;EAiBrCC,IAAI,EAAE;IACJK,IAAI,EAAEe,YADF;IAEJH,OAAO,EAAEvB,eAAe,CAACM;EAFrB,CAjB+B;EAqBrCC,EAAE,EAAE;IACFI,IAAI,EAAEW,MADJ;IAEFC,OAAO,EAAEvB,eAAe,CAACO;EAFvB,CArBiC;EAyBrCC,OAAO,EAAE;IACPG,IAAI,EAAEgB,cAAc,CAAC,CACnBL,MADmB,EAEnBM,MAFmB,EAGnBC,QAHmB,CAAD,CADb;IAMPN,OAAO,EAAEvB,eAAe,CAACQ;EANlB,CAzB4B;EAiCrCC,OAAO,EAAE;IACPE,IAAI,EAAEgB,cAAc,CAACE,QAAD,CADb;IAEPC,QAAQ,EAAE;EAFH,CAjC4B;EAqCrCpB,SAAS,EAAE;IACTC,IAAI,EAAEa,OADG;IAETD,OAAO,EAAEvB,eAAe,CAACU;EAFhB,CArC0B;EAyCrCC,IAAI,EAAE;IACJA,IAAI,EAAEW,MADF;IAEJS,MAAM,EAAEhC,YAFJ;IAGJwB,OAAO,EAAEvB,eAAe,CAACW;EAHrB,CAzC+B;EA8CrCC,MAAM,EAAE;IACND,IAAI,EAAEc,MADA;IAENF,OAAO,EAAEvB,eAAe,CAACY;EAFnB,CA9C6B;EAkDrCC,MAAM,EAAE;IACNF,IAAI,EAAEc,MADA;IAENF,OAAO,EAAEvB,eAAe,CAACa;EAFnB,CAlD6B;EAsDrCC,QAAQ,EAAE;IACRH,IAAI,EAAEa,OADE;IAERD,OAAO,EAAEvB,eAAe,CAACc;EAFjB,CAtD2B;EA0DrCC,SAAS,EAAE;IACTJ,IAAI,EAAEc,MADG;IAETF,OAAO,EAAEvB,eAAe,CAACe;EAFhB;AA1D0B,CAAD,CAA1B;AA+DA,MAACiB,YAAY,GAAG;EAC1BC,OAAO,EAAE,MAAM;AADW,CAAhB","names":["messageTypes","messageDefaults","mutable","customClass","center","dangerouslyUseHTMLString","duration","icon","id","message","onClose","showClose","type","offset","zIndex","grouping","repeatNum","appendTo","isClient","document","body","messageProps","buildProps","String","default","Boolean","Number","iconPropType","definePropType","Object","Function","required","values","messageEmits","destroy"],"sources":["../../../../../../packages/components/message/src/message.ts"],"sourcesContent":["import { isClient } from '@vueuse/core'\nimport {\n  buildProps,\n  definePropType,\n  iconPropType,\n  mutable,\n} from '@element-plus/utils'\nimport type { AppContext, ExtractPropTypes, VNode } from 'vue'\nimport type { Mutable } from '@element-plus/utils'\nimport type MessageConstructor from './message.vue'\n\nexport const messageTypes = ['success', 'info', 'warning', 'error'] as const\n\nexport type messageType = typeof messageTypes[number]\n\nexport interface MessageConfigContext {\n  max?: number\n}\n\nexport const messageDefaults = mutable({\n  customClass: '',\n  center: false,\n  dangerouslyUseHTMLString: false,\n  duration: 3000,\n  icon: '',\n  id: '',\n  message: '',\n  onClose: undefined,\n  showClose: false,\n  type: 'info',\n  offset: 16,\n  zIndex: 0,\n  grouping: false,\n  repeatNum: 1,\n  appendTo: isClient ? document.body : (undefined as never),\n} as const)\n\nexport const messageProps = buildProps({\n  customClass: {\n    type: String,\n    default: messageDefaults.customClass,\n  },\n  center: {\n    type: Boolean,\n    default: messageDefaults.center,\n  },\n  dangerouslyUseHTMLString: {\n    type: Boolean,\n    default: messageDefaults.dangerouslyUseHTMLString,\n  },\n  duration: {\n    type: Number,\n    default: messageDefaults.duration,\n  },\n  icon: {\n    type: iconPropType,\n    default: messageDefaults.icon,\n  },\n  id: {\n    type: String,\n    default: messageDefaults.id,\n  },\n  message: {\n    type: definePropType<string | VNode | (() => VNode)>([\n      String,\n      Object,\n      Function,\n    ]),\n    default: messageDefaults.message,\n  },\n  onClose: {\n    type: definePropType<() => void>(Function),\n    required: false,\n  },\n  showClose: {\n    type: Boolean,\n    default: messageDefaults.showClose,\n  },\n  type: {\n    type: String,\n    values: messageTypes,\n    default: messageDefaults.type,\n  },\n  offset: {\n    type: Number,\n    default: messageDefaults.offset,\n  },\n  zIndex: {\n    type: Number,\n    default: messageDefaults.zIndex,\n  },\n  grouping: {\n    type: Boolean,\n    default: messageDefaults.grouping,\n  },\n  repeatNum: {\n    type: Number,\n    default: messageDefaults.repeatNum,\n  },\n} as const)\nexport type MessageProps = ExtractPropTypes<typeof messageProps>\n\nexport const messageEmits = {\n  destroy: () => true,\n}\nexport type MessageEmits = typeof messageEmits\n\nexport type MessageInstance = InstanceType<typeof MessageConstructor>\n\nexport type MessageOptions = Partial<\n  Mutable<\n    Omit<MessageProps, 'id'> & {\n      appendTo?: HTMLElement | string\n    }\n  >\n>\nexport type MessageParams = MessageOptions | MessageOptions['message']\nexport type MessageParamsNormalized = Omit<MessageProps, 'id'> & {\n  appendTo: HTMLElement\n}\nexport type MessageOptionsWithType = Omit<MessageOptions, 'type'>\nexport type MessageParamsWithType =\n  | MessageOptionsWithType\n  | MessageOptions['message']\n\nexport interface MessageHandler {\n  close: () => void\n}\n\nexport type MessageFn = {\n  (options?: MessageParams, appContext?: null | AppContext): MessageHandler\n  closeAll(type?: messageType): void\n}\nexport type MessageTypedFn = (\n  options?: MessageParamsWithType,\n  appContext?: null | AppContext\n) => MessageHandler\n\nexport interface Message extends MessageFn {\n  success: MessageTypedFn\n  warning: MessageTypedFn\n  info: MessageTypedFn\n  error: MessageTypedFn\n}\n"]},"metadata":{},"sourceType":"module"}