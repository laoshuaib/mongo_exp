{"ast":null,"code":"import \"core-js/modules/es.error.cause.js\";\nimport request from \"../../untils/request\";\nexport default {\n  name: \"managerHeader\",\n  components: {},\n\n  data() {\n    let validatePassword = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== this.originalPassword) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n\n    return {\n      personDialogVisible: false,\n      //控制个人信息弹窗\n      passwordDialogVisible: false,\n      //控制修改密码弹窗\n      form: {},\n      //用于获取user\n      originalPassword: null,\n      newPassword: null,\n      newPasswords: null,\n      rules: {\n        newPassword: [{\n          pattern: /^(?!\\d+$)(?![a-zA-Z]+$)(?![^\\da-zA-Z]+$)([^\\u4e00-\\u9fa5\\s]){8,16}$/,\n          required: true,\n          message: \"只能输入8-16位英文字母、数字或者符号（除空格），且字母、数字和标点符号至少包含两种\",\n          trigger: \"blur\"\n        }],\n        newPasswords: [{\n          validator: validatePassword,\n          trigger: \"blur\"\n        }]\n      }\n    };\n  },\n\n  created() {\n    let str = sessionStorage.getItem(\"user\");\n    this.form = JSON.parse(str);\n  },\n\n  methods: {\n    sexTranslate(sex) {\n      if (sex === 0) return \"男\";\n      if (sex === 1) return \"女\";\n    },\n\n    save() {\n      request.post(\"/user/update\", this.form).then(res => {\n        console.log(res);\n\n        if (res.code === 0) {\n          this.$message({\n            type: \"success\",\n            message: \"保存成功\"\n          });\n          sessionStorage.removeItem(\"user\");\n          sessionStorage.setItem(\"user\", JSON.stringify(res.data)); //缓存用户信息\n\n          let str = sessionStorage.getItem(\"user\");\n          this.form = JSON.parse(str);\n          this.personDialogVisible = false;\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg\n          });\n        }\n      });\n    }\n\n  }\n};","map":{"version":3,"mappings":";AAwHA,OAAOA,OAAP,MAAoB,sBAApB;AAEA,eAAe;EACbC,IAAI,EAAE,eADO;EAEbC,UAAU,EAAE,EAFC;;EAGbC,IAAI,GAAG;IACL,IAAIC,gBAAe,GAAI,CAACC,IAAD,EAAOC,KAAP,EAAcC,QAAd,KAA2B;MAChD,IAAID,KAAI,KAAM,EAAd,EAAkB;QAChBC,QAAQ,CAAC,IAAIC,KAAJ,CAAU,SAAV,CAAD,CAAR;MACF,CAFA,MAEO,IAAIF,KAAI,KAAM,KAAKG,gBAAnB,EAAqC;QAC1CF,QAAQ,CAAC,IAAIC,KAAJ,CAAU,YAAV,CAAD,CAAR;MACF,CAFO,MAEA;QACLD,QAAQ;MACV;IACD,CARD;;IASA,OAAO;MACLG,mBAAmB,EAAE,KADhB;MACuB;MAC5BC,qBAAqB,EAAE,KAFlB;MAEyB;MAC9BC,IAAI,EAAE,EAHD;MAGK;MACVH,gBAAgB,EAAE,IAJb;MAKLI,WAAW,EAAE,IALR;MAMLC,YAAY,EAAE,IANT;MAOLC,KAAK,EAAE;QACLF,WAAW,EAAE,CACX;UACEG,OAAO,EACL,qEAFJ;UAGEC,QAAQ,EAAE,IAHZ;UAIEC,OAAO,EACL,6CALJ;UAMEC,OAAO,EAAE;QANX,CADW,CADR;QAWLL,YAAY,EAAE,CAAC;UAAEM,SAAS,EAAEhB,gBAAb;UAA+Be,OAAO,EAAE;QAAxC,CAAD;MAXT;IAPF,CAAP;EAqBD,CAlCY;;EAmCbE,OAAO,GAAG;IACR,IAAIC,GAAE,GAAIC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAV;IACA,KAAKZ,IAAL,GAAYa,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAZ;EACD,CAtCY;;EAuCbK,OAAO,EAAE;IACPC,YAAY,CAACC,GAAD,EAAM;MAChB,IAAIA,GAAE,KAAM,CAAZ,EAAe,OAAO,GAAP;MACf,IAAIA,GAAE,KAAM,CAAZ,EAAe,OAAO,GAAP;IAChB,CAJM;;IAKPC,IAAI,GAAG;MACL9B,OAAO,CAAC+B,IAAR,CAAa,cAAb,EAA6B,KAAKnB,IAAlC,EAAwCoB,IAAxC,CAA8CC,GAAD,IAAS;QACpDC,OAAO,CAACC,GAAR,CAAYF,GAAZ;;QACA,IAAIA,GAAG,CAACG,IAAJ,KAAa,CAAjB,EAAoB;UAClB,KAAKC,QAAL,CAAc;YACZC,IAAI,EAAE,SADM;YAEZpB,OAAO,EAAE;UAFG,CAAd;UAIAK,cAAc,CAACgB,UAAf,CAA0B,MAA1B;UACAhB,cAAc,CAACiB,OAAf,CAAuB,MAAvB,EAA+Bf,IAAI,CAACgB,SAAL,CAAeR,GAAG,CAAC9B,IAAnB,CAA/B,EANkB,CAMwC;;UAC1D,IAAImB,GAAE,GAAIC,cAAc,CAACC,OAAf,CAAuB,MAAvB,CAAV;UACA,KAAKZ,IAAL,GAAYa,IAAI,CAACC,KAAL,CAAWJ,GAAX,CAAZ;UACA,KAAKZ,mBAAL,GAA2B,KAA3B;QACF,CAVA,MAUO;UACL,KAAK2B,QAAL,CAAc;YACZC,IAAI,EAAE,OADM;YAEZpB,OAAO,EAAEe,GAAG,CAACS;UAFD,CAAd;QAIF;MACD,CAlBD;IAmBD;;EAzBM;AAvCI,CAAf","names":["request","name","components","data","validatePassword","rule","value","callback","Error","originalPassword","personDialogVisible","passwordDialogVisible","form","newPassword","newPasswords","rules","pattern","required","message","trigger","validator","created","str","sessionStorage","getItem","JSON","parse","methods","sexTranslate","sex","save","post","then","res","console","log","code","$message","type","removeItem","setItem","stringify","msg"],"sourceRoot":"","sources":["C:\\Users\\laoshuaib\\Desktop\\restaurant\\src\\components\\managerHeader.vue"],"sourcesContent":["<!--suppress CssUnusedSymbol, JSUnusedGlobalSymbols -->\n<template>\n  <div\n    style=\"\n      height: 50px;\n      line-height: 50px;\n      border-bottom: 1px solid #ccc;\n      display: flex;\n      background: #fdf6ec;\n    \"\n  >\n    <div\n      style=\"\n        width: 200px;\n        padding-left: 50px;\n        font-weight: bold;\n        font-size: 18px;\n        color: #c95f5f;\n      \"\n    >\n      xx餐厅系统\n    </div>\n    <div style=\"flex: 1\"></div>\n    <div\n      style=\"\n        width: 150px;\n        font-weight: bold;\n        font-size: 18px;\n        display: flex;\n        justify-content: center;\n        align-items: center;\n      \"\n    >\n      <el-dropdown size=\"large\">\n        <span>\n          {{ form.name }}\n          <el-icon><ArrowDownBold /></el-icon>\n        </span>\n        <template #dropdown>\n          <el-dropdown-menu>\n            <el-dropdown-item @click=\"personDialogVisible = true\"\n              >个人信息\n            </el-dropdown-item>\n            <el-dropdown-item @click=\"$router.push('/login')\" divided\n              >退出系统\n            </el-dropdown-item>\n          </el-dropdown-menu>\n        </template>\n      </el-dropdown>\n\n      <el-dialog v-model=\"personDialogVisible\" title=\"个人信息\" width=\"30%\">\n        <el-form :model=\"form\" label-width=\"80px\">\n          <el-form-item label=\"工号\">\n            <el-input v-model=\"form.id\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"姓名\">\n            <el-input v-model=\"form.name\" disabled></el-input>\n          </el-form-item>\n          <el-form-item label=\"电话\">\n            <el-input v-model.number=\"form.telephone\"></el-input>\n          </el-form-item>\n          <el-form-item>\n            <el-tag type=\"warning\" size=\"large\">经理</el-tag>\n            <div style=\"width: 20px\"></div>\n            <el-tag type=\"warning\" size=\"large\"\n              >{{ sexTranslate(form.sex) }}\n            </el-tag>\n          </el-form-item>\n        </el-form>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button @click=\"passwordDialogVisible = true\"\n              >修改密码</el-button\n            >\n            <el-button\n              type=\"primary\"\n              size=\"default\"\n              @click=\"save\"\n              color=\"#fab6b6\"\n              >保存</el-button\n            >\n          </span>\n        </template>\n      </el-dialog>\n\n      <el-dialog\n        v-model=\"passwordDialogVisible\"\n        title=\"修改密码\"\n        width=\"30%\"\n        custom-class=\"password-dialog\"\n      >\n        <el-form\n          :model=\"form\"\n          label-width=\"80px\"\n          :rules=\"rules\"\n          ref=\"passwordForm\"\n        >\n          <el-form-item label=\"原密码\" prop=\"originalPassword\">\n            <el-input v-model=\"originalPassword\" show-password></el-input>\n          </el-form-item>\n          <el-form-item label=\"新密码\" prop=\"newPassword\">\n            <el-input v-model=\"newPassword\" show-password></el-input>\n          </el-form-item>\n          <el-form-item label=\"再次输入\" prop=\"newPasswords\">\n            <el-input v-model=\"newPasswords\" show-password></el-input>\n          </el-form-item>\n        </el-form>\n        <template #footer>\n          <span class=\"dialog-footer\">\n            <el-button type=\"primary\" size=\"default\" color=\"#fab6b6\"\n              >保存</el-button\n            >\n          </span>\n        </template>\n      </el-dialog>\n    </div>\n  </div>\n</template>\n\n<script>\nimport request from \"../../untils/request\";\n\nexport default {\n  name: \"managerHeader\",\n  components: {},\n  data() {\n    let validatePassword = (rule, value, callback) => {\n      if (value === \"\") {\n        callback(new Error(\"请再次输入密码\"));\n      } else if (value !== this.originalPassword) {\n        callback(new Error(\"两次输入密码不一致!\"));\n      } else {\n        callback();\n      }\n    };\n    return {\n      personDialogVisible: false, //控制个人信息弹窗\n      passwordDialogVisible: false, //控制修改密码弹窗\n      form: {}, //用于获取user\n      originalPassword: null,\n      newPassword: null,\n      newPasswords: null,\n      rules: {\n        newPassword: [\n          {\n            pattern:\n              /^(?!\\d+$)(?![a-zA-Z]+$)(?![^\\da-zA-Z]+$)([^\\u4e00-\\u9fa5\\s]){8,16}$/,\n            required: true,\n            message:\n              \"只能输入8-16位英文字母、数字或者符号（除空格），且字母、数字和标点符号至少包含两种\",\n            trigger: \"blur\",\n          },\n        ],\n        newPasswords: [{ validator: validatePassword, trigger: \"blur\" }],\n      },\n    };\n  },\n  created() {\n    let str = sessionStorage.getItem(\"user\");\n    this.form = JSON.parse(str);\n  },\n  methods: {\n    sexTranslate(sex) {\n      if (sex === 0) return \"男\";\n      if (sex === 1) return \"女\";\n    },\n    save() {\n      request.post(\"/user/update\", this.form).then((res) => {\n        console.log(res);\n        if (res.code === 0) {\n          this.$message({\n            type: \"success\",\n            message: \"保存成功\",\n          });\n          sessionStorage.removeItem(\"user\");\n          sessionStorage.setItem(\"user\", JSON.stringify(res.data)); //缓存用户信息\n          let str = sessionStorage.getItem(\"user\");\n          this.form = JSON.parse(str);\n          this.personDialogVisible = false;\n        } else {\n          this.$message({\n            type: \"error\",\n            message: res.msg,\n          });\n        }\n      });\n    },\n  },\n};\n</script>\n\n<style scoped>\n/deep/ .el-input {\n  width: 85%;\n}\n\n/deep/ .el-dialog {\n  background: #fcf9f4;\n}\n.password-dialog.el-dialog__body.el-form.el-form-item {\n  margin-bottom: 40px;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}