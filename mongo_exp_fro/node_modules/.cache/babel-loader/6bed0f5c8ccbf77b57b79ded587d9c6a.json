{"ast":null,"code":"import { defineComponent, computed, openBlock, createElementBlock, unref, toDisplayString, createBlock, withCtx, createVNode } from 'vue';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport { ArrowLeft } from '@element-plus/icons-vue';\nimport { paginationPrevProps, paginationPrevEmits } from './prev.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nconst _hoisted_1 = [\"disabled\", \"aria-disabled\"];\nconst _hoisted_2 = {\n  key: 0\n};\nconst __default__ = {\n  name: \"ElPaginationPrev\"\n};\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: paginationPrevProps,\n  emits: paginationPrevEmits,\n\n  setup(__props) {\n    const props = __props;\n    const internalDisabled = computed(() => props.disabled || props.currentPage <= 1);\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"button\", {\n        type: \"button\",\n        class: \"btn-prev\",\n        disabled: unref(internalDisabled),\n        \"aria-disabled\": unref(internalDisabled),\n        onClick: _cache[0] || (_cache[0] = $event => _ctx.$emit(\"click\", $event))\n      }, [_ctx.prevText ? (openBlock(), createElementBlock(\"span\", _hoisted_2, toDisplayString(_ctx.prevText), 1)) : (openBlock(), createBlock(unref(ElIcon), {\n        key: 1\n      }, {\n        default: withCtx(() => [createVNode(unref(ArrowLeft))]),\n        _: 1\n      }))], 8, _hoisted_1);\n    };\n  }\n\n});\n\nvar Prev = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/pagination/src/components/prev.vue\"]]);\n\nexport { Prev as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;IA0BA,iCACA,gDADA","names":[],"sources":["../../../../../../../packages/components/pagination/src/components/prev.vue"],"sourcesContent":["<template>\n  <button\n    type=\"button\"\n    class=\"btn-prev\"\n    :disabled=\"internalDisabled\"\n    :aria-disabled=\"internalDisabled\"\n    @click=\"$emit('click', $event)\"\n  >\n    <span v-if=\"prevText\">{{ prevText }}</span>\n    <el-icon v-else><arrow-left /></el-icon>\n  </button>\n</template>\n\n<script lang=\"ts\" setup>\nimport { computed } from 'vue'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { ArrowLeft } from '@element-plus/icons-vue'\nimport { paginationPrevEmits, paginationPrevProps } from './prev'\n\ndefineOptions({\n  name: 'ElPaginationPrev',\n})\n\nconst props = defineProps(paginationPrevProps)\ndefineEmits(paginationPrevEmits)\n\nconst internalDisabled = computed(\n  () => props.disabled || props.currentPage <= 1\n)\n</script>\n"]},"metadata":{},"sourceType":"module"}