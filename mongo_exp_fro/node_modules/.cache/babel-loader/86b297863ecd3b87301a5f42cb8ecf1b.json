{"ast":null,"code":"const GAP = 4;\nconst BAR_MAP = {\n  vertical: {\n    offset: \"offsetHeight\",\n    scroll: \"scrollTop\",\n    scrollSize: \"scrollHeight\",\n    size: \"height\",\n    key: \"vertical\",\n    axis: \"Y\",\n    client: \"clientY\",\n    direction: \"top\"\n  },\n  horizontal: {\n    offset: \"offsetWidth\",\n    scroll: \"scrollLeft\",\n    scrollSize: \"scrollWidth\",\n    size: \"width\",\n    key: \"horizontal\",\n    axis: \"X\",\n    client: \"clientX\",\n    direction: \"left\"\n  }\n};\n\nconst renderThumbStyle = ({\n  move,\n  size,\n  bar\n}) => ({\n  [bar.size]: size,\n  transform: `translate${bar.axis}(${move}%)`\n});\n\nexport { BAR_MAP, GAP, renderThumbStyle };","map":{"version":3,"mappings":"AAAY,MAACA,GAAG,GAAG,CAAP;AACA,MAACC,OAAO,GAAG;EACrBC,QAAQ,EAAE;IACRC,MAAM,EAAE,cADA;IAERC,MAAM,EAAE,WAFA;IAGRC,UAAU,EAAE,cAHJ;IAIRC,IAAI,EAAE,QAJE;IAKRC,GAAG,EAAE,UALG;IAMRC,IAAI,EAAE,GANE;IAORC,MAAM,EAAE,SAPA;IAQRC,SAAS,EAAE;EARH,CADW;EAWrBC,UAAU,EAAE;IACVR,MAAM,EAAE,aADE;IAEVC,MAAM,EAAE,YAFE;IAGVC,UAAU,EAAE,aAHF;IAIVC,IAAI,EAAE,OAJI;IAKVC,GAAG,EAAE,YALK;IAMVC,IAAI,EAAE,GANI;IAOVC,MAAM,EAAE,SAPE;IAQVC,SAAS,EAAE;EARD;AAXS,CAAX;;AAsBA,MAACE,gBAAgB,GAAG,CAAC;EAC/BC,IAD+B;EAE/BP,IAF+B;EAG/BQ;AAH+B,CAAD,MAIzB;EACL,CAACA,GAAG,CAACR,IAAL,GAAYA,IADP;EAELS,SAAS,EAAG,YAAWD,GAAG,CAACN,IAAK,IAAGK,IAAK;AAFnC,CAJyB,CAApB","names":["GAP","BAR_MAP","vertical","offset","scroll","scrollSize","size","key","axis","client","direction","horizontal","renderThumbStyle","move","bar","transform"],"sources":["../../../../../../packages/components/scrollbar/src/util.ts"],"sourcesContent":["import type { CSSProperties } from 'vue'\nimport type { ThumbProps } from './thumb'\n\nexport const GAP = 4 // top 2 + bottom 2 of bar instance\n\nexport const BAR_MAP = {\n  vertical: {\n    offset: 'offsetHeight',\n    scroll: 'scrollTop',\n    scrollSize: 'scrollHeight',\n    size: 'height',\n    key: 'vertical',\n    axis: 'Y',\n    client: 'clientY',\n    direction: 'top',\n  },\n  horizontal: {\n    offset: 'offsetWidth',\n    scroll: 'scrollLeft',\n    scrollSize: 'scrollWidth',\n    size: 'width',\n    key: 'horizontal',\n    axis: 'X',\n    client: 'clientX',\n    direction: 'left',\n  },\n} as const\n\nexport const renderThumbStyle = ({\n  move,\n  size,\n  bar,\n}: Pick<ThumbProps, 'move' | 'size'> & {\n  bar: typeof BAR_MAP[keyof typeof BAR_MAP]\n}): CSSProperties => ({\n  [bar.size]: size,\n  transform: `translate${bar.axis}(${move}%)`,\n})\n"]},"metadata":{},"sourceType":"module"}