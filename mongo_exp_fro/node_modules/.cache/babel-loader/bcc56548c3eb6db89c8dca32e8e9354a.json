{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { isClient } from '@vueuse/core';\nimport '../../utils/index.mjs';\nimport { isElement } from '../../utils/types.mjs';\nconst nodeList = /* @__PURE__ */new Map();\nlet startClick;\n\nif (isClient) {\n  document.addEventListener(\"mousedown\", e => startClick = e);\n  document.addEventListener(\"mouseup\", e => {\n    for (const handlers of nodeList.values()) {\n      for (const {\n        documentHandler\n      } of handlers) {\n        documentHandler(e, startClick);\n      }\n    }\n  });\n}\n\nfunction createDocumentHandler(el, binding) {\n  let excludes = [];\n\n  if (Array.isArray(binding.arg)) {\n    excludes = binding.arg;\n  } else if (isElement(binding.arg)) {\n    excludes.push(binding.arg);\n  }\n\n  return function (mouseup, mousedown) {\n    const popperRef = binding.instance.popperRef;\n    const mouseUpTarget = mouseup.target;\n    const mouseDownTarget = mousedown == null ? void 0 : mousedown.target;\n    const isBound = !binding || !binding.instance;\n    const isTargetExists = !mouseUpTarget || !mouseDownTarget;\n    const isContainedByEl = el.contains(mouseUpTarget) || el.contains(mouseDownTarget);\n    const isSelf = el === mouseUpTarget;\n    const isTargetExcluded = excludes.length && excludes.some(item => item == null ? void 0 : item.contains(mouseUpTarget)) || excludes.length && excludes.includes(mouseDownTarget);\n    const isContainedByPopper = popperRef && (popperRef.contains(mouseUpTarget) || popperRef.contains(mouseDownTarget));\n\n    if (isBound || isTargetExists || isContainedByEl || isSelf || isTargetExcluded || isContainedByPopper) {\n      return;\n    }\n\n    binding.value(mouseup, mousedown);\n  };\n}\n\nconst ClickOutside = {\n  beforeMount(el, binding) {\n    if (!nodeList.has(el)) {\n      nodeList.set(el, []);\n    }\n\n    nodeList.get(el).push({\n      documentHandler: createDocumentHandler(el, binding),\n      bindingFn: binding.value\n    });\n  },\n\n  updated(el, binding) {\n    if (!nodeList.has(el)) {\n      nodeList.set(el, []);\n    }\n\n    const handlers = nodeList.get(el);\n    const oldHandlerIndex = handlers.findIndex(item => item.bindingFn === binding.oldValue);\n    const newHandler = {\n      documentHandler: createDocumentHandler(el, binding),\n      bindingFn: binding.value\n    };\n\n    if (oldHandlerIndex >= 0) {\n      handlers.splice(oldHandlerIndex, 1, newHandler);\n    } else {\n      handlers.push(newHandler);\n    }\n  },\n\n  unmounted(el) {\n    nodeList.delete(el);\n  }\n\n};\nexport { ClickOutside as default };","map":{"version":3,"mappings":"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","names":["nodeList","Map","startClick","isClient","document","addEventListener","e","handlers","values","documentHandler","createDocumentHandler","el","binding","excludes","Array","isArray","arg","isElement","push","mouseup","mousedown","popperRef","instance","mouseUpTarget","target","mouseDownTarget","isBound","isTargetExists","isContainedByEl","contains","isSelf","isTargetExcluded","length","some","item","includes","isContainedByPopper","value","ClickOutside","beforeMount","has","set","get","bindingFn","updated","oldHandlerIndex","findIndex","oldValue","newHandler","splice","unmounted","delete"],"sources":["../../../../../packages/directives/click-outside/index.ts"],"sourcesContent":["import { isClient } from '@vueuse/core'\nimport { isElement } from '@element-plus/utils'\n\nimport type {\n  ComponentPublicInstance,\n  DirectiveBinding,\n  ObjectDirective,\n} from 'vue'\n\ntype DocumentHandler = <T extends MouseEvent>(mouseup: T, mousedown: T) => void\ntype FlushList = Map<\n  HTMLElement,\n  {\n    documentHandler: DocumentHandler\n    bindingFn: (...args: unknown[]) => unknown\n  }[]\n>\n\nconst nodeList: FlushList = new Map()\n\nlet startClick: MouseEvent\n\nif (isClient) {\n  document.addEventListener('mousedown', (e: MouseEvent) => (startClick = e))\n  document.addEventListener('mouseup', (e: MouseEvent) => {\n    for (const handlers of nodeList.values()) {\n      for (const { documentHandler } of handlers) {\n        documentHandler(e as MouseEvent, startClick)\n      }\n    }\n  })\n}\n\nfunction createDocumentHandler(\n  el: HTMLElement,\n  binding: DirectiveBinding\n): DocumentHandler {\n  let excludes: HTMLElement[] = []\n  if (Array.isArray(binding.arg)) {\n    excludes = binding.arg\n  } else if (isElement(binding.arg)) {\n    // due to current implementation on binding type is wrong the type casting is necessary here\n    excludes.push(binding.arg as unknown as HTMLElement)\n  }\n  return function (mouseup, mousedown) {\n    const popperRef = (\n      binding.instance as ComponentPublicInstance<{\n        popperRef: HTMLElement\n      }>\n    ).popperRef\n    const mouseUpTarget = mouseup.target as Node\n    const mouseDownTarget = mousedown?.target as Node\n    const isBound = !binding || !binding.instance\n    const isTargetExists = !mouseUpTarget || !mouseDownTarget\n    const isContainedByEl =\n      el.contains(mouseUpTarget) || el.contains(mouseDownTarget)\n    const isSelf = el === mouseUpTarget\n\n    const isTargetExcluded =\n      (excludes.length &&\n        excludes.some((item) => item?.contains(mouseUpTarget))) ||\n      (excludes.length && excludes.includes(mouseDownTarget as HTMLElement))\n    const isContainedByPopper =\n      popperRef &&\n      (popperRef.contains(mouseUpTarget) || popperRef.contains(mouseDownTarget))\n    if (\n      isBound ||\n      isTargetExists ||\n      isContainedByEl ||\n      isSelf ||\n      isTargetExcluded ||\n      isContainedByPopper\n    ) {\n      return\n    }\n    binding.value(mouseup, mousedown)\n  }\n}\n\nconst ClickOutside: ObjectDirective = {\n  beforeMount(el: HTMLElement, binding: DirectiveBinding) {\n    // there could be multiple handlers on the element\n    if (!nodeList.has(el)) {\n      nodeList.set(el, [])\n    }\n\n    nodeList.get(el)!.push({\n      documentHandler: createDocumentHandler(el, binding),\n      bindingFn: binding.value,\n    })\n  },\n  updated(el: HTMLElement, binding: DirectiveBinding) {\n    if (!nodeList.has(el)) {\n      nodeList.set(el, [])\n    }\n\n    const handlers = nodeList.get(el)!\n    const oldHandlerIndex = handlers.findIndex(\n      (item) => item.bindingFn === binding.oldValue\n    )\n    const newHandler = {\n      documentHandler: createDocumentHandler(el, binding),\n      bindingFn: binding.value,\n    }\n\n    if (oldHandlerIndex >= 0) {\n      // replace the old handler to the new handler\n      handlers.splice(oldHandlerIndex, 1, newHandler)\n    } else {\n      handlers.push(newHandler)\n    }\n  },\n  unmounted(el: HTMLElement) {\n    // remove all listeners when a component unmounted\n    nodeList.delete(el)\n  },\n}\n\nexport default ClickOutside\n"]},"metadata":{},"sourceType":"module"}