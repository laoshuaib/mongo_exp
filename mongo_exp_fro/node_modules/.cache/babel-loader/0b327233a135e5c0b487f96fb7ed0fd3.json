{"ast":null,"code":"import { ref, watch } from 'vue';\nimport { makeList } from '../utils.mjs';\n\nconst makeAvailableArr = disabledList => {\n  const trueOrNumber = (isDisabled, index) => isDisabled || index;\n\n  const getNumber = predicate => predicate !== true;\n\n  return disabledList.map(trueOrNumber).filter(getNumber);\n};\n\nconst getTimeLists = (disabledHours, disabledMinutes, disabledSeconds) => {\n  const getHoursList = (role, compare) => {\n    return makeList(24, disabledHours && (() => disabledHours == null ? void 0 : disabledHours(role, compare)));\n  };\n\n  const getMinutesList = (hour, role, compare) => {\n    return makeList(60, disabledMinutes && (() => disabledMinutes == null ? void 0 : disabledMinutes(hour, role, compare)));\n  };\n\n  const getSecondsList = (hour, minute, role, compare) => {\n    return makeList(60, disabledSeconds && (() => disabledSeconds == null ? void 0 : disabledSeconds(hour, minute, role, compare)));\n  };\n\n  return {\n    getHoursList,\n    getMinutesList,\n    getSecondsList\n  };\n};\n\nconst buildAvailableTimeSlotGetter = (disabledHours, disabledMinutes, disabledSeconds) => {\n  const {\n    getHoursList,\n    getMinutesList,\n    getSecondsList\n  } = getTimeLists(disabledHours, disabledMinutes, disabledSeconds);\n\n  const getAvailableHours = (role, compare) => {\n    return makeAvailableArr(getHoursList(role, compare));\n  };\n\n  const getAvailableMinutes = (hour, role, compare) => {\n    return makeAvailableArr(getMinutesList(hour, role, compare));\n  };\n\n  const getAvailableSeconds = (hour, minute, role, compare) => {\n    return makeAvailableArr(getSecondsList(hour, minute, role, compare));\n  };\n\n  return {\n    getAvailableHours,\n    getAvailableMinutes,\n    getAvailableSeconds\n  };\n};\n\nconst useOldValue = props => {\n  const oldValue = ref(props.parsedValue);\n  watch(() => props.visible, val => {\n    if (!val) {\n      oldValue.value = props.parsedValue;\n    }\n  });\n  return oldValue;\n};\n\nexport { buildAvailableTimeSlotGetter, getTimeLists, useOldValue };","map":{"version":3,"mappings":";;;AAEA,MAAMA,gBAAgB,GAAIC,YAAD,IAAkB;EACzC,MAAMC,YAAY,GAAG,CAACC,UAAD,EAAaC,KAAb,KAAuBD,UAAU,IAAIC,KAA1D;;EACA,MAAMC,SAAS,GAAIC,SAAD,IAAeA,SAAS,KAAK,IAA/C;;EACA,OAAOL,YAAY,CAACM,GAAb,CAAiBL,YAAjB,EAA+BM,MAA/B,CAAsCH,SAAtC,CAAP;AACD,CAJD;;AAKY,MAACI,YAAY,GAAG,CAACC,aAAD,EAAgBC,eAAhB,EAAiCC,eAAjC,KAAqD;EAC/E,MAAMC,YAAY,GAAG,CAACC,IAAD,EAAOC,OAAP,KAAmB;IACtC,OAAOC,QAAQ,CAAC,EAAD,EAAKN,aAAa,KAAK,MAAMA,aAAa,IAAI,IAAjB,GAAwB,KAAK,CAA7B,GAAiCA,aAAa,CAACI,IAAD,EAAOC,OAAP,CAAzD,CAAlB,CAAf;EACD,CAFD;;EAGA,MAAME,cAAc,GAAG,CAACC,IAAD,EAAOJ,IAAP,EAAaC,OAAb,KAAyB;IAC9C,OAAOC,QAAQ,CAAC,EAAD,EAAKL,eAAe,KAAK,MAAMA,eAAe,IAAI,IAAnB,GAA0B,KAAK,CAA/B,GAAmCA,eAAe,CAACO,IAAD,EAAOJ,IAAP,EAAaC,OAAb,CAA7D,CAApB,CAAf;EACD,CAFD;;EAGA,MAAMI,cAAc,GAAG,CAACD,IAAD,EAAOE,MAAP,EAAeN,IAAf,EAAqBC,OAArB,KAAiC;IACtD,OAAOC,QAAQ,CAAC,EAAD,EAAKJ,eAAe,KAAK,MAAMA,eAAe,IAAI,IAAnB,GAA0B,KAAK,CAA/B,GAAmCA,eAAe,CAACM,IAAD,EAAOE,MAAP,EAAeN,IAAf,EAAqBC,OAArB,CAA7D,CAApB,CAAf;EACD,CAFD;;EAGA,OAAO;IACLF,YADK;IAELI,cAFK;IAGLE;EAHK,CAAP;AAKF,CAfY;;AAgBA,MAACE,4BAA4B,GAAG,CAACX,aAAD,EAAgBC,eAAhB,EAAiCC,eAAjC,KAAqD;EAC/F,MAAM;IAAEC,YAAF;IAAgBI,cAAhB;IAAgCE;EAAhC,IAAmDV,YAAY,CAACC,aAAD,EAAgBC,eAAhB,EAAiCC,eAAjC,CAArE;;EACA,MAAMU,iBAAiB,GAAG,CAACR,IAAD,EAAOC,OAAP,KAAmB;IAC3C,OAAOf,gBAAgB,CAACa,YAAY,CAACC,IAAD,EAAOC,OAAP,CAAb,CAAvB;EACD,CAFD;;EAGA,MAAMQ,mBAAmB,GAAG,CAACL,IAAD,EAAOJ,IAAP,EAAaC,OAAb,KAAyB;IACnD,OAAOf,gBAAgB,CAACiB,cAAc,CAACC,IAAD,EAAOJ,IAAP,EAAaC,OAAb,CAAf,CAAvB;EACD,CAFD;;EAGA,MAAMS,mBAAmB,GAAG,CAACN,IAAD,EAAOE,MAAP,EAAeN,IAAf,EAAqBC,OAArB,KAAiC;IAC3D,OAAOf,gBAAgB,CAACmB,cAAc,CAACD,IAAD,EAAOE,MAAP,EAAeN,IAAf,EAAqBC,OAArB,CAAf,CAAvB;EACD,CAFD;;EAGA,OAAO;IACLO,iBADK;IAELC,mBAFK;IAGLC;EAHK,CAAP;AAKF,CAhBY;;AAiBA,MAACC,WAAW,GAAIC,KAAD,IAAW;EACpC,MAAMC,QAAQ,GAAGC,GAAG,CAACF,KAAK,CAACG,WAAP,CAApB;EACAC,KAAK,CAAC,MAAMJ,KAAK,CAACK,OAAb,EAAuBC,GAAD,IAAS;IAClC,IAAI,CAACA,GAAL,EAAU;MACRL,QAAQ,CAACM,KAAT,GAAiBP,KAAK,CAACG,WAAvB;IACD;EACF,CAJI,CAAL;EAKA,OAAOF,QAAP;AACF,CARY","names":["makeAvailableArr","disabledList","trueOrNumber","isDisabled","index","getNumber","predicate","map","filter","getTimeLists","disabledHours","disabledMinutes","disabledSeconds","getHoursList","role","compare","makeList","getMinutesList","hour","getSecondsList","minute","buildAvailableTimeSlotGetter","getAvailableHours","getAvailableMinutes","getAvailableSeconds","useOldValue","props","oldValue","ref","parsedValue","watch","visible","val","value"],"sources":["../../../../../../../packages/components/time-picker/src/composables/use-time-picker.ts"],"sourcesContent":["import { ref, watch } from 'vue'\nimport { makeList } from '../utils'\n\nimport type { Dayjs } from 'dayjs'\nimport type {\n  GetDisabledHoursState,\n  GetDisabledMinutesState,\n  GetDisabledSecondsState,\n} from '../types'\nimport type {\n  GetDisabledHours,\n  GetDisabledMinutes,\n  GetDisabledSeconds,\n} from '../props/shared'\n\nconst makeAvailableArr = (disabledList: boolean[]): number[] => {\n  const trueOrNumber = (isDisabled: boolean, index: number) =>\n    isDisabled || index\n\n  const getNumber = (predicate: number | true): predicate is number =>\n    predicate !== true\n\n  return disabledList.map(trueOrNumber).filter(getNumber)\n}\n\nexport const getTimeLists = (\n  disabledHours?: GetDisabledHours,\n  disabledMinutes?: GetDisabledMinutes,\n  disabledSeconds?: GetDisabledSeconds\n) => {\n  const getHoursList = (role: string, compare?: Dayjs) => {\n    return makeList(24, disabledHours && (() => disabledHours?.(role, compare)))\n  }\n\n  const getMinutesList = (hour: number, role: string, compare?: Dayjs) => {\n    return makeList(\n      60,\n      disabledMinutes && (() => disabledMinutes?.(hour, role, compare))\n    )\n  }\n\n  const getSecondsList = (\n    hour: number,\n    minute: number,\n    role: string,\n    compare?: Dayjs\n  ) => {\n    return makeList(\n      60,\n      disabledSeconds && (() => disabledSeconds?.(hour, minute, role, compare))\n    )\n  }\n\n  return {\n    getHoursList,\n    getMinutesList,\n    getSecondsList,\n  }\n}\n\nexport const buildAvailableTimeSlotGetter = (\n  disabledHours: GetDisabledHours,\n  disabledMinutes: GetDisabledMinutes,\n  disabledSeconds: GetDisabledSeconds\n) => {\n  const { getHoursList, getMinutesList, getSecondsList } = getTimeLists(\n    disabledHours,\n    disabledMinutes,\n    disabledSeconds\n  )\n\n  const getAvailableHours: GetDisabledHoursState = (role, compare?) => {\n    return makeAvailableArr(getHoursList(role, compare))\n  }\n\n  const getAvailableMinutes: GetDisabledMinutesState = (\n    hour,\n    role,\n    compare?\n  ) => {\n    return makeAvailableArr(getMinutesList(hour, role, compare))\n  }\n\n  const getAvailableSeconds: GetDisabledSecondsState = (\n    hour,\n    minute,\n    role,\n    compare?\n  ) => {\n    return makeAvailableArr(getSecondsList(hour, minute, role, compare))\n  }\n\n  return {\n    getAvailableHours,\n    getAvailableMinutes,\n    getAvailableSeconds,\n  }\n}\n\nexport const useOldValue = (props: {\n  parsedValue?: string | Dayjs | Dayjs[]\n  visible: boolean\n}) => {\n  const oldValue = ref(props.parsedValue)\n\n  watch(\n    () => props.visible,\n    (val) => {\n      if (!val) {\n        oldValue.value = props.parsedValue\n      }\n    }\n  )\n\n  return oldValue\n}\n"]},"metadata":{},"sourceType":"module"}