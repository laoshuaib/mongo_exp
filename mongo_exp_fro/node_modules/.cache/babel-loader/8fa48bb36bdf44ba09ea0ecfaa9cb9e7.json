{"ast":null,"code":"import { computed } from 'vue';\nimport '../../../../utils/index.mjs';\nimport { debugWarn } from '../../../../utils/error.mjs';\n\nconst useStops = (props, initData, minValue, maxValue) => {\n  const stops = computed(() => {\n    if (!props.showStops || props.min > props.max) return [];\n\n    if (props.step === 0) {\n      debugWarn(\"ElSlider\", \"step should not be 0.\");\n      return [];\n    }\n\n    const stopCount = (props.max - props.min) / props.step;\n    const stepWidth = 100 * props.step / (props.max - props.min);\n    const result = Array.from({\n      length: stopCount - 1\n    }).map((_, index) => (index + 1) * stepWidth);\n\n    if (props.range) {\n      return result.filter(step => {\n        return step < 100 * (minValue.value - props.min) / (props.max - props.min) || step > 100 * (maxValue.value - props.min) / (props.max - props.min);\n      });\n    } else {\n      return result.filter(step => step > 100 * (initData.firstValue - props.min) / (props.max - props.min));\n    }\n  });\n\n  const getStopStyle = position => {\n    return props.vertical ? {\n      bottom: `${position}%`\n    } : {\n      left: `${position}%`\n    };\n  };\n\n  return {\n    stops,\n    getStopStyle\n  };\n};\n\nexport { useStops };","map":{"version":3,"mappings":";;;;AAEY,MAACA,QAAQ,GAAG,CAACC,KAAD,EAAQC,QAAR,EAAkBC,QAAlB,EAA4BC,QAA5B,KAAyC;EAC/D,MAAMC,KAAK,GAAGC,QAAQ,CAAC,MAAM;IAC3B,IAAI,CAACL,KAAK,CAACM,SAAP,IAAoBN,KAAK,CAACO,GAAN,GAAYP,KAAK,CAACQ,GAA1C,EACE,OAAO,EAAP;;IACF,IAAIR,KAAK,CAACS,IAAN,KAAe,CAAnB,EAAsB;MACpBC,SAAS,CAAC,UAAD,EAAa,uBAAb,CAAT;MACA,OAAO,EAAP;IACD;;IACD,MAAMC,SAAS,GAAG,CAACX,KAAK,CAACQ,GAAN,GAAYR,KAAK,CAACO,GAAnB,IAA0BP,KAAK,CAACS,IAAlD;IACA,MAAMG,SAAS,GAAG,MAAMZ,KAAK,CAACS,IAAZ,IAAoBT,KAAK,CAACQ,GAAN,GAAYR,KAAK,CAACO,GAAtC,CAAlB;IACA,MAAMM,MAAM,GAAGC,KAAK,CAACC,IAAN,CAAW;MAAEC,MAAM,EAAEL,SAAS,GAAG;IAAtB,CAAX,EAAsCM,GAAtC,CAA0C,CAACC,CAAD,EAAIC,KAAJ,KAAc,CAACA,KAAK,GAAG,CAAT,IAAcP,SAAtE,CAAf;;IACA,IAAIZ,KAAK,CAACoB,KAAV,EAAiB;MACf,OAAOP,MAAM,CAACQ,MAAP,CAAeZ,IAAD,IAAU;QAC7B,OAAOA,IAAI,GAAG,OAAOP,QAAQ,CAACoB,KAAT,GAAiBtB,KAAK,CAACO,GAA9B,KAAsCP,KAAK,CAACQ,GAAN,GAAYR,KAAK,CAACO,GAAxD,CAAP,IAAuEE,IAAI,GAAG,OAAON,QAAQ,CAACmB,KAAT,GAAiBtB,KAAK,CAACO,GAA9B,KAAsCP,KAAK,CAACQ,GAAN,GAAYR,KAAK,CAACO,GAAxD,CAArF;MACD,CAFM,CAAP;IAGD,CAJD,MAIO;MACL,OAAOM,MAAM,CAACQ,MAAP,CAAeZ,IAAD,IAAUA,IAAI,GAAG,OAAOR,QAAQ,CAACsB,UAAT,GAAsBvB,KAAK,CAACO,GAAnC,KAA2CP,KAAK,CAACQ,GAAN,GAAYR,KAAK,CAACO,GAA7D,CAA/B,CAAP;IACD;EACF,CAjBqB,CAAtB;;EAkBA,MAAMiB,YAAY,GAAIC,QAAD,IAAc;IACjC,OAAOzB,KAAK,CAAC0B,QAAN,GAAiB;MAAEC,MAAM,EAAG,GAAEF,QAAS;IAAtB,CAAjB,GAA8C;MAAEG,IAAI,EAAG,GAAEH,QAAS;IAApB,CAArD;EACD,CAFD;;EAGA,OAAO;IACLrB,KADK;IAELoB;EAFK,CAAP;AAIF,CA1BY","names":["useStops","props","initData","minValue","maxValue","stops","computed","showStops","min","max","step","debugWarn","stopCount","stepWidth","result","Array","from","length","map","_","index","range","filter","value","firstValue","getStopStyle","position","vertical","bottom","left"],"sources":["../../../../../../../packages/components/slider/src/composables/use-stops.ts"],"sourcesContent":["import { computed } from 'vue'\nimport { debugWarn } from '@element-plus/utils'\nimport type { CSSProperties, ComputedRef } from 'vue'\nimport type { SliderInitData, SliderProps } from '../slider'\n\ntype Stops = {\n  stops: ComputedRef<number[]>\n  getStopStyle: (position: number) => CSSProperties\n}\n\nexport const useStops = (\n  props: SliderProps,\n  initData: SliderInitData,\n  minValue: ComputedRef<number>,\n  maxValue: ComputedRef<number>\n): Stops => {\n  const stops = computed(() => {\n    if (!props.showStops || props.min > props.max) return []\n    if (props.step === 0) {\n      debugWarn('ElSlider', 'step should not be 0.')\n      return []\n    }\n\n    const stopCount = (props.max - props.min) / props.step\n    const stepWidth = (100 * props.step) / (props.max - props.min)\n    const result = Array.from<number>({ length: stopCount - 1 }).map(\n      (_, index) => (index + 1) * stepWidth\n    )\n\n    if (props.range) {\n      return result.filter((step) => {\n        return (\n          step <\n            (100 * (minValue.value - props.min)) / (props.max - props.min) ||\n          step > (100 * (maxValue.value - props.min)) / (props.max - props.min)\n        )\n      })\n    } else {\n      return result.filter(\n        (step) =>\n          step >\n          (100 * (initData.firstValue - props.min)) / (props.max - props.min)\n      )\n    }\n  })\n\n  const getStopStyle = (position: number): CSSProperties => {\n    return props.vertical\n      ? { bottom: `${position}%` }\n      : { left: `${position}%` }\n  }\n\n  return {\n    stops,\n    getStopStyle,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}