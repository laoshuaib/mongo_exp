{"ast":null,"code":"import { toRefs, computed, nextTick } from 'vue';\nimport { pick } from 'lodash-unified';\nimport { ElSelect } from '../../select/index.mjs';\nimport '../../../hooks/index.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\n\nconst useSelect = (props, {\n  attrs\n}, {\n  tree,\n  key\n}) => {\n  const ns = useNamespace(\"tree-select\");\n  const result = { ...pick(toRefs(props), Object.keys(ElSelect.props)),\n    ...attrs,\n    valueKey: key,\n    popperClass: computed(() => {\n      const classes = [ns.e(\"popper\")];\n      if (props.popperClass) classes.push(props.popperClass);\n      return classes.join(\" \");\n    }),\n    filterMethod: (keyword = \"\") => {\n      if (props.filterMethod) props.filterMethod(keyword);\n      nextTick(() => {\n        var _a;\n\n        (_a = tree.value) == null ? void 0 : _a.filter(keyword);\n      });\n    },\n    onVisibleChange: visible => {\n      var _a;\n\n      (_a = attrs.onVisibleChange) == null ? void 0 : _a.call(attrs, visible);\n\n      if (props.filterable && visible) {\n        result.filterMethod();\n      }\n    }\n  };\n  return result;\n};\n\nexport { useSelect };","map":{"version":3,"mappings":";;;;;;AAIY,MAACA,SAAS,GAAG,CAACC,KAAD,EAAQ;EAAEC;AAAF,CAAR,EAAmB;EAC1CC,IAD0C;EAE1CC;AAF0C,CAAnB,KAGnB;EACJ,MAAMC,EAAE,GAAGC,YAAY,CAAC,aAAD,CAAvB;EACA,MAAMC,MAAM,GAAG,EACb,GAAGC,IAAI,CAACC,MAAM,CAACR,KAAD,CAAP,EAAgBS,MAAM,CAACC,IAAP,CAAYC,QAAQ,CAACX,KAArB,CAAhB,CADM;IAEb,GAAGC,KAFU;IAGbW,QAAQ,EAAET,GAHG;IAIbU,WAAW,EAAEC,QAAQ,CAAC,MAAM;MAC1B,MAAMC,OAAO,GAAG,CAACX,EAAE,CAACY,CAAH,CAAK,QAAL,CAAD,CAAhB;MACA,IAAIhB,KAAK,CAACa,WAAV,EACEE,OAAO,CAACE,IAAR,CAAajB,KAAK,CAACa,WAAnB;MACF,OAAOE,OAAO,CAACG,IAAR,CAAa,GAAb,CAAP;IACD,CALoB,CAJR;IAUbC,YAAY,EAAE,CAACC,OAAO,GAAG,EAAX,KAAkB;MAC9B,IAAIpB,KAAK,CAACmB,YAAV,EACEnB,KAAK,CAACmB,YAAN,CAAmBC,OAAnB;MACFC,QAAQ,CAAC,MAAM;QACb,IAAIC,EAAJ;;QACA,CAACA,EAAE,GAAGpB,IAAI,CAACqB,KAAX,KAAqB,IAArB,GAA4B,KAAK,CAAjC,GAAqCD,EAAE,CAACE,MAAH,CAAUJ,OAAV,CAArC;MACD,CAHO,CAAR;IAID,CAjBY;IAkBbK,eAAe,EAAGC,OAAD,IAAa;MAC5B,IAAIJ,EAAJ;;MACA,CAACA,EAAE,GAAGrB,KAAK,CAACwB,eAAZ,KAAgC,IAAhC,GAAuC,KAAK,CAA5C,GAAgDH,EAAE,CAACK,IAAH,CAAQ1B,KAAR,EAAeyB,OAAf,CAAhD;;MACA,IAAI1B,KAAK,CAAC4B,UAAN,IAAoBF,OAAxB,EAAiC;QAC/BpB,MAAM,CAACa,YAAP;MACD;IACF;EAxBY,CAAf;EA0BA,OAAOb,MAAP;AACF,CAhCY","names":["useSelect","props","attrs","tree","key","ns","useNamespace","result","pick","toRefs","Object","keys","ElSelect","valueKey","popperClass","computed","classes","e","push","join","filterMethod","keyword","nextTick","_a","value","filter","onVisibleChange","visible","call","filterable"],"sources":["../../../../../../packages/components/tree-select/src/select.ts"],"sourcesContent":["// @ts-nocheck\nimport { computed, nextTick, toRefs } from 'vue'\nimport { pick } from 'lodash-unified'\nimport ElSelect from '@element-plus/components/select'\nimport { useNamespace } from '@element-plus/hooks'\nimport type { Ref } from 'vue'\nimport type ElTree from '@element-plus/components/tree'\n\nexport const useSelect = (\n  props,\n  { attrs },\n  {\n    tree,\n    key,\n  }: {\n    select: Ref<InstanceType<typeof ElSelect> | undefined>\n    tree: Ref<InstanceType<typeof ElTree> | undefined>\n    key: Ref<string>\n  }\n) => {\n  const ns = useNamespace('tree-select')\n\n  const result = {\n    ...pick(toRefs(props), Object.keys(ElSelect.props)),\n    ...attrs,\n    valueKey: key,\n    popperClass: computed(() => {\n      const classes = [ns.e('popper')]\n      if (props.popperClass) classes.push(props.popperClass)\n      return classes.join(' ')\n    }),\n    filterMethod: (keyword = '') => {\n      if (props.filterMethod) props.filterMethod(keyword)\n\n      nextTick(() => {\n        // let tree node expand only, same with tree filter\n        tree.value?.filter(keyword)\n      })\n    },\n    // clear filter text when visible change\n    onVisibleChange: (visible: boolean) => {\n      attrs.onVisibleChange?.(visible)\n\n      if (props.filterable && visible) {\n        result.filterMethod()\n      }\n    },\n  }\n\n  return result\n}\n"]},"metadata":{},"sourceType":"module"}