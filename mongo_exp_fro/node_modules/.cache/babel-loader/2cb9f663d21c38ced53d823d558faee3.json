{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { defineComponent, useAttrs, useSlots, inject, toRef, ref, computed, nextTick, watch, openBlock, createElementBlock, normalizeClass, unref, createElementVNode, renderSlot, Fragment, renderList, toDisplayString, createCommentVNode, createVNode, withDirectives, withCtx, vShow, withKeys, createBlock, createTextVNode } from 'vue';\nimport dayjs from 'dayjs';\nimport { ElButton } from '../../../button/index.mjs';\nimport '../../../../directives/index.mjs';\nimport '../../../../hooks/index.mjs';\nimport { ElInput } from '../../../input/index.mjs';\nimport '../../../time-picker/index.mjs';\nimport { ElIcon } from '../../../icon/index.mjs';\nimport '../../../../utils/index.mjs';\nimport '../../../../constants/index.mjs';\nimport { DArrowLeft, ArrowLeft, ArrowRight, DArrowRight } from '@element-plus/icons-vue';\nimport '../../../tooltip/index.mjs';\nimport { panelDatePickProps } from '../props/panel-date-pick.mjs';\nimport DateTable from './basic-date-table.mjs';\nimport MonthTable from './basic-month-table.mjs';\nimport YearTable from './basic-year-table.mjs';\nimport _export_sfc from '../../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../../hooks/use-namespace/index.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\nimport { TOOLTIP_INJECTION_KEY } from '../../../tooltip/src/tokens.mjs';\nimport { isArray, isFunction } from '@vue/shared';\nimport { extractTimeFormat, extractDateFormat } from '../../../time-picker/src/utils.mjs';\nimport { EVENT_CODE } from '../../../../constants/aria.mjs';\nimport TimePickPanel from '../../../time-picker/src/time-picker-com/panel-time-pick.mjs';\nimport ClickOutside from '../../../../directives/click-outside/index.mjs';\nconst _hoisted_1 = [\"onClick\"];\nconst _hoisted_2 = [\"aria-label\"];\nconst _hoisted_3 = [\"aria-label\"];\nconst _hoisted_4 = [\"aria-label\"];\nconst _hoisted_5 = [\"aria-label\"];\n\nconst _sfc_main = /* @__PURE__ */defineComponent({\n  __name: \"panel-date-pick\",\n  props: panelDatePickProps,\n  emits: [\"pick\", \"set-picker-option\", \"panel-change\"],\n\n  setup(__props, {\n    emit: contextEmit\n  }) {\n    const props = __props;\n\n    const timeWithinRange = (_, __, ___) => true;\n\n    const ppNs = useNamespace(\"picker-panel\");\n    const dpNs = useNamespace(\"date-picker\");\n    const attrs = useAttrs();\n    const slots = useSlots();\n    const {\n      t,\n      lang\n    } = useLocale();\n    const pickerBase = inject(\"EP_PICKER_BASE\");\n    const popper = inject(TOOLTIP_INJECTION_KEY);\n    const {\n      shortcuts,\n      disabledDate,\n      cellClassName,\n      defaultTime,\n      arrowControl\n    } = pickerBase.props;\n    const defaultValue = toRef(pickerBase.props, \"defaultValue\");\n    const currentViewRef = ref();\n    const innerDate = ref(dayjs().locale(lang.value));\n    const defaultTimeD = computed(() => {\n      return dayjs(defaultTime).locale(lang.value);\n    });\n    const month = computed(() => {\n      return innerDate.value.month();\n    });\n    const year = computed(() => {\n      return innerDate.value.year();\n    });\n    const selectableRange = ref([]);\n    const userInputDate = ref(null);\n    const userInputTime = ref(null);\n\n    const checkDateWithinRange = date => {\n      return selectableRange.value.length > 0 ? timeWithinRange(date, selectableRange.value, props.format || \"HH:mm:ss\") : true;\n    };\n\n    const formatEmit = emitDayjs => {\n      if (defaultTime && !visibleTime.value) {\n        return defaultTimeD.value.year(emitDayjs.year()).month(emitDayjs.month()).date(emitDayjs.date());\n      }\n\n      if (showTime.value) return emitDayjs.millisecond(0);\n      return emitDayjs.startOf(\"day\");\n    };\n\n    const emit = (value, ...args) => {\n      if (!value) {\n        contextEmit(\"pick\", value, ...args);\n      } else if (isArray(value)) {\n        const dates = value.map(formatEmit);\n        contextEmit(\"pick\", dates, ...args);\n      } else {\n        contextEmit(\"pick\", formatEmit(value), ...args);\n      }\n\n      userInputDate.value = null;\n      userInputTime.value = null;\n    };\n\n    const handleDatePick = (value, keepOpen) => {\n      if (selectionMode.value === \"date\") {\n        value = value;\n        let newDate = props.parsedValue ? props.parsedValue.year(value.year()).month(value.month()).date(value.date()) : value;\n\n        if (!checkDateWithinRange(newDate)) {\n          newDate = selectableRange.value[0][0].year(value.year()).month(value.month()).date(value.date());\n        }\n\n        innerDate.value = newDate;\n        emit(newDate, showTime.value || keepOpen);\n      } else if (selectionMode.value === \"week\") {\n        emit(value.date);\n      } else if (selectionMode.value === \"dates\") {\n        emit(value, true);\n      }\n    };\n\n    const moveByMonth = forward => {\n      const action = forward ? \"add\" : \"subtract\";\n      innerDate.value = innerDate.value[action](1, \"month\");\n      handlePanelChange(\"month\");\n    };\n\n    const moveByYear = forward => {\n      const currentDate = innerDate.value;\n      const action = forward ? \"add\" : \"subtract\";\n      innerDate.value = currentView.value === \"year\" ? currentDate[action](10, \"year\") : currentDate[action](1, \"year\");\n      handlePanelChange(\"year\");\n    };\n\n    const currentView = ref(\"date\");\n    const yearLabel = computed(() => {\n      const yearTranslation = t(\"el.datepicker.year\");\n\n      if (currentView.value === \"year\") {\n        const startYear = Math.floor(year.value / 10) * 10;\n\n        if (yearTranslation) {\n          return `${startYear} ${yearTranslation} - ${startYear + 9} ${yearTranslation}`;\n        }\n\n        return `${startYear} - ${startYear + 9}`;\n      }\n\n      return `${year.value} ${yearTranslation}`;\n    });\n\n    const handleShortcutClick = shortcut => {\n      const shortcutValue = isFunction(shortcut.value) ? shortcut.value() : shortcut.value;\n\n      if (shortcutValue) {\n        emit(dayjs(shortcutValue).locale(lang.value));\n        return;\n      }\n\n      if (shortcut.onClick) {\n        shortcut.onClick({\n          attrs,\n          slots,\n          emit: contextEmit\n        });\n      }\n    };\n\n    const selectionMode = computed(() => {\n      const {\n        type\n      } = props;\n      if ([\"week\", \"month\", \"year\", \"dates\"].includes(type)) return type;\n      return \"date\";\n    });\n    const keyboardMode = computed(() => {\n      return selectionMode.value === \"date\" ? currentView.value : selectionMode.value;\n    });\n    const hasShortcuts = computed(() => !!shortcuts.length);\n\n    const handleMonthPick = async month2 => {\n      innerDate.value = innerDate.value.startOf(\"month\").month(month2);\n\n      if (selectionMode.value === \"month\") {\n        emit(innerDate.value, false);\n      } else {\n        currentView.value = \"date\";\n\n        if ([\"month\", \"year\", \"date\", \"week\"].includes(selectionMode.value)) {\n          emit(innerDate.value, true);\n          await nextTick();\n          handleFocusPicker();\n        }\n      }\n\n      handlePanelChange(\"month\");\n    };\n\n    const handleYearPick = async year2 => {\n      if (selectionMode.value === \"year\") {\n        innerDate.value = innerDate.value.startOf(\"year\").year(year2);\n        emit(innerDate.value, false);\n      } else {\n        innerDate.value = innerDate.value.year(year2);\n        currentView.value = \"month\";\n\n        if ([\"month\", \"year\", \"date\", \"week\"].includes(selectionMode.value)) {\n          emit(innerDate.value, true);\n          await nextTick();\n          handleFocusPicker();\n        }\n      }\n\n      handlePanelChange(\"year\");\n    };\n\n    const showPicker = async view => {\n      currentView.value = view;\n      await nextTick();\n      handleFocusPicker();\n    };\n\n    const showTime = computed(() => props.type === \"datetime\" || props.type === \"datetimerange\");\n    const footerVisible = computed(() => {\n      return showTime.value || selectionMode.value === \"dates\";\n    });\n\n    const onConfirm = () => {\n      if (selectionMode.value === \"dates\") {\n        emit(props.parsedValue);\n      } else {\n        let result = props.parsedValue;\n\n        if (!result) {\n          const defaultTimeD2 = dayjs(defaultTime).locale(lang.value);\n          const defaultValueD = getDefaultValue();\n          result = defaultTimeD2.year(defaultValueD.year()).month(defaultValueD.month()).date(defaultValueD.date());\n        }\n\n        innerDate.value = result;\n        emit(result);\n      }\n    };\n\n    const changeToNow = () => {\n      const now = dayjs().locale(lang.value);\n      const nowDate = now.toDate();\n\n      if ((!disabledDate || !disabledDate(nowDate)) && checkDateWithinRange(nowDate)) {\n        innerDate.value = dayjs().locale(lang.value);\n        emit(innerDate.value);\n      }\n    };\n\n    const timeFormat = computed(() => {\n      return extractTimeFormat(props.format);\n    });\n    const dateFormat = computed(() => {\n      return extractDateFormat(props.format);\n    });\n    const visibleTime = computed(() => {\n      if (userInputTime.value) return userInputTime.value;\n      if (!props.parsedValue && !defaultValue.value) return;\n      return (props.parsedValue || innerDate.value).format(timeFormat.value);\n    });\n    const visibleDate = computed(() => {\n      if (userInputDate.value) return userInputDate.value;\n      if (!props.parsedValue && !defaultValue.value) return;\n      return (props.parsedValue || innerDate.value).format(dateFormat.value);\n    });\n    const timePickerVisible = ref(false);\n\n    const onTimePickerInputFocus = () => {\n      timePickerVisible.value = true;\n    };\n\n    const handleTimePickClose = () => {\n      timePickerVisible.value = false;\n    };\n\n    const getUnits = date => {\n      return {\n        hour: date.hour(),\n        minute: date.minute(),\n        second: date.second(),\n        year: date.year(),\n        month: date.month(),\n        date: date.date()\n      };\n    };\n\n    const handleTimePick = (value, visible, first) => {\n      const {\n        hour,\n        minute,\n        second\n      } = getUnits(value);\n      const newDate = props.parsedValue ? props.parsedValue.hour(hour).minute(minute).second(second) : value;\n      innerDate.value = newDate;\n      emit(innerDate.value, true);\n\n      if (!first) {\n        timePickerVisible.value = visible;\n      }\n    };\n\n    const handleVisibleTimeChange = value => {\n      const newDate = dayjs(value, timeFormat.value).locale(lang.value);\n\n      if (newDate.isValid() && checkDateWithinRange(newDate)) {\n        const {\n          year: year2,\n          month: month2,\n          date\n        } = getUnits(innerDate.value);\n        innerDate.value = newDate.year(year2).month(month2).date(date);\n        userInputTime.value = null;\n        timePickerVisible.value = false;\n        emit(innerDate.value, true);\n      }\n    };\n\n    const handleVisibleDateChange = value => {\n      const newDate = dayjs(value, dateFormat.value).locale(lang.value);\n\n      if (newDate.isValid()) {\n        if (disabledDate && disabledDate(newDate.toDate())) {\n          return;\n        }\n\n        const {\n          hour,\n          minute,\n          second\n        } = getUnits(innerDate.value);\n        innerDate.value = newDate.hour(hour).minute(minute).second(second);\n        userInputDate.value = null;\n        emit(innerDate.value, true);\n      }\n    };\n\n    const isValidValue = date => {\n      return dayjs.isDayjs(date) && date.isValid() && (disabledDate ? !disabledDate(date.toDate()) : true);\n    };\n\n    const formatToString = value => {\n      if (selectionMode.value === \"dates\") {\n        return value.map(_ => _.format(props.format));\n      }\n\n      return value.format(props.format);\n    };\n\n    const parseUserInput = value => {\n      return dayjs(value, props.format).locale(lang.value);\n    };\n\n    const getDefaultValue = () => {\n      const parseDate = dayjs(defaultValue.value).locale(lang.value);\n\n      if (!defaultValue.value) {\n        const defaultTimeDValue = defaultTimeD.value;\n        return dayjs().hour(defaultTimeDValue.hour()).minute(defaultTimeDValue.minute()).second(defaultTimeDValue.second()).locale(lang.value);\n      }\n\n      return parseDate;\n    };\n\n    const handleFocusPicker = async () => {\n      var _a;\n\n      if ([\"week\", \"month\", \"year\", \"date\"].includes(selectionMode.value)) {\n        (_a = currentViewRef.value) == null ? void 0 : _a.focus();\n\n        if (selectionMode.value === \"week\") {\n          handleKeyControl(EVENT_CODE.down);\n        }\n      }\n    };\n\n    const handleKeydownTable = event => {\n      const {\n        code\n      } = event;\n      const validCode = [EVENT_CODE.up, EVENT_CODE.down, EVENT_CODE.left, EVENT_CODE.right, EVENT_CODE.home, EVENT_CODE.end, EVENT_CODE.pageUp, EVENT_CODE.pageDown];\n\n      if (validCode.includes(code)) {\n        handleKeyControl(code);\n        event.stopPropagation();\n        event.preventDefault();\n      }\n\n      if ([EVENT_CODE.enter, EVENT_CODE.space].includes(code) && userInputDate.value === null && userInputTime.value === null) {\n        event.preventDefault();\n        emit(innerDate.value, false);\n      }\n    };\n\n    const handleKeyControl = code => {\n      var _a;\n\n      const {\n        up,\n        down,\n        left,\n        right,\n        home,\n        end,\n        pageUp,\n        pageDown\n      } = EVENT_CODE;\n      const mapping = {\n        year: {\n          [up]: -4,\n          [down]: 4,\n          [left]: -1,\n          [right]: 1,\n          offset: (date, step) => date.setFullYear(date.getFullYear() + step)\n        },\n        month: {\n          [up]: -4,\n          [down]: 4,\n          [left]: -1,\n          [right]: 1,\n          offset: (date, step) => date.setMonth(date.getMonth() + step)\n        },\n        week: {\n          [up]: -1,\n          [down]: 1,\n          [left]: -1,\n          [right]: 1,\n          offset: (date, step) => date.setDate(date.getDate() + step * 7)\n        },\n        date: {\n          [up]: -7,\n          [down]: 7,\n          [left]: -1,\n          [right]: 1,\n          [home]: date => -date.getDay(),\n          [end]: date => -date.getDay() + 6,\n          [pageUp]: date => -new Date(date.getFullYear(), date.getMonth(), 0).getDate(),\n          [pageDown]: date => new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate(),\n          offset: (date, step) => date.setDate(date.getDate() + step)\n        }\n      };\n      const newDate = innerDate.value.toDate();\n\n      while (Math.abs(innerDate.value.diff(newDate, \"year\", true)) < 1) {\n        const map = mapping[keyboardMode.value];\n        if (!map) return;\n        map.offset(newDate, isFunction(map[code]) ? map[code](newDate) : (_a = map[code]) != null ? _a : 0);\n\n        if (disabledDate && disabledDate(newDate)) {\n          break;\n        }\n\n        const result = dayjs(newDate).locale(lang.value);\n        innerDate.value = result;\n        contextEmit(\"pick\", result, true);\n        break;\n      }\n    };\n\n    const handlePanelChange = mode => {\n      contextEmit(\"panel-change\", innerDate.value.toDate(), mode, currentView.value);\n    };\n\n    watch(() => selectionMode.value, val => {\n      if ([\"month\", \"year\"].includes(val)) {\n        currentView.value = val;\n        return;\n      }\n\n      currentView.value = \"date\";\n    }, {\n      immediate: true\n    });\n    watch(() => currentView.value, () => {\n      popper == null ? void 0 : popper.updatePopper();\n    });\n    watch(() => defaultValue.value, val => {\n      if (val) {\n        innerDate.value = getDefaultValue();\n      }\n    }, {\n      immediate: true\n    });\n    watch(() => props.parsedValue, val => {\n      if (val) {\n        if (selectionMode.value === \"dates\") return;\n        if (Array.isArray(val)) return;\n        innerDate.value = val;\n      } else {\n        innerDate.value = getDefaultValue();\n      }\n    }, {\n      immediate: true\n    });\n    contextEmit(\"set-picker-option\", [\"isValidValue\", isValidValue]);\n    contextEmit(\"set-picker-option\", [\"formatToString\", formatToString]);\n    contextEmit(\"set-picker-option\", [\"parseUserInput\", parseUserInput]);\n    contextEmit(\"set-picker-option\", [\"handleFocusPicker\", handleFocusPicker]);\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"div\", {\n        class: normalizeClass([unref(ppNs).b(), unref(dpNs).b(), {\n          \"has-sidebar\": _ctx.$slots.sidebar || unref(hasShortcuts),\n          \"has-time\": unref(showTime)\n        }])\n      }, [createElementVNode(\"div\", {\n        class: normalizeClass(unref(ppNs).e(\"body-wrapper\"))\n      }, [renderSlot(_ctx.$slots, \"sidebar\", {\n        class: normalizeClass(unref(ppNs).e(\"sidebar\"))\n      }), unref(hasShortcuts) ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(unref(ppNs).e(\"sidebar\"))\n      }, [(openBlock(true), createElementBlock(Fragment, null, renderList(unref(shortcuts), (shortcut, key) => {\n        return openBlock(), createElementBlock(\"button\", {\n          key,\n          type: \"button\",\n          class: normalizeClass(unref(ppNs).e(\"shortcut\")),\n          onClick: $event => handleShortcutClick(shortcut)\n        }, toDisplayString(shortcut.text), 11, _hoisted_1);\n      }), 128))], 2)) : createCommentVNode(\"v-if\", true), createElementVNode(\"div\", {\n        class: normalizeClass(unref(ppNs).e(\"body\"))\n      }, [unref(showTime) ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(unref(dpNs).e(\"time-header\"))\n      }, [createElementVNode(\"span\", {\n        class: normalizeClass(unref(dpNs).e(\"editor-wrap\"))\n      }, [createVNode(unref(ElInput), {\n        placeholder: unref(t)(\"el.datepicker.selectDate\"),\n        \"model-value\": unref(visibleDate),\n        size: \"small\",\n        onInput: _cache[0] || (_cache[0] = val => userInputDate.value = val),\n        onChange: handleVisibleDateChange\n      }, null, 8, [\"placeholder\", \"model-value\"])], 2), withDirectives((openBlock(), createElementBlock(\"span\", {\n        class: normalizeClass(unref(dpNs).e(\"editor-wrap\"))\n      }, [createVNode(unref(ElInput), {\n        placeholder: unref(t)(\"el.datepicker.selectTime\"),\n        \"model-value\": unref(visibleTime),\n        size: \"small\",\n        onFocus: onTimePickerInputFocus,\n        onInput: _cache[1] || (_cache[1] = val => userInputTime.value = val),\n        onChange: handleVisibleTimeChange\n      }, null, 8, [\"placeholder\", \"model-value\"]), createVNode(unref(TimePickPanel), {\n        visible: timePickerVisible.value,\n        format: unref(timeFormat),\n        \"time-arrow-control\": unref(arrowControl),\n        \"parsed-value\": innerDate.value,\n        onPick: handleTimePick\n      }, null, 8, [\"visible\", \"format\", \"time-arrow-control\", \"parsed-value\"])], 2)), [[unref(ClickOutside), handleTimePickClose]])], 2)) : createCommentVNode(\"v-if\", true), withDirectives(createElementVNode(\"div\", {\n        class: normalizeClass([unref(dpNs).e(\"header\"), (currentView.value === \"year\" || currentView.value === \"month\") && unref(dpNs).e(\"header--bordered\")])\n      }, [createElementVNode(\"span\", {\n        class: normalizeClass(unref(dpNs).e(\"prev-btn\"))\n      }, [createElementVNode(\"button\", {\n        type: \"button\",\n        \"aria-label\": unref(t)(`el.datepicker.prevYear`),\n        class: normalizeClass([\"d-arrow-left\", unref(ppNs).e(\"icon-btn\")]),\n        onClick: _cache[2] || (_cache[2] = $event => moveByYear(false))\n      }, [createVNode(unref(ElIcon), null, {\n        default: withCtx(() => [createVNode(unref(DArrowLeft))]),\n        _: 1\n      })], 10, _hoisted_2), withDirectives(createElementVNode(\"button\", {\n        type: \"button\",\n        \"aria-label\": unref(t)(`el.datepicker.prevMonth`),\n        class: normalizeClass([unref(ppNs).e(\"icon-btn\"), \"arrow-left\"]),\n        onClick: _cache[3] || (_cache[3] = $event => moveByMonth(false))\n      }, [createVNode(unref(ElIcon), null, {\n        default: withCtx(() => [createVNode(unref(ArrowLeft))]),\n        _: 1\n      })], 10, _hoisted_3), [[vShow, currentView.value === \"date\"]])], 2), createElementVNode(\"span\", {\n        role: \"button\",\n        class: normalizeClass(unref(dpNs).e(\"header-label\")),\n        \"aria-live\": \"polite\",\n        tabindex: \"0\",\n        onKeydown: _cache[4] || (_cache[4] = withKeys($event => showPicker(\"year\"), [\"enter\"])),\n        onClick: _cache[5] || (_cache[5] = $event => showPicker(\"year\"))\n      }, toDisplayString(unref(yearLabel)), 35), withDirectives(createElementVNode(\"span\", {\n        role: \"button\",\n        \"aria-live\": \"polite\",\n        tabindex: \"0\",\n        class: normalizeClass([unref(dpNs).e(\"header-label\"), {\n          active: currentView.value === \"month\"\n        }]),\n        onKeydown: _cache[6] || (_cache[6] = withKeys($event => showPicker(\"month\"), [\"enter\"])),\n        onClick: _cache[7] || (_cache[7] = $event => showPicker(\"month\"))\n      }, toDisplayString(unref(t)(`el.datepicker.month${unref(month) + 1}`)), 35), [[vShow, currentView.value === \"date\"]]), createElementVNode(\"span\", {\n        class: normalizeClass(unref(dpNs).e(\"next-btn\"))\n      }, [withDirectives(createElementVNode(\"button\", {\n        type: \"button\",\n        \"aria-label\": unref(t)(`el.datepicker.nextMonth`),\n        class: normalizeClass([unref(ppNs).e(\"icon-btn\"), \"arrow-right\"]),\n        onClick: _cache[8] || (_cache[8] = $event => moveByMonth(true))\n      }, [createVNode(unref(ElIcon), null, {\n        default: withCtx(() => [createVNode(unref(ArrowRight))]),\n        _: 1\n      })], 10, _hoisted_4), [[vShow, currentView.value === \"date\"]]), createElementVNode(\"button\", {\n        type: \"button\",\n        \"aria-label\": unref(t)(`el.datepicker.nextYear`),\n        class: normalizeClass([unref(ppNs).e(\"icon-btn\"), \"d-arrow-right\"]),\n        onClick: _cache[9] || (_cache[9] = $event => moveByYear(true))\n      }, [createVNode(unref(ElIcon), null, {\n        default: withCtx(() => [createVNode(unref(DArrowRight))]),\n        _: 1\n      })], 10, _hoisted_5)], 2)], 2), [[vShow, currentView.value !== \"time\"]]), createElementVNode(\"div\", {\n        class: normalizeClass(unref(ppNs).e(\"content\")),\n        onKeydown: handleKeydownTable\n      }, [currentView.value === \"date\" ? (openBlock(), createBlock(DateTable, {\n        key: 0,\n        ref_key: \"currentViewRef\",\n        ref: currentViewRef,\n        \"selection-mode\": unref(selectionMode),\n        date: innerDate.value,\n        \"parsed-value\": _ctx.parsedValue,\n        \"disabled-date\": unref(disabledDate),\n        \"cell-class-name\": unref(cellClassName),\n        onPick: handleDatePick\n      }, null, 8, [\"selection-mode\", \"date\", \"parsed-value\", \"disabled-date\", \"cell-class-name\"])) : createCommentVNode(\"v-if\", true), currentView.value === \"year\" ? (openBlock(), createBlock(YearTable, {\n        key: 1,\n        ref_key: \"currentViewRef\",\n        ref: currentViewRef,\n        date: innerDate.value,\n        \"disabled-date\": unref(disabledDate),\n        \"parsed-value\": _ctx.parsedValue,\n        onPick: handleYearPick\n      }, null, 8, [\"date\", \"disabled-date\", \"parsed-value\"])) : createCommentVNode(\"v-if\", true), currentView.value === \"month\" ? (openBlock(), createBlock(MonthTable, {\n        key: 2,\n        ref_key: \"currentViewRef\",\n        ref: currentViewRef,\n        date: innerDate.value,\n        \"parsed-value\": _ctx.parsedValue,\n        \"disabled-date\": unref(disabledDate),\n        onPick: handleMonthPick\n      }, null, 8, [\"date\", \"parsed-value\", \"disabled-date\"])) : createCommentVNode(\"v-if\", true)], 34)], 2)], 2), withDirectives(createElementVNode(\"div\", {\n        class: normalizeClass(unref(ppNs).e(\"footer\"))\n      }, [withDirectives(createVNode(unref(ElButton), {\n        text: \"\",\n        size: \"small\",\n        class: normalizeClass(unref(ppNs).e(\"link-btn\")),\n        onClick: changeToNow\n      }, {\n        default: withCtx(() => [createTextVNode(toDisplayString(unref(t)(\"el.datepicker.now\")), 1)]),\n        _: 1\n      }, 8, [\"class\"]), [[vShow, unref(selectionMode) !== \"dates\"]]), createVNode(unref(ElButton), {\n        plain: \"\",\n        size: \"small\",\n        class: normalizeClass(unref(ppNs).e(\"link-btn\")),\n        onClick: onConfirm\n      }, {\n        default: withCtx(() => [createTextVNode(toDisplayString(unref(t)(\"el.datepicker.confirm\")), 1)]),\n        _: 1\n      }, 8, [\"class\"])], 2), [[vShow, unref(footerVisible) && currentView.value === \"date\"]])], 2);\n    };\n  }\n\n});\n\nvar DatePickPanel = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/date-picker/src/date-picker-com/panel-date-pick.vue\"]]);\n\nexport { DatePickPanel as default };","map":{"version":3,"mappings":"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","names":["timeWithinRange","_","__","___","useNamespace","attrs","useAttrs","slots","useSlots","t","lang","useLocale","inject","TOOLTIP_INJECTION_KEY","shortcuts","disabledDate","cellClassName","defaultTime","arrowControl","pickerBase","defaultValue","currentViewRef","ref","innerDate","locale","value","computed","dayjs","month","year","date","length","selectableRange","props","format","emitDayjs","visibleTime","defaultTimeD","showTime","millisecond","startOf","args","contextEmit","isArray","formatEmit","dates","userInputDate","userInputTime","keepOpen","newDate","parsedValue","checkDateWithinRange","emit","selectionMode","forward","action","handlePanelChange","currentDate","currentView","startYear","Math","yearTranslation","shortcut","isFunction","shortcutValue","onClick","type","includes","hasShortcuts","month2","nextTick","handleFocusPicker","year2","view","onConfirm","result","defaultTimeD2","defaultValueD","getDefaultValue","changeToNow","now","toDate","nowDate","timeFormat","dateFormat","onTimePickerInputFocus","timePickerVisible","handleTimePickClose","hour","minute","second","handleTimePick","visible","first","getUnits","isValid","map","parseDate","defaultTimeDValue","_a","handleKeyControl","code","event","validCode","EVENT_CODE","stopPropagation","up","down","left","right","home","end","pageUp","pageDown","mapping","offset","week","getMonth","getDate","mode","watch","val","immediate","popper","isValidValue","formatToString"],"sources":["../../../../../../../packages/components/date-picker/src/date-picker-com/panel-date-pick.vue"],"sourcesContent":["<template>\n  <div\n    :class=\"[\n      ppNs.b(),\n      dpNs.b(),\n      {\n        'has-sidebar': $slots.sidebar || hasShortcuts,\n        'has-time': showTime,\n      },\n    ]\"\n  >\n    <div :class=\"ppNs.e('body-wrapper')\">\n      <slot name=\"sidebar\" :class=\"ppNs.e('sidebar')\" />\n      <div v-if=\"hasShortcuts\" :class=\"ppNs.e('sidebar')\">\n        <button\n          v-for=\"(shortcut, key) in shortcuts\"\n          :key=\"key\"\n          type=\"button\"\n          :class=\"ppNs.e('shortcut')\"\n          @click=\"handleShortcutClick(shortcut)\"\n        >\n          {{ shortcut.text }}\n        </button>\n      </div>\n      <div :class=\"ppNs.e('body')\">\n        <div v-if=\"showTime\" :class=\"dpNs.e('time-header')\">\n          <span :class=\"dpNs.e('editor-wrap')\">\n            <el-input\n              :placeholder=\"t('el.datepicker.selectDate')\"\n              :model-value=\"visibleDate\"\n              size=\"small\"\n              @input=\"(val) => (userInputDate = val)\"\n              @change=\"handleVisibleDateChange\"\n            />\n          </span>\n          <span\n            v-click-outside=\"handleTimePickClose\"\n            :class=\"dpNs.e('editor-wrap')\"\n          >\n            <el-input\n              :placeholder=\"t('el.datepicker.selectTime')\"\n              :model-value=\"visibleTime\"\n              size=\"small\"\n              @focus=\"onTimePickerInputFocus\"\n              @input=\"(val) => (userInputTime = val)\"\n              @change=\"handleVisibleTimeChange\"\n            />\n            <time-pick-panel\n              :visible=\"timePickerVisible\"\n              :format=\"timeFormat\"\n              :time-arrow-control=\"arrowControl\"\n              :parsed-value=\"innerDate\"\n              @pick=\"handleTimePick\"\n            />\n          </span>\n        </div>\n        <div\n          v-show=\"currentView !== 'time'\"\n          :class=\"[\n            dpNs.e('header'),\n            (currentView === 'year' || currentView === 'month') &&\n              dpNs.e('header--bordered'),\n          ]\"\n        >\n          <span :class=\"dpNs.e('prev-btn')\">\n            <button\n              type=\"button\"\n              :aria-label=\"t(`el.datepicker.prevYear`)\"\n              class=\"d-arrow-left\"\n              :class=\"ppNs.e('icon-btn')\"\n              @click=\"moveByYear(false)\"\n            >\n              <el-icon><d-arrow-left /></el-icon>\n            </button>\n            <button\n              v-show=\"currentView === 'date'\"\n              type=\"button\"\n              :aria-label=\"t(`el.datepicker.prevMonth`)\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"arrow-left\"\n              @click=\"moveByMonth(false)\"\n            >\n              <el-icon><arrow-left /></el-icon>\n            </button>\n          </span>\n          <span\n            role=\"button\"\n            :class=\"dpNs.e('header-label')\"\n            aria-live=\"polite\"\n            tabindex=\"0\"\n            @keydown.enter=\"showPicker('year')\"\n            @click=\"showPicker('year')\"\n            >{{ yearLabel }}</span\n          >\n          <span\n            v-show=\"currentView === 'date'\"\n            role=\"button\"\n            aria-live=\"polite\"\n            tabindex=\"0\"\n            :class=\"[\n              dpNs.e('header-label'),\n              { active: currentView === 'month' },\n            ]\"\n            @keydown.enter=\"showPicker('month')\"\n            @click=\"showPicker('month')\"\n            >{{ t(`el.datepicker.month${month + 1}`) }}</span\n          >\n          <span :class=\"dpNs.e('next-btn')\">\n            <button\n              v-show=\"currentView === 'date'\"\n              type=\"button\"\n              :aria-label=\"t(`el.datepicker.nextMonth`)\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"arrow-right\"\n              @click=\"moveByMonth(true)\"\n            >\n              <el-icon><arrow-right /></el-icon>\n            </button>\n            <button\n              type=\"button\"\n              :aria-label=\"t(`el.datepicker.nextYear`)\"\n              :class=\"ppNs.e('icon-btn')\"\n              class=\"d-arrow-right\"\n              @click=\"moveByYear(true)\"\n            >\n              <el-icon><d-arrow-right /></el-icon>\n            </button>\n          </span>\n        </div>\n        <div :class=\"ppNs.e('content')\" @keydown=\"handleKeydownTable\">\n          <date-table\n            v-if=\"currentView === 'date'\"\n            ref=\"currentViewRef\"\n            :selection-mode=\"selectionMode\"\n            :date=\"innerDate\"\n            :parsed-value=\"parsedValue\"\n            :disabled-date=\"disabledDate\"\n            :cell-class-name=\"cellClassName\"\n            @pick=\"handleDatePick\"\n          />\n          <year-table\n            v-if=\"currentView === 'year'\"\n            ref=\"currentViewRef\"\n            :date=\"innerDate\"\n            :disabled-date=\"disabledDate\"\n            :parsed-value=\"parsedValue\"\n            @pick=\"handleYearPick\"\n          />\n          <month-table\n            v-if=\"currentView === 'month'\"\n            ref=\"currentViewRef\"\n            :date=\"innerDate\"\n            :parsed-value=\"parsedValue\"\n            :disabled-date=\"disabledDate\"\n            @pick=\"handleMonthPick\"\n          />\n        </div>\n      </div>\n    </div>\n    <div\n      v-show=\"footerVisible && currentView === 'date'\"\n      :class=\"ppNs.e('footer')\"\n    >\n      <el-button\n        v-show=\"selectionMode !== 'dates'\"\n        text\n        size=\"small\"\n        :class=\"ppNs.e('link-btn')\"\n        @click=\"changeToNow\"\n      >\n        {{ t('el.datepicker.now') }}\n      </el-button>\n      <el-button\n        plain\n        size=\"small\"\n        :class=\"ppNs.e('link-btn')\"\n        @click=\"onConfirm\"\n      >\n        {{ t('el.datepicker.confirm') }}\n      </el-button>\n    </div>\n  </div>\n</template>\n\n<script lang=\"ts\" setup>\nimport {\n  computed,\n  inject,\n  nextTick,\n  ref,\n  toRef,\n  useAttrs,\n  useSlots,\n  watch,\n} from 'vue'\nimport dayjs from 'dayjs'\nimport ElButton from '@element-plus/components/button'\nimport { ClickOutside as vClickOutside } from '@element-plus/directives'\nimport { useLocale, useNamespace } from '@element-plus/hooks'\nimport ElInput from '@element-plus/components/input'\nimport {\n  TimePickPanel,\n  extractDateFormat,\n  extractTimeFormat,\n} from '@element-plus/components/time-picker'\nimport { ElIcon } from '@element-plus/components/icon'\nimport { isArray, isFunction } from '@element-plus/utils'\nimport { EVENT_CODE } from '@element-plus/constants'\nimport {\n  ArrowLeft,\n  ArrowRight,\n  DArrowLeft,\n  DArrowRight,\n} from '@element-plus/icons-vue'\nimport { TOOLTIP_INJECTION_KEY } from '@element-plus/components/tooltip'\nimport { panelDatePickProps } from '../props/panel-date-pick'\nimport DateTable from './basic-date-table.vue'\nimport MonthTable from './basic-month-table.vue'\nimport YearTable from './basic-year-table.vue'\n\nimport type { SetupContext } from 'vue'\nimport type { ConfigType, Dayjs } from 'dayjs'\nimport type { PanelDatePickProps } from '../props/panel-date-pick'\nimport type {\n  DateTableEmits,\n  DatesPickerEmits,\n  WeekPickerEmits,\n} from '../props/basic-date-table'\n\ntype DatePickType = PanelDatePickProps['type']\n// todo\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst timeWithinRange = (_: ConfigType, __: any, ___: string) => true\nconst props = defineProps(panelDatePickProps)\nconst contextEmit = defineEmits(['pick', 'set-picker-option', 'panel-change'])\nconst ppNs = useNamespace('picker-panel')\nconst dpNs = useNamespace('date-picker')\nconst attrs = useAttrs()\nconst slots = useSlots()\n\nconst { t, lang } = useLocale()\nconst pickerBase = inject('EP_PICKER_BASE') as any\nconst popper = inject(TOOLTIP_INJECTION_KEY)\nconst { shortcuts, disabledDate, cellClassName, defaultTime, arrowControl } =\n  pickerBase.props\nconst defaultValue = toRef(pickerBase.props, 'defaultValue')\n\nconst currentViewRef = ref<{ focus: () => void }>()\n\nconst innerDate = ref(dayjs().locale(lang.value))\n\nconst defaultTimeD = computed(() => {\n  return dayjs(defaultTime).locale(lang.value)\n})\n\nconst month = computed(() => {\n  return innerDate.value.month()\n})\n\nconst year = computed(() => {\n  return innerDate.value.year()\n})\n\nconst selectableRange = ref([])\nconst userInputDate = ref<string | null>(null)\nconst userInputTime = ref<string | null>(null)\n// todo update to disableHour\nconst checkDateWithinRange = (date: ConfigType) => {\n  return selectableRange.value.length > 0\n    ? timeWithinRange(date, selectableRange.value, props.format || 'HH:mm:ss')\n    : true\n}\nconst formatEmit = (emitDayjs: Dayjs) => {\n  if (defaultTime && !visibleTime.value) {\n    return defaultTimeD.value\n      .year(emitDayjs.year())\n      .month(emitDayjs.month())\n      .date(emitDayjs.date())\n  }\n  if (showTime.value) return emitDayjs.millisecond(0)\n  return emitDayjs.startOf('day')\n}\nconst emit = (value: Dayjs | Dayjs[], ...args: any[]) => {\n  if (!value) {\n    contextEmit('pick', value, ...args)\n  } else if (isArray(value)) {\n    const dates = value.map(formatEmit)\n    contextEmit('pick', dates, ...args)\n  } else {\n    contextEmit('pick', formatEmit(value), ...args)\n  }\n  userInputDate.value = null\n  userInputTime.value = null\n}\nconst handleDatePick = (value: DateTableEmits, keepOpen?: boolean) => {\n  if (selectionMode.value === 'date') {\n    value = value as Dayjs\n    let newDate = props.parsedValue\n      ? (props.parsedValue as Dayjs)\n          .year(value.year())\n          .month(value.month())\n          .date(value.date())\n      : value\n    // change default time while out of selectableRange\n    if (!checkDateWithinRange(newDate)) {\n      newDate = (selectableRange.value[0][0] as Dayjs)\n        .year(value.year())\n        .month(value.month())\n        .date(value.date())\n    }\n    innerDate.value = newDate\n    emit(newDate, showTime.value || keepOpen)\n  } else if (selectionMode.value === 'week') {\n    emit((value as WeekPickerEmits).date)\n  } else if (selectionMode.value === 'dates') {\n    emit(value as DatesPickerEmits, true) // set true to keep panel open\n  }\n}\n\nconst moveByMonth = (forward: boolean) => {\n  const action = forward ? 'add' : 'subtract'\n  innerDate.value = innerDate.value[action](1, 'month')\n  handlePanelChange('month')\n}\n\nconst moveByYear = (forward: boolean) => {\n  const currentDate = innerDate.value\n  const action = forward ? 'add' : 'subtract'\n\n  innerDate.value =\n    currentView.value === 'year'\n      ? currentDate[action](10, 'year')\n      : currentDate[action](1, 'year')\n\n  handlePanelChange('year')\n}\n\nconst currentView = ref('date')\n\nconst yearLabel = computed(() => {\n  const yearTranslation = t('el.datepicker.year')\n  if (currentView.value === 'year') {\n    const startYear = Math.floor(year.value / 10) * 10\n    if (yearTranslation) {\n      return `${startYear} ${yearTranslation} - ${\n        startYear + 9\n      } ${yearTranslation}`\n    }\n    return `${startYear} - ${startYear + 9}`\n  }\n  return `${year.value} ${yearTranslation}`\n})\n\ntype Shortcut = {\n  value: (() => Dayjs) | Dayjs\n  onClick?: (ctx: Omit<SetupContext, 'expose'>) => void\n}\n\nconst handleShortcutClick = (shortcut: Shortcut) => {\n  const shortcutValue = isFunction(shortcut.value)\n    ? shortcut.value()\n    : shortcut.value\n  if (shortcutValue) {\n    emit(dayjs(shortcutValue).locale(lang.value))\n    return\n  }\n  if (shortcut.onClick) {\n    shortcut.onClick({\n      attrs,\n      slots,\n      emit: contextEmit as SetupContext['emit'],\n    })\n  }\n}\n\nconst selectionMode = computed<DatePickType>(() => {\n  const { type } = props\n  if (['week', 'month', 'year', 'dates'].includes(type)) return type\n  return 'date' as DatePickType\n})\n\nconst keyboardMode = computed<string>(() => {\n  return selectionMode.value === 'date'\n    ? currentView.value\n    : selectionMode.value\n})\n\nconst hasShortcuts = computed(() => !!shortcuts.length)\n\nconst handleMonthPick = async (month: number) => {\n  innerDate.value = innerDate.value.startOf('month').month(month)\n  if (selectionMode.value === 'month') {\n    emit(innerDate.value, false)\n  } else {\n    currentView.value = 'date'\n    if (['month', 'year', 'date', 'week'].includes(selectionMode.value)) {\n      emit(innerDate.value, true)\n      await nextTick()\n      handleFocusPicker()\n    }\n  }\n  handlePanelChange('month')\n}\n\nconst handleYearPick = async (year: number) => {\n  if (selectionMode.value === 'year') {\n    innerDate.value = innerDate.value.startOf('year').year(year)\n    emit(innerDate.value, false)\n  } else {\n    innerDate.value = innerDate.value.year(year)\n    currentView.value = 'month'\n    if (['month', 'year', 'date', 'week'].includes(selectionMode.value)) {\n      emit(innerDate.value, true)\n      await nextTick()\n      handleFocusPicker()\n    }\n  }\n  handlePanelChange('year')\n}\n\nconst showPicker = async (view: 'month' | 'year') => {\n  currentView.value = view\n  await nextTick()\n  handleFocusPicker()\n}\n\nconst showTime = computed(\n  () => props.type === 'datetime' || props.type === 'datetimerange'\n)\n\nconst footerVisible = computed(() => {\n  return showTime.value || selectionMode.value === 'dates'\n})\n\nconst onConfirm = () => {\n  if (selectionMode.value === 'dates') {\n    emit(props.parsedValue as Dayjs[])\n  } else {\n    // deal with the scenario where: user opens the date time picker, then confirm without doing anything\n    let result = props.parsedValue as Dayjs\n    if (!result) {\n      const defaultTimeD = dayjs(defaultTime).locale(lang.value)\n      const defaultValueD = getDefaultValue()\n      result = defaultTimeD\n        .year(defaultValueD.year())\n        .month(defaultValueD.month())\n        .date(defaultValueD.date())\n    }\n    innerDate.value = result\n    emit(result)\n  }\n}\n\nconst changeToNow = () => {\n  // NOTE: not a permanent solution\n  //       consider disable \"now\" button in the future\n  const now = dayjs().locale(lang.value)\n  const nowDate = now.toDate()\n  if (\n    (!disabledDate || !disabledDate(nowDate)) &&\n    checkDateWithinRange(nowDate)\n  ) {\n    innerDate.value = dayjs().locale(lang.value)\n    emit(innerDate.value)\n  }\n}\n\nconst timeFormat = computed(() => {\n  return extractTimeFormat(props.format)\n})\n\nconst dateFormat = computed(() => {\n  return extractDateFormat(props.format)\n})\n\nconst visibleTime = computed(() => {\n  if (userInputTime.value) return userInputTime.value\n  if (!props.parsedValue && !defaultValue.value) return\n  return ((props.parsedValue || innerDate.value) as Dayjs).format(\n    timeFormat.value\n  )\n})\n\nconst visibleDate = computed(() => {\n  if (userInputDate.value) return userInputDate.value\n  if (!props.parsedValue && !defaultValue.value) return\n  return ((props.parsedValue || innerDate.value) as Dayjs).format(\n    dateFormat.value\n  )\n})\n\nconst timePickerVisible = ref(false)\nconst onTimePickerInputFocus = () => {\n  timePickerVisible.value = true\n}\nconst handleTimePickClose = () => {\n  timePickerVisible.value = false\n}\n\nconst getUnits = (date: Dayjs) => {\n  return {\n    hour: date.hour(),\n    minute: date.minute(),\n    second: date.second(),\n    year: date.year(),\n    month: date.month(),\n    date: date.date(),\n  }\n}\n\nconst handleTimePick = (value: Dayjs, visible: boolean, first: boolean) => {\n  const { hour, minute, second } = getUnits(value)\n  const newDate = props.parsedValue\n    ? (props.parsedValue as Dayjs).hour(hour).minute(minute).second(second)\n    : value\n  innerDate.value = newDate\n  emit(innerDate.value, true)\n  if (!first) {\n    timePickerVisible.value = visible\n  }\n}\n\nconst handleVisibleTimeChange = (value: string) => {\n  const newDate = dayjs(value, timeFormat.value).locale(lang.value)\n  if (newDate.isValid() && checkDateWithinRange(newDate)) {\n    const { year, month, date } = getUnits(innerDate.value)\n    innerDate.value = newDate.year(year).month(month).date(date)\n    userInputTime.value = null\n    timePickerVisible.value = false\n    emit(innerDate.value, true)\n  }\n}\n\nconst handleVisibleDateChange = (value: string) => {\n  const newDate = dayjs(value, dateFormat.value).locale(lang.value)\n  if (newDate.isValid()) {\n    if (disabledDate && disabledDate(newDate.toDate())) {\n      return\n    }\n    const { hour, minute, second } = getUnits(innerDate.value)\n    innerDate.value = newDate.hour(hour).minute(minute).second(second)\n    userInputDate.value = null\n    emit(innerDate.value, true)\n  }\n}\n\nconst isValidValue = (date: unknown) => {\n  return (\n    dayjs.isDayjs(date) &&\n    date.isValid() &&\n    (disabledDate ? !disabledDate(date.toDate()) : true)\n  )\n}\n\nconst formatToString = (value: Dayjs | Dayjs[]) => {\n  if (selectionMode.value === 'dates') {\n    return (value as Dayjs[]).map((_) => _.format(props.format))\n  }\n  return (value as Dayjs).format(props.format)\n}\n\nconst parseUserInput = (value: Dayjs) => {\n  return dayjs(value, props.format).locale(lang.value)\n}\n\nconst getDefaultValue = () => {\n  const parseDate = dayjs(defaultValue.value).locale(lang.value)\n  if (!defaultValue.value) {\n    const defaultTimeDValue = defaultTimeD.value\n    return dayjs()\n      .hour(defaultTimeDValue.hour())\n      .minute(defaultTimeDValue.minute())\n      .second(defaultTimeDValue.second())\n      .locale(lang.value)\n  }\n  return parseDate\n}\n\nconst handleFocusPicker = async () => {\n  if (['week', 'month', 'year', 'date'].includes(selectionMode.value)) {\n    currentViewRef.value?.focus()\n    if (selectionMode.value === 'week') {\n      handleKeyControl(EVENT_CODE.down)\n    }\n  }\n}\n\nconst handleKeydownTable = (event: KeyboardEvent) => {\n  const { code } = event\n  const validCode = [\n    EVENT_CODE.up,\n    EVENT_CODE.down,\n    EVENT_CODE.left,\n    EVENT_CODE.right,\n    EVENT_CODE.home,\n    EVENT_CODE.end,\n    EVENT_CODE.pageUp,\n    EVENT_CODE.pageDown,\n  ]\n  if (validCode.includes(code)) {\n    handleKeyControl(code)\n    event.stopPropagation()\n    event.preventDefault()\n  }\n  if (\n    [EVENT_CODE.enter, EVENT_CODE.space].includes(code) &&\n    userInputDate.value === null &&\n    userInputTime.value === null\n  ) {\n    event.preventDefault()\n    emit(innerDate.value, false)\n  }\n}\n\nconst handleKeyControl = (code: string) => {\n  type KeyControlMappingCallableOffset = (date: Date, step?: number) => number\n  type KeyControl = {\n    [key: string]:\n      | number\n      | KeyControlMappingCallableOffset\n      | ((date: Date, step: number) => any)\n    offset: (date: Date, step: number) => any\n  }\n  interface KeyControlMapping {\n    [key: string]: KeyControl\n  }\n\n  const { up, down, left, right, home, end, pageUp, pageDown } = EVENT_CODE\n  const mapping: KeyControlMapping = {\n    year: {\n      [up]: -4,\n      [down]: 4,\n      [left]: -1,\n      [right]: 1,\n      offset: (date: Date, step: number) =>\n        date.setFullYear(date.getFullYear() + step),\n    },\n    month: {\n      [up]: -4,\n      [down]: 4,\n      [left]: -1,\n      [right]: 1,\n      offset: (date: Date, step: number) =>\n        date.setMonth(date.getMonth() + step),\n    },\n    week: {\n      [up]: -1,\n      [down]: 1,\n      [left]: -1,\n      [right]: 1,\n      offset: (date: Date, step: number) =>\n        date.setDate(date.getDate() + step * 7),\n    },\n    date: {\n      [up]: -7,\n      [down]: 7,\n      [left]: -1,\n      [right]: 1,\n      [home]: (date: Date) => -date.getDay(),\n      [end]: (date: Date) => -date.getDay() + 6,\n      [pageUp]: (date: Date) =>\n        -new Date(date.getFullYear(), date.getMonth(), 0).getDate(),\n      [pageDown]: (date: Date) =>\n        new Date(date.getFullYear(), date.getMonth() + 1, 0).getDate(),\n      offset: (date: Date, step: number) => date.setDate(date.getDate() + step),\n    },\n  }\n\n  const newDate = innerDate.value.toDate()\n  while (Math.abs(innerDate.value.diff(newDate, 'year', true)) < 1) {\n    const map = mapping[keyboardMode.value]\n    if (!map) return\n    map.offset(\n      newDate,\n      isFunction(map[code])\n        ? (map[code] as unknown as KeyControlMappingCallableOffset)(newDate)\n        : (map[code] as number) ?? 0\n    )\n    if (disabledDate && disabledDate(newDate)) {\n      break\n    }\n    const result = dayjs(newDate).locale(lang.value)\n    innerDate.value = result\n    contextEmit('pick', result, true)\n    break\n  }\n}\n\nconst handlePanelChange = (mode: 'month' | 'year') => {\n  contextEmit('panel-change', innerDate.value.toDate(), mode, currentView.value)\n}\n\nwatch(\n  () => selectionMode.value,\n  (val) => {\n    if (['month', 'year'].includes(val)) {\n      currentView.value = val\n      return\n    }\n    currentView.value = 'date'\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => currentView.value,\n  () => {\n    popper?.updatePopper()\n  }\n)\n\nwatch(\n  () => defaultValue.value,\n  (val) => {\n    if (val) {\n      innerDate.value = getDefaultValue()\n    }\n  },\n  { immediate: true }\n)\n\nwatch(\n  () => props.parsedValue,\n  (val) => {\n    if (val) {\n      if (selectionMode.value === 'dates') return\n      if (Array.isArray(val)) return\n      innerDate.value = val\n    } else {\n      innerDate.value = getDefaultValue()\n    }\n  },\n  { immediate: true }\n)\n\ncontextEmit('set-picker-option', ['isValidValue', isValidValue])\ncontextEmit('set-picker-option', ['formatToString', formatToString])\ncontextEmit('set-picker-option', ['parseUserInput', parseUserInput])\ncontextEmit('set-picker-option', ['handleFocusPicker', handleFocusPicker])\n</script>\n"]},"metadata":{},"sourceType":"module"}