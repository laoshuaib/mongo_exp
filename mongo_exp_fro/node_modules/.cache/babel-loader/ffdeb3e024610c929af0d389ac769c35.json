{"ast":null,"code":"const useFocus = el => {\n  return {\n    focus: () => {\n      var _a, _b;\n\n      (_b = (_a = el.value) == null ? void 0 : _a.focus) == null ? void 0 : _b.call(_a);\n    }\n  };\n};\n\nexport { useFocus };","map":{"version":3,"mappings":"AAAY,MAACA,QAAQ,GAAIC,EAAD,IAAQ;EAC9B,OAAO;IACLC,KAAK,EAAE,MAAM;MACX,IAAIC,EAAJ,EAAQC,EAAR;;MACA,CAACA,EAAE,GAAG,CAACD,EAAE,GAAGF,EAAE,CAACI,KAAT,KAAmB,IAAnB,GAA0B,KAAK,CAA/B,GAAmCF,EAAE,CAACD,KAA5C,KAAsD,IAAtD,GAA6D,KAAK,CAAlE,GAAsEE,EAAE,CAACE,IAAH,CAAQH,EAAR,CAAtE;IACD;EAJI,CAAP;AAMF,CAPY","names":["useFocus","el","focus","_a","_b","value","call"],"sources":["../../../../../packages/hooks/use-focus/index.ts"],"sourcesContent":["import type { Ref } from 'vue'\n\nexport const useFocus = (\n  el: Ref<{\n    focus: () => void\n  } | null>\n) => {\n  return {\n    focus: () => {\n      el.value?.focus?.()\n    },\n  }\n}\n"]},"metadata":{},"sourceType":"module"}