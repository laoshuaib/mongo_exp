{"ast":null,"code":"import { isVNode, h } from 'vue';\nimport '../../../utils/index.mjs';\nimport { isArray, isFunction } from '@vue/shared';\nimport { addUnit } from '../../../utils/dom/style.mjs';\n\nconst sumReducer = (sum2, num) => sum2 + num;\n\nconst sum = listLike => {\n  return isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike;\n};\n\nconst tryCall = (fLike, params, defaultRet = {}) => {\n  return isFunction(fLike) ? fLike(params) : fLike != null ? fLike : defaultRet;\n};\n\nconst enforceUnit = style => {\n  ;\n  [\"width\", \"maxWidth\", \"minWidth\", \"height\"].forEach(key => {\n    style[key] = addUnit(style[key]);\n  });\n  return style;\n};\n\nconst componentToSlot = ComponentLike => isVNode(ComponentLike) ? props => h(ComponentLike, props) : ComponentLike;\n\nexport { componentToSlot, enforceUnit, sum, tryCall };","map":{"version":3,"mappings":";;;;;AAEA,MAAMA,UAAU,GAAG,CAACC,IAAD,EAAOC,GAAP,KAAeD,IAAI,GAAGC,GAAzC;;AACY,MAACC,GAAG,GAAIC,QAAD,IAAc;EAC/B,OAAOC,OAAO,CAACD,QAAD,CAAP,GAAoBA,QAAQ,CAACE,MAAT,CAAgBN,UAAhB,EAA4B,CAA5B,CAApB,GAAqDI,QAA5D;AACF,CAFY;;AAGA,MAACG,OAAO,GAAG,CAACC,KAAD,EAAQC,MAAR,EAAgBC,UAAU,GAAG,EAA7B,KAAoC;EACzD,OAAOC,UAAU,CAACH,KAAD,CAAV,GAAoBA,KAAK,CAACC,MAAD,CAAzB,GAAoCD,KAAK,IAAI,IAAT,GAAgBA,KAAhB,GAAwBE,UAAnE;AACF,CAFY;;AAGA,MAACE,WAAW,GAAIC,KAAD,IAAW;EACpC;EACA,CAAC,OAAD,EAAU,UAAV,EAAsB,UAAtB,EAAkC,QAAlC,EAA4CC,OAA5C,CAAqDC,GAAD,IAAS;IAC3DF,KAAK,CAACE,GAAD,CAAL,GAAaC,OAAO,CAACH,KAAK,CAACE,GAAD,CAAN,CAApB;EACD,CAFD;EAGA,OAAOF,KAAP;AACF,CANY;;AAOA,MAACI,eAAe,GAAIC,aAAD,IAAmBC,OAAO,CAACD,aAAD,CAAP,GAA0BE,KAAD,IAAWC,CAAC,CAACH,aAAD,EAAgBE,KAAhB,CAArC,GAA8DF,aAApG","names":["sumReducer","sum2","num","sum","listLike","isArray","reduce","tryCall","fLike","params","defaultRet","isFunction","enforceUnit","style","forEach","key","addUnit","componentToSlot","ComponentLike","isVNode","props","h"],"sources":["../../../../../../packages/components/table-v2/src/utils.ts"],"sourcesContent":["import { h, isVNode } from 'vue'\nimport { addUnit, isArray, isFunction } from '@element-plus/utils'\n\nimport type { CSSProperties, Component, Slot } from 'vue'\n\nconst sumReducer = (sum: number, num: number) => sum + num\n\nexport const sum = (listLike: number | number[]) => {\n  return isArray(listLike) ? listLike.reduce(sumReducer, 0) : listLike\n}\n\nexport const tryCall = <T>(\n  fLike: T,\n  params: T extends (...args: infer K) => unknown ? K : any,\n  defaultRet = {}\n) => {\n  return isFunction(fLike) ? fLike(params) : fLike ?? defaultRet\n}\n\nexport const enforceUnit = (style: CSSProperties) => {\n  ;(['width', 'maxWidth', 'minWidth', 'height'] as const).forEach((key) => {\n    style[key] = addUnit(style[key])\n  })\n\n  return style\n}\n\nexport const componentToSlot = <T>(\n  ComponentLike: JSX.Element | ((props: T) => Component<T>) | undefined\n) =>\n  isVNode(ComponentLike)\n    ? (props: T) => h(ComponentLike, props)\n    : (ComponentLike as Slot)\n"]},"metadata":{},"sourceType":"module"}