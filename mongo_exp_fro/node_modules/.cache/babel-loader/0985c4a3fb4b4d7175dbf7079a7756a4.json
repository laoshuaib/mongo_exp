{"ast":null,"code":"const NODE_KEY = \"$treeNodeId\";\n\nconst markNodeData = function (node, data) {\n  if (!data || data[NODE_KEY]) return;\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false\n  });\n};\n\nconst getNodeKey = function (key, data) {\n  if (!key) return data[NODE_KEY];\n  return data[key];\n};\n\nexport { NODE_KEY, getNodeKey, markNodeData };","map":{"version":3,"mappings":"AAAY,MAACA,QAAQ,GAAG,aAAZ;;AACA,MAACC,YAAY,GAAG,UAASC,IAAT,EAAeC,IAAf,EAAqB;EAC/C,IAAI,CAACA,IAAD,IAASA,IAAI,CAACH,QAAD,CAAjB,EACE;EACFI,MAAM,CAACC,cAAP,CAAsBF,IAAtB,EAA4BH,QAA5B,EAAsC;IACpCM,KAAK,EAAEJ,IAAI,CAACK,EADwB;IAEpCC,UAAU,EAAE,KAFwB;IAGpCC,YAAY,EAAE,KAHsB;IAIpCC,QAAQ,EAAE;EAJ0B,CAAtC;AAMF,CATY;;AAUA,MAACC,UAAU,GAAG,UAASC,GAAT,EAAcT,IAAd,EAAoB;EAC5C,IAAI,CAACS,GAAL,EACE,OAAOT,IAAI,CAACH,QAAD,CAAX;EACF,OAAOG,IAAI,CAACS,GAAD,CAAX;AACF,CAJY","names":["NODE_KEY","markNodeData","node","data","Object","defineProperty","value","id","enumerable","configurable","writable","getNodeKey","key"],"sources":["../../../../../../../packages/components/tree/src/model/util.ts"],"sourcesContent":["import type Node from './node'\nimport type { TreeKey, TreeNodeData } from '../tree.type'\n\nexport const NODE_KEY = '$treeNodeId'\n\nexport const markNodeData = function (node: Node, data: TreeNodeData): void {\n  if (!data || data[NODE_KEY]) return\n  Object.defineProperty(data, NODE_KEY, {\n    value: node.id,\n    enumerable: false,\n    configurable: false,\n    writable: false,\n  })\n}\n\nexport const getNodeKey = function (key: TreeKey, data: TreeNodeData): any {\n  if (!key) return data[NODE_KEY]\n  return data[key]\n}\n"]},"metadata":{},"sourceType":"module"}