{"ast":null,"code":"import { ref, toRef, shallowRef, computed, unref, watch } from 'vue';\nimport '../../../utils/index.mjs';\nimport './composables/index.mjs';\nimport { useColumns } from './composables/use-columns.mjs';\nimport { useScrollbar } from './composables/use-scrollbar.mjs';\nimport { useRow } from './composables/use-row.mjs';\nimport { useData } from './composables/use-data.mjs';\nimport { useStyles } from './composables/use-styles.mjs';\nimport { isArray } from '@vue/shared';\n\nfunction useTable(props) {\n  const mainTableRef = ref();\n  const leftTableRef = ref();\n  const rightTableRef = ref();\n  const {\n    columns,\n    columnsStyles,\n    columnsTotalWidth,\n    fixedColumnsOnLeft,\n    fixedColumnsOnRight,\n    hasFixedColumns,\n    mainColumns,\n    onColumnSorted\n  } = useColumns(props, toRef(props, \"columns\"), toRef(props, \"fixed\"));\n  const {\n    scrollTo,\n    scrollToLeft,\n    scrollToTop,\n    scrollToRow,\n    onScroll,\n    onVerticalScroll,\n    scrollPos\n  } = useScrollbar(props, {\n    mainTableRef,\n    leftTableRef,\n    rightTableRef,\n    onMaybeEndReached\n  });\n  const {\n    expandedRowKeys,\n    hoveringRowKey,\n    lastRenderedRowIndex,\n    isDynamic,\n    isResetting,\n    rowHeights,\n    resetAfterIndex,\n    onRowExpanded,\n    onRowHeightChange,\n    onRowHovered,\n    onRowsRendered\n  } = useRow(props, {\n    mainTableRef,\n    leftTableRef,\n    rightTableRef,\n    onMaybeEndReached\n  });\n  const {\n    data,\n    depthMap\n  } = useData(props, {\n    expandedRowKeys,\n    lastRenderedRowIndex,\n    resetAfterIndex\n  });\n  const {\n    bodyWidth,\n    fixedTableHeight,\n    mainTableHeight,\n    leftTableWidth,\n    rightTableWidth,\n    headerWidth,\n    rowsHeight,\n    windowHeight,\n    footerHeight,\n    emptyStyle,\n    rootStyle\n  } = useStyles(props, {\n    columnsTotalWidth,\n    data,\n    fixedColumnsOnLeft,\n    fixedColumnsOnRight\n  });\n  const isScrolling = shallowRef(false);\n  const containerRef = ref();\n  const showEmpty = computed(() => {\n    const noData = unref(data).length === 0;\n    return isArray(props.fixedData) ? props.fixedData.length === 0 && noData : noData;\n  });\n\n  function getRowHeight(rowIndex) {\n    const {\n      estimatedRowHeight,\n      rowHeight,\n      rowKey\n    } = props;\n    if (!estimatedRowHeight) return rowHeight;\n    return unref(rowHeights)[unref(data)[rowIndex][rowKey]] || estimatedRowHeight;\n  }\n\n  function onMaybeEndReached() {\n    const {\n      onEndReached\n    } = props;\n    if (!onEndReached) return;\n    const {\n      scrollTop\n    } = unref(scrollPos);\n\n    const _totalHeight = unref(rowsHeight);\n\n    const clientHeight = unref(windowHeight);\n    const heightUntilEnd = _totalHeight - (scrollTop + clientHeight) + props.hScrollbarSize;\n\n    if (unref(lastRenderedRowIndex) >= 0 && _totalHeight !== unref(rowsHeight)) {\n      onEndReached(heightUntilEnd);\n    }\n  }\n\n  watch(() => props.expandedRowKeys, val => expandedRowKeys.value = val, {\n    deep: true\n  });\n  return {\n    columns,\n    containerRef,\n    mainTableRef,\n    leftTableRef,\n    rightTableRef,\n    isDynamic,\n    isResetting,\n    isScrolling,\n    hoveringRowKey,\n    hasFixedColumns,\n    columnsStyles,\n    columnsTotalWidth,\n    data,\n    expandedRowKeys,\n    depthMap,\n    fixedColumnsOnLeft,\n    fixedColumnsOnRight,\n    mainColumns,\n    bodyWidth,\n    emptyStyle,\n    rootStyle,\n    headerWidth,\n    footerHeight,\n    mainTableHeight,\n    fixedTableHeight,\n    leftTableWidth,\n    rightTableWidth,\n    showEmpty,\n    getRowHeight,\n    onColumnSorted,\n    onRowHovered,\n    onRowExpanded,\n    onRowsRendered,\n    onRowHeightChange,\n    scrollTo,\n    scrollToLeft,\n    scrollToTop,\n    scrollToRow,\n    onScroll,\n    onVerticalScroll\n  };\n}\n\nexport { useTable };","map":{"version":3,"mappings":"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","names":["useTable","props","mainTableRef","ref","leftTableRef","rightTableRef","columns","columnsStyles","columnsTotalWidth","fixedColumnsOnLeft","fixedColumnsOnRight","hasFixedColumns","mainColumns","onColumnSorted","useColumns","toRef","scrollTo","scrollToLeft","scrollToTop","scrollToRow","onScroll","onVerticalScroll","scrollPos","useScrollbar","onMaybeEndReached","expandedRowKeys","hoveringRowKey","lastRenderedRowIndex","isDynamic","isResetting","rowHeights","resetAfterIndex","onRowExpanded","onRowHeightChange","onRowHovered","onRowsRendered","useRow","data","depthMap","useData","bodyWidth","fixedTableHeight","mainTableHeight","leftTableWidth","rightTableWidth","headerWidth","rowsHeight","windowHeight","footerHeight","emptyStyle","rootStyle","useStyles","isScrolling","shallowRef","containerRef","showEmpty","computed","noData","unref","length","isArray","fixedData","getRowHeight","rowIndex","estimatedRowHeight","rowHeight","rowKey","onEndReached","scrollTop","_totalHeight","clientHeight","heightUntilEnd","hScrollbarSize","watch","val","value","deep"],"sources":["../../../../../../packages/components/table-v2/src/use-table.ts"],"sourcesContent":["import { computed, ref, shallowRef, toRef, unref, watch } from 'vue'\nimport { isArray } from '@element-plus/utils'\nimport {\n  useColumns,\n  useData,\n  useRow,\n  useScrollbar,\n  useStyles,\n} from './composables'\n\nimport type { TableV2Props } from './table'\nimport type { TableGridInstance } from './table-grid'\n\nfunction useTable(props: TableV2Props) {\n  const mainTableRef = ref<TableGridInstance>()\n  const leftTableRef = ref<TableGridInstance>()\n  const rightTableRef = ref<TableGridInstance>()\n  const {\n    columns,\n    columnsStyles,\n    columnsTotalWidth,\n    fixedColumnsOnLeft,\n    fixedColumnsOnRight,\n    hasFixedColumns,\n    mainColumns,\n\n    onColumnSorted,\n  } = useColumns(props, toRef(props, 'columns'), toRef(props, 'fixed'))\n\n  const {\n    scrollTo,\n    scrollToLeft,\n    scrollToTop,\n    scrollToRow,\n    onScroll,\n    onVerticalScroll,\n    scrollPos,\n  } = useScrollbar(props, {\n    mainTableRef,\n    leftTableRef,\n    rightTableRef,\n\n    onMaybeEndReached,\n  })\n\n  const {\n    expandedRowKeys,\n    hoveringRowKey,\n    lastRenderedRowIndex,\n    isDynamic,\n    isResetting,\n    rowHeights,\n\n    resetAfterIndex,\n    onRowExpanded,\n    onRowHeightChange,\n    onRowHovered,\n    onRowsRendered,\n  } = useRow(props, {\n    mainTableRef,\n    leftTableRef,\n    rightTableRef,\n\n    onMaybeEndReached,\n  })\n\n  const { data, depthMap } = useData(props, {\n    expandedRowKeys,\n    lastRenderedRowIndex,\n    resetAfterIndex,\n  })\n\n  const {\n    bodyWidth,\n    fixedTableHeight,\n    mainTableHeight,\n    leftTableWidth,\n    rightTableWidth,\n    headerWidth,\n    rowsHeight,\n    windowHeight,\n    footerHeight,\n    emptyStyle,\n    rootStyle,\n  } = useStyles(props, {\n    columnsTotalWidth,\n    data,\n    fixedColumnsOnLeft,\n    fixedColumnsOnRight,\n  })\n  // state\n  const isScrolling = shallowRef(false)\n\n  // DOM/Component refs\n  const containerRef = ref()\n\n  const showEmpty = computed(() => {\n    const noData = unref(data).length === 0\n\n    return isArray(props.fixedData)\n      ? props.fixedData.length === 0 && noData\n      : noData\n  })\n\n  function getRowHeight(rowIndex: number) {\n    const { estimatedRowHeight, rowHeight, rowKey } = props\n\n    if (!estimatedRowHeight) return rowHeight\n\n    return (\n      unref(rowHeights)[unref(data)[rowIndex][rowKey]] || estimatedRowHeight\n    )\n  }\n\n  function onMaybeEndReached() {\n    const { onEndReached } = props\n    if (!onEndReached) return\n\n    const { scrollTop } = unref(scrollPos)\n\n    const _totalHeight = unref(rowsHeight)\n    const clientHeight = unref(windowHeight)\n\n    const heightUntilEnd =\n      _totalHeight - (scrollTop + clientHeight) + props.hScrollbarSize\n\n    if (\n      unref(lastRenderedRowIndex) >= 0 &&\n      _totalHeight !== unref(rowsHeight)\n    ) {\n      onEndReached(heightUntilEnd)\n    }\n  }\n\n  // events\n\n  watch(\n    () => props.expandedRowKeys,\n    (val) => (expandedRowKeys.value = val),\n    {\n      deep: true,\n    }\n  )\n\n  return {\n    // models\n    columns,\n    containerRef,\n    mainTableRef,\n    leftTableRef,\n    rightTableRef,\n    // states\n    isDynamic,\n    isResetting,\n    isScrolling,\n    hoveringRowKey,\n    hasFixedColumns,\n    // records\n    columnsStyles,\n    columnsTotalWidth,\n    data,\n    expandedRowKeys,\n    depthMap,\n    fixedColumnsOnLeft,\n    fixedColumnsOnRight,\n    mainColumns,\n    // metadata\n    bodyWidth,\n    emptyStyle,\n    rootStyle,\n    headerWidth,\n    footerHeight,\n    mainTableHeight,\n    fixedTableHeight,\n    leftTableWidth,\n    rightTableWidth,\n    // flags\n    showEmpty,\n\n    // methods\n    getRowHeight,\n\n    // event handlers\n    onColumnSorted,\n    onRowHovered,\n    onRowExpanded,\n    onRowsRendered,\n    onRowHeightChange,\n    // use scrollbars\n    scrollTo,\n    scrollToLeft,\n    scrollToTop,\n    scrollToRow,\n    onScroll,\n    onVerticalScroll,\n  }\n}\n\nexport { useTable }\n\nexport type UseTableReturn = ReturnType<typeof useTable>\n"]},"metadata":{},"sourceType":"module"}