{"ast":null,"code":"import '../../../../utils/index.mjs';\nimport { cAF, rAF } from '../../../../utils/raf.mjs';\nimport { isFirefox } from '../../../../utils/browser.mjs';\n\nconst useGridWheel = ({\n  atXEndEdge,\n  atXStartEdge,\n  atYEndEdge,\n  atYStartEdge\n}, onWheelDelta) => {\n  let frameHandle = null;\n  let xOffset = 0;\n  let yOffset = 0;\n\n  const hasReachedEdge = (x, y) => {\n    const xEdgeReached = x < 0 && atXStartEdge.value || x > 0 && atXEndEdge.value;\n    const yEdgeReached = y < 0 && atYStartEdge.value || y > 0 && atYEndEdge.value;\n    return xEdgeReached && yEdgeReached;\n  };\n\n  const onWheel = e => {\n    cAF(frameHandle);\n    let x = e.deltaX;\n    let y = e.deltaY;\n\n    if (Math.abs(x) > Math.abs(y)) {\n      y = 0;\n    } else {\n      x = 0;\n    }\n\n    if (e.shiftKey && y !== 0) {\n      x = y;\n      y = 0;\n    }\n\n    if (hasReachedEdge(xOffset, yOffset) && hasReachedEdge(xOffset + x, yOffset + y)) return;\n    xOffset += x;\n    yOffset += y;\n\n    if (!isFirefox()) {\n      e.preventDefault();\n    }\n\n    frameHandle = rAF(() => {\n      onWheelDelta(xOffset, yOffset);\n      xOffset = 0;\n      yOffset = 0;\n    });\n  };\n\n  return {\n    hasReachedEdge,\n    onWheel\n  };\n};\n\nexport { useGridWheel };","map":{"version":3,"mappings":";;;;AACY,MAACA,YAAY,GAAG,CAAC;EAAEC,UAAF;EAAcC,YAAd;EAA4BC,UAA5B;EAAwCC;AAAxC,CAAD,EAAyDC,YAAzD,KAA0E;EACpG,IAAIC,WAAW,GAAG,IAAlB;EACA,IAAIC,OAAO,GAAG,CAAd;EACA,IAAIC,OAAO,GAAG,CAAd;;EACA,MAAMC,cAAc,GAAG,CAACC,CAAD,EAAIC,CAAJ,KAAU;IAC/B,MAAMC,YAAY,GAAGF,CAAC,GAAG,CAAJ,IAASR,YAAY,CAACW,KAAtB,IAA+BH,CAAC,GAAG,CAAJ,IAAST,UAAU,CAACY,KAAxE;IACA,MAAMC,YAAY,GAAGH,CAAC,GAAG,CAAJ,IAASP,YAAY,CAACS,KAAtB,IAA+BF,CAAC,GAAG,CAAJ,IAASR,UAAU,CAACU,KAAxE;IACA,OAAOD,YAAY,IAAIE,YAAvB;EACD,CAJD;;EAKA,MAAMC,OAAO,GAAIC,CAAD,IAAO;IACrBC,GAAG,CAACX,WAAD,CAAH;IACA,IAAII,CAAC,GAAGM,CAAC,CAACE,MAAV;IACA,IAAIP,CAAC,GAAGK,CAAC,CAACG,MAAV;;IACA,IAAIC,IAAI,CAACC,GAAL,CAASX,CAAT,IAAcU,IAAI,CAACC,GAAL,CAASV,CAAT,CAAlB,EAA+B;MAC7BA,CAAC,GAAG,CAAJ;IACD,CAFD,MAEO;MACLD,CAAC,GAAG,CAAJ;IACD;;IACD,IAAIM,CAAC,CAACM,QAAF,IAAcX,CAAC,KAAK,CAAxB,EAA2B;MACzBD,CAAC,GAAGC,CAAJ;MACAA,CAAC,GAAG,CAAJ;IACD;;IACD,IAAIF,cAAc,CAACF,OAAD,EAAUC,OAAV,CAAd,IAAoCC,cAAc,CAACF,OAAO,GAAGG,CAAX,EAAcF,OAAO,GAAGG,CAAxB,CAAtD,EACE;IACFJ,OAAO,IAAIG,CAAX;IACAF,OAAO,IAAIG,CAAX;;IACA,IAAI,CAACY,SAAS,EAAd,EAAkB;MAChBP,CAAC,CAACQ,cAAF;IACD;;IACDlB,WAAW,GAAGmB,GAAG,CAAC,MAAM;MACtBpB,YAAY,CAACE,OAAD,EAAUC,OAAV,CAAZ;MACAD,OAAO,GAAG,CAAV;MACAC,OAAO,GAAG,CAAV;IACD,CAJgB,CAAjB;EAKD,CAzBD;;EA0BA,OAAO;IACLC,cADK;IAELM;EAFK,CAAP;AAIF,CAvCY","names":["useGridWheel","atXEndEdge","atXStartEdge","atYEndEdge","atYStartEdge","onWheelDelta","frameHandle","xOffset","yOffset","hasReachedEdge","x","y","xEdgeReached","value","yEdgeReached","onWheel","e","cAF","deltaX","deltaY","Math","abs","shiftKey","isFirefox","preventDefault","rAF"],"sources":["../../../../../../../packages/components/virtual-list/src/hooks/use-grid-wheel.ts"],"sourcesContent":["import { cAF, isFirefox, rAF } from '@element-plus/utils'\n\nimport type { ComputedRef } from 'vue'\n\ninterface GridWheelState {\n  atXStartEdge: ComputedRef<boolean>\n  atXEndEdge: ComputedRef<boolean>\n  atYStartEdge: ComputedRef<boolean>\n  atYEndEdge: ComputedRef<boolean>\n}\n\ntype GridWheelHandler = (x: number, y: number) => void\n\nexport const useGridWheel = (\n  { atXEndEdge, atXStartEdge, atYEndEdge, atYStartEdge }: GridWheelState,\n  onWheelDelta: GridWheelHandler\n) => {\n  let frameHandle: number | null = null\n  let xOffset = 0\n  let yOffset = 0\n\n  const hasReachedEdge = (x: number, y: number) => {\n    const xEdgeReached =\n      (x < 0 && atXStartEdge.value) || (x > 0 && atXEndEdge.value)\n    const yEdgeReached =\n      (y < 0 && atYStartEdge.value) || (y > 0 && atYEndEdge.value)\n    return xEdgeReached && yEdgeReached\n  }\n\n  const onWheel = (e: WheelEvent) => {\n    cAF(frameHandle!)\n\n    let x = e.deltaX\n    let y = e.deltaY\n    // Simulate native behavior when using touch pad/track pad for wheeling.\n    if (Math.abs(x) > Math.abs(y)) {\n      y = 0\n    } else {\n      x = 0\n    }\n\n    // Special case for windows machine with shift key + wheel scrolling\n    if (e.shiftKey && y !== 0) {\n      x = y\n      y = 0\n    }\n\n    if (\n      hasReachedEdge(xOffset, yOffset) &&\n      hasReachedEdge(xOffset + x, yOffset + y)\n    )\n      return\n\n    xOffset += x\n    yOffset += y\n\n    if (!isFirefox()) {\n      e.preventDefault()\n    }\n\n    frameHandle = rAF(() => {\n      onWheelDelta(xOffset, yOffset)\n      xOffset = 0\n      yOffset = 0\n    })\n  }\n\n  return {\n    hasReachedEdge,\n    onWheel,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}