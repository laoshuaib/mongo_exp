{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport \"core-js/modules/es.error.cause.js\";\n\nfunction getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\n\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n  {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n\n    if (middleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement`', 'middleware detected. This will lead to an infinite loop. Ensure only', 'one of either has been passed to the `middleware` array.'].join(' '));\n    }\n  }\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n\n  for (let i = 0; i < middleware.length; i++) {\n    const {\n      name,\n      fn\n    } = middleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = { ...middlewareData,\n      [name]: { ...middlewareData[name],\n        ...data\n      }\n    };\n    {\n      if (resetCount > 50) {\n        console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n      }\n    }\n\n    if (reset && resetCount <= 50) {\n      resetCount++;\n\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n\n      i = -1;\n      continue;\n    }\n  }\n\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return { ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\n\n\nasync function detectOverflow(middlewareArguments, options) {\n  var _await$platform$isEle;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect: elementContext === 'floating' ? { ...rects.floating,\n      x,\n      y\n    } : rects.reference,\n    offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n    strategy\n  }) : rects[elementContext]);\n  return {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\n\n\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type\n    const {\n      element,\n      padding = 0\n    } = options != null ? options : {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n\n    if (element == null) {\n      {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n      return {};\n    }\n\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const alignment = getAlignment(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n\n    const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds\n\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max); // Make sure that arrow points at the reference\n\n    const alignmentPadding = alignment === 'start' ? paddingObject[minProp] : paddingObject[maxProp];\n    const shouldAddOffset = alignmentPadding > 0 && center !== offset && rects.reference[length] <= rects.floating[length];\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n\n});\n\nconst hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\n\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst hash = {\n  start: 'end',\n  end: 'start'\n};\n\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, matched => hash[matched]);\n}\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\n\n\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe;\n\n      const {\n        x,\n        y,\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        alignment = null,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n      const currentPlacement = placements[currentIndex];\n\n      if (currentPlacement == null) {\n        return {};\n      }\n\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))); // Make `computeCoords` start from the right place\n\n      if (placement !== currentPlacement) {\n        return {\n          x,\n          y,\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      const resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\n\n\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$flip;\n\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = side === initialPlacement;\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n        overflows.push(overflow[main], overflow[cross]);\n      }\n\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }]; // One or more sides is overflowing\n\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip$, _middlewareData$flip2;\n\n        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n        const nextPlacement = placements[nextIndex];\n\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        let resetPlacement = 'bottom';\n\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$map$so;\n\n              const placement = (_overflowsData$map$so = overflowsData.map(d => [d, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n\n              if (placement) {\n                resetPlacement = placement;\n              }\n\n              break;\n            }\n\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\n\n\nconst hide = function (_temp) {\n  let {\n    strategy = 'referenceHidden',\n    ...detectOverflowOptions\n  } = _temp === void 0 ? {} : _temp;\n  return {\n    name: 'hide',\n\n    async fn(middlewareArguments) {\n      const {\n        rects\n      } = middlewareArguments;\n\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        default:\n          {\n            return {};\n          }\n      }\n    }\n\n  };\n};\n\nasync function convertValueToCoords(middlewareArguments, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = middlewareArguments;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\n\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y\n      } = middlewareArguments;\n      const diffCoords = await convertValueToCoords(middlewareArguments, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\n\n\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n\n      const limitedCoords = limiter.fn({ ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return { ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n\n  };\n};\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\n\n\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset({ ...rects,\n        placement\n      }) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n\n  };\n};\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\n\n\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        apply,\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      let heightSide;\n      let widthSide;\n\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      const prevDimensions = await platform.getDimensions(elements.floating);\n      apply == null ? void 0 : apply({ ...middlewareArguments,\n        ...dimensions\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n\n      if (prevDimensions.width !== nextDimensions.width || prevDimensions.height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\n\n\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options,\n\n    async fn(middlewareArguments) {\n      var _await$platform$getCl;\n\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n        strategy\n      }) : rects.reference);\n      const clientRects = (_await$platform$getCl = await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) != null ? _await$platform$getCl : [];\n      const paddingObject = getSideObjectFromPadding(padding);\n\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          var _clientRects$find; // Find the first rect in which the point is fully inside\n\n\n          return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;\n        } // There are 2 or more connected rects\n\n\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n\n        return fallback;\n      }\n\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };","map":{"version":3,"names":["getSide","placement","split","getAlignment","getMainAxisFromPlacement","includes","getLengthFromAxis","axis","computeCoordsFromPlacement","_ref","rtl","reference","floating","commonX","x","width","commonY","y","height","mainAxis","length","commonAlign","side","isVertical","coords","computePosition","config","strategy","middleware","platform","isRTL","console","error","join","filter","name","Error","rects","getElementRects","statefulPlacement","middlewareData","resetCount","i","fn","nextX","nextY","data","reset","initialPlacement","elements","warn","expandPaddingObject","padding","top","right","bottom","left","getSideObjectFromPadding","rectToClientRect","rect","detectOverflow","middlewareArguments","options","_await$platform$isEle","boundary","rootBoundary","elementContext","altBoundary","paddingObject","altContext","element","clippingClientRect","getClippingRect","isElement","contextElement","getDocumentElement","elementClientRect","convertOffsetParentRelativeRectToViewportRelativeRect","offsetParent","getOffsetParent","min","Math","max","within","min$1","value","max$1","arrow","alignment","arrowDimensions","getDimensions","minProp","maxProp","endDiff","startDiff","arrowOffsetParent","clientSize","clientHeight","clientWidth","centerToReference","center","offset","alignmentPadding","shouldAddOffset","alignmentOffset","centerOffset","hash$1","getOppositePlacement","replace","matched","getAlignmentSides","mainAlignmentSide","main","cross","hash","start","end","getOppositeAlignmentPlacement","sides","allPlacements","reduce","acc","concat","getPlacementList","autoAlignment","allowedPlacements","allowedPlacementsSortedByAlignment","autoPlacement","_middlewareData$autoP","_middlewareData$autoP2","_middlewareData$autoP3","_middlewareData$autoP4","_placementsSortedByLe","detectOverflowOptions","placements","overflow","currentIndex","index","currentPlacement","currentOverflows","allOverflows","overflows","nextPlacement","placementsSortedByLeastOverflow","slice","sort","a","b","placementThatFitsOnAllSides","find","every","resetPlacement","getExpandedPlacements","oppositePlacement","flip","_middlewareData$flip","checkMainAxis","crossAxis","checkCrossAxis","fallbackPlacements","specifiedFallbackPlacements","fallbackStrategy","flipAlignment","isBasePlacement","overflowsData","push","_middlewareData$flip$","_middlewareData$flip2","nextIndex","_overflowsData$map$so","map","d","getSideOffsets","isAnySideFullyClipped","some","hide","_temp","offsets","referenceHiddenOffsets","referenceHidden","escapedOffsets","escaped","convertValueToCoords","mainAxisMulti","crossAxisMulti","rawValue","alignmentAxis","diffCoords","getCrossAxis","shift","limiter","mainAxisCoord","crossAxisCoord","minSide","maxSide","limitedCoords","limitShift","rawOffset","computedOffset","len","limitMin","limitMax","_middlewareData$offse","_middlewareData$offse2","_middlewareData$offse3","_middlewareData$offse4","isOriginSide","size","apply","heightSide","widthSide","xMin","xMax","yMin","yMax","dimensions","availableHeight","availableWidth","prevDimensions","nextDimensions","inline","_await$platform$getCl","fallback","clientRects","getClientRects","getBoundingClientRect","_clientRects$find","firstRect","lastRect","isTop","isLeftSide","maxRight","minLeft","measureRects","resetRects"],"sources":["C:/Users/laoshuaib/Desktop/restaurant/node_modules/@floating-ui/core/dist/floating-ui.core.browser.mjs"],"sourcesContent":["function getSide(placement) {\n  return placement.split('-')[0];\n}\n\nfunction getAlignment(placement) {\n  return placement.split('-')[1];\n}\n\nfunction getMainAxisFromPlacement(placement) {\n  return ['top', 'bottom'].includes(getSide(placement)) ? 'x' : 'y';\n}\n\nfunction getLengthFromAxis(axis) {\n  return axis === 'y' ? 'height' : 'width';\n}\n\nfunction computeCoordsFromPlacement(_ref, placement, rtl) {\n  let {\n    reference,\n    floating\n  } = _ref;\n  const commonX = reference.x + reference.width / 2 - floating.width / 2;\n  const commonY = reference.y + reference.height / 2 - floating.height / 2;\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  const commonAlign = reference[length] / 2 - floating[length] / 2;\n  const side = getSide(placement);\n  const isVertical = mainAxis === 'x';\n  let coords;\n\n  switch (side) {\n    case 'top':\n      coords = {\n        x: commonX,\n        y: reference.y - floating.height\n      };\n      break;\n\n    case 'bottom':\n      coords = {\n        x: commonX,\n        y: reference.y + reference.height\n      };\n      break;\n\n    case 'right':\n      coords = {\n        x: reference.x + reference.width,\n        y: commonY\n      };\n      break;\n\n    case 'left':\n      coords = {\n        x: reference.x - floating.width,\n        y: commonY\n      };\n      break;\n\n    default:\n      coords = {\n        x: reference.x,\n        y: reference.y\n      };\n  }\n\n  switch (getAlignment(placement)) {\n    case 'start':\n      coords[mainAxis] -= commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n\n    case 'end':\n      coords[mainAxis] += commonAlign * (rtl && isVertical ? -1 : 1);\n      break;\n  }\n\n  return coords;\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain positioning strategy.\n *\n * This export does not have any `platform` interface logic. You will need to\n * write one for the platform you are using Floating UI with.\n */\n\nconst computePosition = async (reference, floating, config) => {\n  const {\n    placement = 'bottom',\n    strategy = 'absolute',\n    middleware = [],\n    platform\n  } = config;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(floating));\n\n  {\n    if (platform == null) {\n      console.error(['Floating UI: `platform` property was not passed to config. If you', 'want to use Floating UI on the web, install @floating-ui/dom', 'instead of the /core package. Otherwise, you can create your own', '`platform`: https://floating-ui.com/docs/platform'].join(' '));\n    }\n\n    if (middleware.filter(_ref => {\n      let {\n        name\n      } = _ref;\n      return name === 'autoPlacement' || name === 'flip';\n    }).length > 1) {\n      throw new Error(['Floating UI: duplicate `flip` and/or `autoPlacement`', 'middleware detected. This will lead to an infinite loop. Ensure only', 'one of either has been passed to the `middleware` array.'].join(' '));\n    }\n  }\n\n  let rects = await platform.getElementRects({\n    reference,\n    floating,\n    strategy\n  });\n  let {\n    x,\n    y\n  } = computeCoordsFromPlacement(rects, placement, rtl);\n  let statefulPlacement = placement;\n  let middlewareData = {};\n  let resetCount = 0;\n\n  for (let i = 0; i < middleware.length; i++) {\n    const {\n      name,\n      fn\n    } = middleware[i];\n    const {\n      x: nextX,\n      y: nextY,\n      data,\n      reset\n    } = await fn({\n      x,\n      y,\n      initialPlacement: placement,\n      placement: statefulPlacement,\n      strategy,\n      middlewareData,\n      rects,\n      platform,\n      elements: {\n        reference,\n        floating\n      }\n    });\n    x = nextX != null ? nextX : x;\n    y = nextY != null ? nextY : y;\n    middlewareData = { ...middlewareData,\n      [name]: { ...middlewareData[name],\n        ...data\n      }\n    };\n\n    {\n      if (resetCount > 50) {\n        console.warn(['Floating UI: The middleware lifecycle appears to be running in an', 'infinite loop. This is usually caused by a `reset` continually', 'being returned without a break condition.'].join(' '));\n      }\n    }\n\n    if (reset && resetCount <= 50) {\n      resetCount++;\n\n      if (typeof reset === 'object') {\n        if (reset.placement) {\n          statefulPlacement = reset.placement;\n        }\n\n        if (reset.rects) {\n          rects = reset.rects === true ? await platform.getElementRects({\n            reference,\n            floating,\n            strategy\n          }) : reset.rects;\n        }\n\n        ({\n          x,\n          y\n        } = computeCoordsFromPlacement(rects, statefulPlacement, rtl));\n      }\n\n      i = -1;\n      continue;\n    }\n  }\n\n  return {\n    x,\n    y,\n    placement: statefulPlacement,\n    strategy,\n    middlewareData\n  };\n};\n\nfunction expandPaddingObject(padding) {\n  return {\n    top: 0,\n    right: 0,\n    bottom: 0,\n    left: 0,\n    ...padding\n  };\n}\n\nfunction getSideObjectFromPadding(padding) {\n  return typeof padding !== 'number' ? expandPaddingObject(padding) : {\n    top: padding,\n    right: padding,\n    bottom: padding,\n    left: padding\n  };\n}\n\nfunction rectToClientRect(rect) {\n  return { ...rect,\n    top: rect.y,\n    left: rect.x,\n    right: rect.x + rect.width,\n    bottom: rect.y + rect.height\n  };\n}\n\n/**\n * Resolves with an object of overflow side offsets that determine how much the\n * element is overflowing a given clipping boundary.\n * - positive = overflowing the boundary by that number of pixels\n * - negative = how many pixels left before it will overflow\n * - 0 = lies flush with the boundary\n * @see https://floating-ui.com/docs/detectOverflow\n */\nasync function detectOverflow(middlewareArguments, options) {\n  var _await$platform$isEle;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    x,\n    y,\n    platform,\n    rects,\n    elements,\n    strategy\n  } = middlewareArguments;\n  const {\n    boundary = 'clippingAncestors',\n    rootBoundary = 'viewport',\n    elementContext = 'floating',\n    altBoundary = false,\n    padding = 0\n  } = options;\n  const paddingObject = getSideObjectFromPadding(padding);\n  const altContext = elementContext === 'floating' ? 'reference' : 'floating';\n  const element = elements[altBoundary ? altContext : elementContext];\n  const clippingClientRect = rectToClientRect(await platform.getClippingRect({\n    element: ((_await$platform$isEle = await (platform.isElement == null ? void 0 : platform.isElement(element))) != null ? _await$platform$isEle : true) ? element : element.contextElement || (await (platform.getDocumentElement == null ? void 0 : platform.getDocumentElement(elements.floating))),\n    boundary,\n    rootBoundary,\n    strategy\n  }));\n  const elementClientRect = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n    rect: elementContext === 'floating' ? { ...rects.floating,\n      x,\n      y\n    } : rects.reference,\n    offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n    strategy\n  }) : rects[elementContext]);\n  return {\n    top: clippingClientRect.top - elementClientRect.top + paddingObject.top,\n    bottom: elementClientRect.bottom - clippingClientRect.bottom + paddingObject.bottom,\n    left: clippingClientRect.left - elementClientRect.left + paddingObject.left,\n    right: elementClientRect.right - clippingClientRect.right + paddingObject.right\n  };\n}\n\nconst min = Math.min;\nconst max = Math.max;\n\nfunction within(min$1, value, max$1) {\n  return max(min$1, min(value, max$1));\n}\n\n/**\n * Positions an inner element of the floating element such that it is centered\n * to the reference element.\n * @see https://floating-ui.com/docs/arrow\n */\nconst arrow = options => ({\n  name: 'arrow',\n  options,\n\n  async fn(middlewareArguments) {\n    // Since `element` is required, we don't Partial<> the type\n    const {\n      element,\n      padding = 0\n    } = options != null ? options : {};\n    const {\n      x,\n      y,\n      placement,\n      rects,\n      platform\n    } = middlewareArguments;\n\n    if (element == null) {\n      {\n        console.warn('Floating UI: No `element` was passed to the `arrow` middleware.');\n      }\n\n      return {};\n    }\n\n    const paddingObject = getSideObjectFromPadding(padding);\n    const coords = {\n      x,\n      y\n    };\n    const axis = getMainAxisFromPlacement(placement);\n    const alignment = getAlignment(placement);\n    const length = getLengthFromAxis(axis);\n    const arrowDimensions = await platform.getDimensions(element);\n    const minProp = axis === 'y' ? 'top' : 'left';\n    const maxProp = axis === 'y' ? 'bottom' : 'right';\n    const endDiff = rects.reference[length] + rects.reference[axis] - coords[axis] - rects.floating[length];\n    const startDiff = coords[axis] - rects.reference[axis];\n    const arrowOffsetParent = await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(element));\n    let clientSize = arrowOffsetParent ? axis === 'y' ? arrowOffsetParent.clientHeight || 0 : arrowOffsetParent.clientWidth || 0 : 0;\n\n    if (clientSize === 0) {\n      clientSize = rects.floating[length];\n    }\n\n    const centerToReference = endDiff / 2 - startDiff / 2; // Make sure the arrow doesn't overflow the floating element if the center\n    // point is outside the floating element's bounds\n\n    const min = paddingObject[minProp];\n    const max = clientSize - arrowDimensions[length] - paddingObject[maxProp];\n    const center = clientSize / 2 - arrowDimensions[length] / 2 + centerToReference;\n    const offset = within(min, center, max); // Make sure that arrow points at the reference\n\n    const alignmentPadding = alignment === 'start' ? paddingObject[minProp] : paddingObject[maxProp];\n    const shouldAddOffset = alignmentPadding > 0 && center !== offset && rects.reference[length] <= rects.floating[length];\n    const alignmentOffset = shouldAddOffset ? center < min ? min - center : max - center : 0;\n    return {\n      [axis]: coords[axis] - alignmentOffset,\n      data: {\n        [axis]: offset,\n        centerOffset: center - offset\n      }\n    };\n  }\n\n});\n\nconst hash$1 = {\n  left: 'right',\n  right: 'left',\n  bottom: 'top',\n  top: 'bottom'\n};\nfunction getOppositePlacement(placement) {\n  return placement.replace(/left|right|bottom|top/g, matched => hash$1[matched]);\n}\n\nfunction getAlignmentSides(placement, rects, rtl) {\n  if (rtl === void 0) {\n    rtl = false;\n  }\n\n  const alignment = getAlignment(placement);\n  const mainAxis = getMainAxisFromPlacement(placement);\n  const length = getLengthFromAxis(mainAxis);\n  let mainAlignmentSide = mainAxis === 'x' ? alignment === (rtl ? 'end' : 'start') ? 'right' : 'left' : alignment === 'start' ? 'bottom' : 'top';\n\n  if (rects.reference[length] > rects.floating[length]) {\n    mainAlignmentSide = getOppositePlacement(mainAlignmentSide);\n  }\n\n  return {\n    main: mainAlignmentSide,\n    cross: getOppositePlacement(mainAlignmentSide)\n  };\n}\n\nconst hash = {\n  start: 'end',\n  end: 'start'\n};\nfunction getOppositeAlignmentPlacement(placement) {\n  return placement.replace(/start|end/g, matched => hash[matched]);\n}\n\nconst sides = ['top', 'right', 'bottom', 'left'];\nconst allPlacements = /*#__PURE__*/sides.reduce((acc, side) => acc.concat(side, side + \"-start\", side + \"-end\"), []);\n\nfunction getPlacementList(alignment, autoAlignment, allowedPlacements) {\n  const allowedPlacementsSortedByAlignment = alignment ? [...allowedPlacements.filter(placement => getAlignment(placement) === alignment), ...allowedPlacements.filter(placement => getAlignment(placement) !== alignment)] : allowedPlacements.filter(placement => getSide(placement) === placement);\n  return allowedPlacementsSortedByAlignment.filter(placement => {\n    if (alignment) {\n      return getAlignment(placement) === alignment || (autoAlignment ? getOppositeAlignmentPlacement(placement) !== placement : false);\n    }\n\n    return true;\n  });\n}\n\n/**\n * Automatically chooses the `placement` which has the most space available.\n * @see https://floating-ui.com/docs/autoPlacement\n */\nconst autoPlacement = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'autoPlacement',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$autoP, _middlewareData$autoP2, _middlewareData$autoP3, _middlewareData$autoP4, _placementsSortedByLe;\n\n      const {\n        x,\n        y,\n        rects,\n        middlewareData,\n        placement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        alignment = null,\n        allowedPlacements = allPlacements,\n        autoAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const placements = getPlacementList(alignment, autoAlignment, allowedPlacements);\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const currentIndex = (_middlewareData$autoP = (_middlewareData$autoP2 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP2.index) != null ? _middlewareData$autoP : 0;\n      const currentPlacement = placements[currentIndex];\n\n      if (currentPlacement == null) {\n        return {};\n      }\n\n      const {\n        main,\n        cross\n      } = getAlignmentSides(currentPlacement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))); // Make `computeCoords` start from the right place\n\n      if (placement !== currentPlacement) {\n        return {\n          x,\n          y,\n          reset: {\n            placement: placements[0]\n          }\n        };\n      }\n\n      const currentOverflows = [overflow[getSide(currentPlacement)], overflow[main], overflow[cross]];\n      const allOverflows = [...((_middlewareData$autoP3 = (_middlewareData$autoP4 = middlewareData.autoPlacement) == null ? void 0 : _middlewareData$autoP4.overflows) != null ? _middlewareData$autoP3 : []), {\n        placement: currentPlacement,\n        overflows: currentOverflows\n      }];\n      const nextPlacement = placements[currentIndex + 1]; // There are more placements to check\n\n      if (nextPlacement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: nextPlacement\n          }\n        };\n      }\n\n      const placementsSortedByLeastOverflow = allOverflows.slice().sort((a, b) => a.overflows[0] - b.overflows[0]);\n      const placementThatFitsOnAllSides = (_placementsSortedByLe = placementsSortedByLeastOverflow.find(_ref => {\n        let {\n          overflows\n        } = _ref;\n        return overflows.every(overflow => overflow <= 0);\n      })) == null ? void 0 : _placementsSortedByLe.placement;\n      const resetPlacement = placementThatFitsOnAllSides != null ? placementThatFitsOnAllSides : placementsSortedByLeastOverflow[0].placement;\n\n      if (resetPlacement !== placement) {\n        return {\n          data: {\n            index: currentIndex + 1,\n            overflows: allOverflows\n          },\n          reset: {\n            placement: resetPlacement\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getExpandedPlacements(placement) {\n  const oppositePlacement = getOppositePlacement(placement);\n  return [getOppositeAlignmentPlacement(placement), oppositePlacement, getOppositeAlignmentPlacement(oppositePlacement)];\n}\n\n/**\n * Changes the placement of the floating element to one that will fit if the\n * initially specified `placement` does not.\n * @see https://floating-ui.com/docs/flip\n */\nconst flip = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'flip',\n    options,\n\n    async fn(middlewareArguments) {\n      var _middlewareData$flip;\n\n      const {\n        placement,\n        middlewareData,\n        rects,\n        initialPlacement,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true,\n        fallbackPlacements: specifiedFallbackPlacements,\n        fallbackStrategy = 'bestFit',\n        flipAlignment = true,\n        ...detectOverflowOptions\n      } = options;\n      const side = getSide(placement);\n      const isBasePlacement = side === initialPlacement;\n      const fallbackPlacements = specifiedFallbackPlacements || (isBasePlacement || !flipAlignment ? [getOppositePlacement(initialPlacement)] : getExpandedPlacements(initialPlacement));\n      const placements = [initialPlacement, ...fallbackPlacements];\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const overflows = [];\n      let overflowsData = ((_middlewareData$flip = middlewareData.flip) == null ? void 0 : _middlewareData$flip.overflows) || [];\n\n      if (checkMainAxis) {\n        overflows.push(overflow[side]);\n      }\n\n      if (checkCrossAxis) {\n        const {\n          main,\n          cross\n        } = getAlignmentSides(placement, rects, await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating)));\n        overflows.push(overflow[main], overflow[cross]);\n      }\n\n      overflowsData = [...overflowsData, {\n        placement,\n        overflows\n      }]; // One or more sides is overflowing\n\n      if (!overflows.every(side => side <= 0)) {\n        var _middlewareData$flip$, _middlewareData$flip2;\n\n        const nextIndex = ((_middlewareData$flip$ = (_middlewareData$flip2 = middlewareData.flip) == null ? void 0 : _middlewareData$flip2.index) != null ? _middlewareData$flip$ : 0) + 1;\n        const nextPlacement = placements[nextIndex];\n\n        if (nextPlacement) {\n          // Try next placement and re-run the lifecycle\n          return {\n            data: {\n              index: nextIndex,\n              overflows: overflowsData\n            },\n            reset: {\n              placement: nextPlacement\n            }\n          };\n        }\n\n        let resetPlacement = 'bottom';\n\n        switch (fallbackStrategy) {\n          case 'bestFit':\n            {\n              var _overflowsData$map$so;\n\n              const placement = (_overflowsData$map$so = overflowsData.map(d => [d, d.overflows.filter(overflow => overflow > 0).reduce((acc, overflow) => acc + overflow, 0)]).sort((a, b) => a[1] - b[1])[0]) == null ? void 0 : _overflowsData$map$so[0].placement;\n\n              if (placement) {\n                resetPlacement = placement;\n              }\n\n              break;\n            }\n\n          case 'initialPlacement':\n            resetPlacement = initialPlacement;\n            break;\n        }\n\n        if (placement !== resetPlacement) {\n          return {\n            reset: {\n              placement: resetPlacement\n            }\n          };\n        }\n      }\n\n      return {};\n    }\n\n  };\n};\n\nfunction getSideOffsets(overflow, rect) {\n  return {\n    top: overflow.top - rect.height,\n    right: overflow.right - rect.width,\n    bottom: overflow.bottom - rect.height,\n    left: overflow.left - rect.width\n  };\n}\n\nfunction isAnySideFullyClipped(overflow) {\n  return sides.some(side => overflow[side] >= 0);\n}\n\n/**\n * Provides data to hide the floating element in applicable situations, such as\n * when it is not in the same clipping context as the reference element.\n * @see https://floating-ui.com/docs/hide\n */\nconst hide = function (_temp) {\n  let {\n    strategy = 'referenceHidden',\n    ...detectOverflowOptions\n  } = _temp === void 0 ? {} : _temp;\n  return {\n    name: 'hide',\n\n    async fn(middlewareArguments) {\n      const {\n        rects\n      } = middlewareArguments;\n\n      switch (strategy) {\n        case 'referenceHidden':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              elementContext: 'reference'\n            });\n            const offsets = getSideOffsets(overflow, rects.reference);\n            return {\n              data: {\n                referenceHiddenOffsets: offsets,\n                referenceHidden: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        case 'escaped':\n          {\n            const overflow = await detectOverflow(middlewareArguments, { ...detectOverflowOptions,\n              altBoundary: true\n            });\n            const offsets = getSideOffsets(overflow, rects.floating);\n            return {\n              data: {\n                escapedOffsets: offsets,\n                escaped: isAnySideFullyClipped(offsets)\n              }\n            };\n          }\n\n        default:\n          {\n            return {};\n          }\n      }\n    }\n\n  };\n};\n\nasync function convertValueToCoords(middlewareArguments, value) {\n  const {\n    placement,\n    platform,\n    elements\n  } = middlewareArguments;\n  const rtl = await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating));\n  const side = getSide(placement);\n  const alignment = getAlignment(placement);\n  const isVertical = getMainAxisFromPlacement(placement) === 'x';\n  const mainAxisMulti = ['left', 'top'].includes(side) ? -1 : 1;\n  const crossAxisMulti = rtl && isVertical ? -1 : 1;\n  const rawValue = typeof value === 'function' ? value(middlewareArguments) : value; // eslint-disable-next-line prefer-const\n\n  let {\n    mainAxis,\n    crossAxis,\n    alignmentAxis\n  } = typeof rawValue === 'number' ? {\n    mainAxis: rawValue,\n    crossAxis: 0,\n    alignmentAxis: null\n  } : {\n    mainAxis: 0,\n    crossAxis: 0,\n    alignmentAxis: null,\n    ...rawValue\n  };\n\n  if (alignment && typeof alignmentAxis === 'number') {\n    crossAxis = alignment === 'end' ? alignmentAxis * -1 : alignmentAxis;\n  }\n\n  return isVertical ? {\n    x: crossAxis * crossAxisMulti,\n    y: mainAxis * mainAxisMulti\n  } : {\n    x: mainAxis * mainAxisMulti,\n    y: crossAxis * crossAxisMulti\n  };\n}\n/**\n * Displaces the floating element from its reference element.\n * @see https://floating-ui.com/docs/offset\n */\n\nconst offset = function (value) {\n  if (value === void 0) {\n    value = 0;\n  }\n\n  return {\n    name: 'offset',\n    options: value,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y\n      } = middlewareArguments;\n      const diffCoords = await convertValueToCoords(middlewareArguments, value);\n      return {\n        x: x + diffCoords.x,\n        y: y + diffCoords.y,\n        data: diffCoords\n      };\n    }\n\n  };\n};\n\nfunction getCrossAxis(axis) {\n  return axis === 'x' ? 'y' : 'x';\n}\n\n/**\n * Shifts the floating element in order to keep it in view when it will overflow\n * a clipping boundary.\n * @see https://floating-ui.com/docs/shift\n */\nconst shift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'shift',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement\n      } = middlewareArguments;\n      const {\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = false,\n        limiter = {\n          fn: _ref => {\n            let {\n              x,\n              y\n            } = _ref;\n            return {\n              x,\n              y\n            };\n          }\n        },\n        ...detectOverflowOptions\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const mainAxis = getMainAxisFromPlacement(getSide(placement));\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n\n      if (checkMainAxis) {\n        const minSide = mainAxis === 'y' ? 'top' : 'left';\n        const maxSide = mainAxis === 'y' ? 'bottom' : 'right';\n        const min = mainAxisCoord + overflow[minSide];\n        const max = mainAxisCoord - overflow[maxSide];\n        mainAxisCoord = within(min, mainAxisCoord, max);\n      }\n\n      if (checkCrossAxis) {\n        const minSide = crossAxis === 'y' ? 'top' : 'left';\n        const maxSide = crossAxis === 'y' ? 'bottom' : 'right';\n        const min = crossAxisCoord + overflow[minSide];\n        const max = crossAxisCoord - overflow[maxSide];\n        crossAxisCoord = within(min, crossAxisCoord, max);\n      }\n\n      const limitedCoords = limiter.fn({ ...middlewareArguments,\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      });\n      return { ...limitedCoords,\n        data: {\n          x: limitedCoords.x - x,\n          y: limitedCoords.y - y\n        }\n      };\n    }\n\n  };\n};\n\n/**\n * Built-in `limiter` that will stop `shift()` at a certain point.\n */\nconst limitShift = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    options,\n\n    fn(middlewareArguments) {\n      const {\n        x,\n        y,\n        placement,\n        rects,\n        middlewareData\n      } = middlewareArguments;\n      const {\n        offset = 0,\n        mainAxis: checkMainAxis = true,\n        crossAxis: checkCrossAxis = true\n      } = options;\n      const coords = {\n        x,\n        y\n      };\n      const mainAxis = getMainAxisFromPlacement(placement);\n      const crossAxis = getCrossAxis(mainAxis);\n      let mainAxisCoord = coords[mainAxis];\n      let crossAxisCoord = coords[crossAxis];\n      const rawOffset = typeof offset === 'function' ? offset({ ...rects,\n        placement\n      }) : offset;\n      const computedOffset = typeof rawOffset === 'number' ? {\n        mainAxis: rawOffset,\n        crossAxis: 0\n      } : {\n        mainAxis: 0,\n        crossAxis: 0,\n        ...rawOffset\n      };\n\n      if (checkMainAxis) {\n        const len = mainAxis === 'y' ? 'height' : 'width';\n        const limitMin = rects.reference[mainAxis] - rects.floating[len] + computedOffset.mainAxis;\n        const limitMax = rects.reference[mainAxis] + rects.reference[len] - computedOffset.mainAxis;\n\n        if (mainAxisCoord < limitMin) {\n          mainAxisCoord = limitMin;\n        } else if (mainAxisCoord > limitMax) {\n          mainAxisCoord = limitMax;\n        }\n      }\n\n      if (checkCrossAxis) {\n        var _middlewareData$offse, _middlewareData$offse2, _middlewareData$offse3, _middlewareData$offse4;\n\n        const len = mainAxis === 'y' ? 'width' : 'height';\n        const isOriginSide = ['top', 'left'].includes(getSide(placement));\n        const limitMin = rects.reference[crossAxis] - rects.floating[len] + (isOriginSide ? (_middlewareData$offse = (_middlewareData$offse2 = middlewareData.offset) == null ? void 0 : _middlewareData$offse2[crossAxis]) != null ? _middlewareData$offse : 0 : 0) + (isOriginSide ? 0 : computedOffset.crossAxis);\n        const limitMax = rects.reference[crossAxis] + rects.reference[len] + (isOriginSide ? 0 : (_middlewareData$offse3 = (_middlewareData$offse4 = middlewareData.offset) == null ? void 0 : _middlewareData$offse4[crossAxis]) != null ? _middlewareData$offse3 : 0) - (isOriginSide ? computedOffset.crossAxis : 0);\n\n        if (crossAxisCoord < limitMin) {\n          crossAxisCoord = limitMin;\n        } else if (crossAxisCoord > limitMax) {\n          crossAxisCoord = limitMax;\n        }\n      }\n\n      return {\n        [mainAxis]: mainAxisCoord,\n        [crossAxis]: crossAxisCoord\n      };\n    }\n\n  };\n};\n\n/**\n * Provides data to change the size of the floating element. For instance,\n * prevent it from overflowing its clipping boundary or match the width of the\n * reference element.\n * @see https://floating-ui.com/docs/size\n */\nconst size = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'size',\n    options,\n\n    async fn(middlewareArguments) {\n      const {\n        placement,\n        rects,\n        platform,\n        elements\n      } = middlewareArguments;\n      const {\n        apply,\n        ...detectOverflowOptions\n      } = options;\n      const overflow = await detectOverflow(middlewareArguments, detectOverflowOptions);\n      const side = getSide(placement);\n      const alignment = getAlignment(placement);\n      let heightSide;\n      let widthSide;\n\n      if (side === 'top' || side === 'bottom') {\n        heightSide = side;\n        widthSide = alignment === ((await (platform.isRTL == null ? void 0 : platform.isRTL(elements.floating))) ? 'start' : 'end') ? 'left' : 'right';\n      } else {\n        widthSide = side;\n        heightSide = alignment === 'end' ? 'top' : 'bottom';\n      }\n\n      const xMin = max(overflow.left, 0);\n      const xMax = max(overflow.right, 0);\n      const yMin = max(overflow.top, 0);\n      const yMax = max(overflow.bottom, 0);\n      const dimensions = {\n        availableHeight: rects.floating.height - (['left', 'right'].includes(placement) ? 2 * (yMin !== 0 || yMax !== 0 ? yMin + yMax : max(overflow.top, overflow.bottom)) : overflow[heightSide]),\n        availableWidth: rects.floating.width - (['top', 'bottom'].includes(placement) ? 2 * (xMin !== 0 || xMax !== 0 ? xMin + xMax : max(overflow.left, overflow.right)) : overflow[widthSide])\n      };\n      const prevDimensions = await platform.getDimensions(elements.floating);\n      apply == null ? void 0 : apply({ ...middlewareArguments,\n        ...dimensions\n      });\n      const nextDimensions = await platform.getDimensions(elements.floating);\n\n      if (prevDimensions.width !== nextDimensions.width || prevDimensions.height !== nextDimensions.height) {\n        return {\n          reset: {\n            rects: true\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\n/**\n * Provides improved positioning for inline reference elements that can span\n * over multiple lines, such as hyperlinks or range selections.\n * @see https://floating-ui.com/docs/inline\n */\nconst inline = function (options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  return {\n    name: 'inline',\n    options,\n\n    async fn(middlewareArguments) {\n      var _await$platform$getCl;\n\n      const {\n        placement,\n        elements,\n        rects,\n        platform,\n        strategy\n      } = middlewareArguments; // A MouseEvent's client{X,Y} coords can be up to 2 pixels off a\n      // ClientRect's bounds, despite the event listener being triggered. A\n      // padding of 2 seems to handle this issue.\n\n      const {\n        padding = 2,\n        x,\n        y\n      } = options;\n      const fallback = rectToClientRect(platform.convertOffsetParentRelativeRectToViewportRelativeRect ? await platform.convertOffsetParentRelativeRectToViewportRelativeRect({\n        rect: rects.reference,\n        offsetParent: await (platform.getOffsetParent == null ? void 0 : platform.getOffsetParent(elements.floating)),\n        strategy\n      }) : rects.reference);\n      const clientRects = (_await$platform$getCl = await (platform.getClientRects == null ? void 0 : platform.getClientRects(elements.reference))) != null ? _await$platform$getCl : [];\n      const paddingObject = getSideObjectFromPadding(padding);\n\n      function getBoundingClientRect() {\n        // There are two rects and they are disjoined\n        if (clientRects.length === 2 && clientRects[0].left > clientRects[1].right && x != null && y != null) {\n          var _clientRects$find;\n\n          // Find the first rect in which the point is fully inside\n          return (_clientRects$find = clientRects.find(rect => x > rect.left - paddingObject.left && x < rect.right + paddingObject.right && y > rect.top - paddingObject.top && y < rect.bottom + paddingObject.bottom)) != null ? _clientRects$find : fallback;\n        } // There are 2 or more connected rects\n\n\n        if (clientRects.length >= 2) {\n          if (getMainAxisFromPlacement(placement) === 'x') {\n            const firstRect = clientRects[0];\n            const lastRect = clientRects[clientRects.length - 1];\n            const isTop = getSide(placement) === 'top';\n            const top = firstRect.top;\n            const bottom = lastRect.bottom;\n            const left = isTop ? firstRect.left : lastRect.left;\n            const right = isTop ? firstRect.right : lastRect.right;\n            const width = right - left;\n            const height = bottom - top;\n            return {\n              top,\n              bottom,\n              left,\n              right,\n              width,\n              height,\n              x: left,\n              y: top\n            };\n          }\n\n          const isLeftSide = getSide(placement) === 'left';\n          const maxRight = max(...clientRects.map(rect => rect.right));\n          const minLeft = min(...clientRects.map(rect => rect.left));\n          const measureRects = clientRects.filter(rect => isLeftSide ? rect.left === minLeft : rect.right === maxRight);\n          const top = measureRects[0].top;\n          const bottom = measureRects[measureRects.length - 1].bottom;\n          const left = minLeft;\n          const right = maxRight;\n          const width = right - left;\n          const height = bottom - top;\n          return {\n            top,\n            bottom,\n            left,\n            right,\n            width,\n            height,\n            x: left,\n            y: top\n          };\n        }\n\n        return fallback;\n      }\n\n      const resetRects = await platform.getElementRects({\n        reference: {\n          getBoundingClientRect\n        },\n        floating: elements.floating,\n        strategy\n      });\n\n      if (rects.reference.x !== resetRects.reference.x || rects.reference.y !== resetRects.reference.y || rects.reference.width !== resetRects.reference.width || rects.reference.height !== resetRects.reference.height) {\n        return {\n          reset: {\n            rects: resetRects\n          }\n        };\n      }\n\n      return {};\n    }\n\n  };\n};\n\nexport { arrow, autoPlacement, computePosition, detectOverflow, flip, hide, inline, limitShift, offset, rectToClientRect, shift, size };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}