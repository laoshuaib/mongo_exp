{"ast":null,"code":"import { defineComponent, computed, provide, openBlock, createBlock, resolveDynamicComponent, normalizeClass, unref, normalizeStyle, withCtx, renderSlot } from 'vue';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport { rowProps } from './row.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { useNamespace } from '../../../hooks/use-namespace/index.mjs';\nimport { rowContextKey } from '../../../tokens/row.mjs';\nconst __default__ = {\n  name: \"ElRow\"\n};\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: rowProps,\n\n  setup(__props) {\n    const props = __props;\n    const ns = useNamespace(\"row\");\n    const gutter = computed(() => props.gutter);\n    provide(rowContextKey, {\n      gutter\n    });\n    const style = computed(() => {\n      const styles = {};\n\n      if (!props.gutter) {\n        return styles;\n      }\n\n      styles.marginRight = styles.marginLeft = `-${props.gutter / 2}px`;\n      return styles;\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createBlock(resolveDynamicComponent(_ctx.tag), {\n        class: normalizeClass([unref(ns).b(), unref(ns).is(`justify-${props.justify}`, _ctx.justify !== \"start\"), unref(ns).is(`align-${props.align}`, _ctx.align !== \"top\")]),\n        style: normalizeStyle(unref(style))\n      }, {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 8, [\"class\", \"style\"]);\n    };\n  }\n\n});\n\nvar Row = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/row/src/row.vue\"]]);\n\nexport { Row as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;IA2BA;IACA;IAEAA;MACAC;IADA;IAIA;MACA;;MACA;QACA;MACA;;MAEAC;MACA;IACA,CARA","names":["provide","gutter","styles"],"sources":["../../../../../../packages/components/row/src/row.vue"],"sourcesContent":["<template>\n  <component\n    :is=\"tag\"\n    :class=\"[\n      ns.b(),\n      ns.is(`justify-${props.justify}`, justify !== 'start'),\n      ns.is(`align-${props.align}`, align !== 'top'),\n    ]\"\n    :style=\"style\"\n  >\n    <slot />\n  </component>\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, provide } from 'vue'\nimport { useNamespace } from '@element-plus/hooks'\nimport { rowContextKey } from '@element-plus/tokens'\nimport { rowProps } from './row'\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElRow',\n})\n\nconst props = defineProps(rowProps)\n\nconst ns = useNamespace('row')\nconst gutter = computed(() => props.gutter)\n\nprovide(rowContextKey, {\n  gutter,\n})\n\nconst style = computed(() => {\n  const styles: CSSProperties = {}\n  if (!props.gutter) {\n    return styles\n  }\n\n  styles.marginRight = styles.marginLeft = `-${props.gutter / 2}px`\n  return styles\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}