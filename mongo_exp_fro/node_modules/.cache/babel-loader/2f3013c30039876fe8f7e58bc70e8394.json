{"ast":null,"code":"import '../../../utils/index.mjs';\nimport { VERTICAL } from './defaults.mjs';\nimport { buildProp, definePropType, buildProps } from '../../../utils/vue/props/runtime.mjs';\nimport { mutable } from '../../../utils/typescript.mjs';\nconst itemSize = buildProp({\n  type: definePropType([Number, Function]),\n  required: true\n});\nconst estimatedItemSize = buildProp({\n  type: Number\n});\nconst cache = buildProp({\n  type: Number,\n  default: 2\n});\nconst direction = buildProp({\n  type: String,\n  values: [\"ltr\", \"rtl\"],\n  default: \"ltr\"\n});\nconst initScrollOffset = buildProp({\n  type: Number,\n  default: 0\n});\nconst total = buildProp({\n  type: Number,\n  required: true\n});\nconst layout = buildProp({\n  type: String,\n  values: [\"horizontal\", \"vertical\"],\n  default: VERTICAL\n});\nconst virtualizedProps = buildProps({\n  className: {\n    type: String,\n    default: \"\"\n  },\n  containerElement: {\n    type: definePropType([String, Object]),\n    default: \"div\"\n  },\n  data: {\n    type: definePropType(Array),\n    default: () => mutable([])\n  },\n  direction,\n  height: {\n    type: [String, Number],\n    required: true\n  },\n  innerElement: {\n    type: [String, Object],\n    default: \"div\"\n  },\n  style: {\n    type: definePropType([Object, String, Array])\n  },\n  useIsScrolling: {\n    type: Boolean,\n    default: false\n  },\n  width: {\n    type: [Number, String],\n    required: false\n  },\n  perfMode: {\n    type: Boolean,\n    default: true\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false\n  }\n});\nconst virtualizedListProps = buildProps({\n  cache,\n  estimatedItemSize,\n  layout,\n  initScrollOffset,\n  total,\n  itemSize,\n  ...virtualizedProps\n});\nconst scrollbarSize = {\n  type: Number,\n  default: 6\n};\nconst startGap = {\n  type: Number,\n  default: 0\n};\nconst endGap = {\n  type: Number,\n  default: 2\n};\nconst virtualizedGridProps = buildProps({\n  columnCache: cache,\n  columnWidth: itemSize,\n  estimatedColumnWidth: estimatedItemSize,\n  estimatedRowHeight: estimatedItemSize,\n  initScrollLeft: initScrollOffset,\n  initScrollTop: initScrollOffset,\n  itemKey: {\n    type: definePropType(Function),\n    default: ({\n      columnIndex,\n      rowIndex\n    }) => `${rowIndex}:${columnIndex}`\n  },\n  rowCache: cache,\n  rowHeight: itemSize,\n  totalColumn: total,\n  totalRow: total,\n  hScrollbarSize: scrollbarSize,\n  vScrollbarSize: scrollbarSize,\n  scrollbarStartGap: startGap,\n  scrollbarEndGap: endGap,\n  ...virtualizedProps\n});\nconst virtualizedScrollbarProps = buildProps({\n  alwaysOn: Boolean,\n  class: String,\n  layout,\n  total,\n  ratio: {\n    type: Number,\n    required: true\n  },\n  clientSize: {\n    type: Number,\n    required: true\n  },\n  scrollFrom: {\n    type: Number,\n    required: true\n  },\n  scrollbarSize,\n  startGap,\n  endGap,\n  visible: Boolean\n});\nexport { virtualizedGridProps, virtualizedListProps, virtualizedProps, virtualizedScrollbarProps };","map":{"version":3,"mappings":"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","names":["itemSize","buildProp","type","definePropType","Number","Function","required","estimatedItemSize","cache","default","direction","String","values","initScrollOffset","total","layout","VERTICAL","virtualizedProps","buildProps","className","containerElement","Object","data","Array","mutable","height","innerElement","style","useIsScrolling","Boolean","width","perfMode","scrollbarAlwaysOn","virtualizedListProps","scrollbarSize","startGap","endGap","virtualizedGridProps","columnCache","columnWidth","estimatedColumnWidth","estimatedRowHeight","initScrollLeft","initScrollTop","itemKey","columnIndex","rowIndex","rowCache","rowHeight","totalColumn","totalRow","hScrollbarSize","vScrollbarSize","scrollbarStartGap","scrollbarEndGap","virtualizedScrollbarProps","alwaysOn","class","ratio","clientSize","scrollFrom","visible"],"sources":["../../../../../../packages/components/virtual-list/src/props.ts"],"sourcesContent":["// @ts-nocheck\nimport {\n  buildProp,\n  buildProps,\n  definePropType,\n  mutable,\n} from '@element-plus/utils'\nimport { VERTICAL } from './defaults'\n\nimport type { ExtractPropTypes, StyleValue } from 'vue'\nimport type { GridItemKeyGetter, ItemSize } from './types'\n\nconst itemSize = buildProp({\n  type: definePropType<number | ItemSize>([Number, Function]),\n  required: true,\n} as const)\n\nconst estimatedItemSize = buildProp({\n  type: Number,\n} as const)\n\nconst cache = buildProp({\n  type: Number,\n  default: 2,\n} as const)\n\nconst direction = buildProp({\n  type: String,\n  values: ['ltr', 'rtl'],\n  default: 'ltr',\n} as const)\n\nconst initScrollOffset = buildProp({\n  type: Number,\n  default: 0,\n} as const)\n\nconst total = buildProp({\n  type: Number,\n  required: true,\n} as const)\n\nconst layout = buildProp({\n  type: String,\n  values: ['horizontal', 'vertical'],\n  default: VERTICAL,\n} as const)\n\nexport const virtualizedProps = buildProps({\n  className: {\n    type: String,\n    default: '',\n  },\n\n  containerElement: {\n    type: definePropType<string | Element>([String, Object]),\n    default: 'div',\n  },\n\n  data: {\n    type: definePropType<any[]>(Array),\n    default: () => mutable([] as const),\n  },\n\n  /**\n   * @description controls the horizontal direction.\n   */\n  direction,\n\n  height: {\n    type: [String, Number],\n    required: true,\n  },\n\n  innerElement: {\n    type: [String, Object],\n    default: 'div',\n  },\n\n  style: {\n    type: definePropType<StyleValue>([Object, String, Array]),\n  },\n\n  useIsScrolling: {\n    type: Boolean,\n    default: false,\n  },\n\n  width: {\n    type: [Number, String],\n    required: false,\n  },\n\n  perfMode: {\n    type: Boolean,\n    default: true,\n  },\n  scrollbarAlwaysOn: {\n    type: Boolean,\n    default: false,\n  },\n} as const)\n\nexport const virtualizedListProps = buildProps({\n  /**\n   * @description describes how many items should be pre rendered to the head\n   * and the tail of the window\n   */\n  cache,\n\n  estimatedItemSize,\n\n  /**\n   * @description controls the list's orientation\n   */\n  layout,\n\n  initScrollOffset,\n\n  /**\n   * @description describes the total number of the list.\n   */\n  total,\n\n  itemSize,\n  ...virtualizedProps,\n} as const)\n\nconst scrollbarSize = {\n  type: Number,\n  default: 6,\n} as const\n\nconst startGap = { type: Number, default: 0 } as const\nconst endGap = { type: Number, default: 2 } as const\n\nexport const virtualizedGridProps = buildProps({\n  columnCache: cache,\n  columnWidth: itemSize,\n  estimatedColumnWidth: estimatedItemSize,\n  estimatedRowHeight: estimatedItemSize,\n  initScrollLeft: initScrollOffset,\n  initScrollTop: initScrollOffset,\n  itemKey: {\n    type: definePropType<GridItemKeyGetter>(Function),\n    default: ({ columnIndex, rowIndex }) => `${rowIndex}:${columnIndex}`,\n  },\n  rowCache: cache,\n  rowHeight: itemSize,\n  totalColumn: total,\n  totalRow: total,\n  hScrollbarSize: scrollbarSize,\n  vScrollbarSize: scrollbarSize,\n  scrollbarStartGap: startGap,\n  scrollbarEndGap: endGap,\n  ...virtualizedProps,\n} as const)\n\nexport const virtualizedScrollbarProps = buildProps({\n  alwaysOn: Boolean,\n  class: String,\n  layout,\n  total,\n  ratio: {\n    type: Number,\n    required: true,\n  },\n  clientSize: {\n    type: Number,\n    required: true,\n  },\n  scrollFrom: {\n    type: Number,\n    required: true,\n  },\n  scrollbarSize,\n  startGap,\n  endGap,\n\n  visible: Boolean,\n} as const)\n\nexport type VirtualizedProps = ExtractPropTypes<typeof virtualizedProps>\nexport type VirtualizedListProps = ExtractPropTypes<typeof virtualizedListProps>\nexport type VirtualizedGridProps = ExtractPropTypes<typeof virtualizedGridProps>\n\nexport type VirtualizedScrollbarProps = ExtractPropTypes<\n  typeof virtualizedScrollbarProps\n>\n"]},"metadata":{},"sourceType":"module"}