{"ast":null,"code":"import { defineComponent, inject, computed, openBlock, createElementBlock, normalizeStyle, unref, normalizeClass } from 'vue';\nimport '../../../tokens/index.mjs';\nimport { tooltipV2ArrowProps, tooltipV2ArrowSpecialProps } from './arrow.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { tooltipV2RootKey, tooltipV2ContentKey } from '../../../tokens/tooltip-v2.mjs';\nconst __default__ = {\n  name: \"ElTooltipV2Arrow\"\n};\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: { ...tooltipV2ArrowProps,\n    ...tooltipV2ArrowSpecialProps\n  },\n\n  setup(__props) {\n    const props = __props;\n    const {\n      ns\n    } = inject(tooltipV2RootKey);\n    const {\n      arrowRef\n    } = inject(tooltipV2ContentKey);\n    const arrowStyle = computed(() => {\n      const {\n        style,\n        width,\n        height\n      } = props;\n      const namespace = ns.namespace.value;\n      return {\n        [`--${namespace}-tooltip-v2-arrow-width`]: `${width}px`,\n        [`--${namespace}-tooltip-v2-arrow-height`]: `${height}px`,\n        [`--${namespace}-tooltip-v2-arrow-border-width`]: `${width / 2}px`,\n        [`--${namespace}-tooltip-v2-arrow-cover-width`]: width / 2 - 1,\n        ...(style || {})\n      };\n    });\n    return (_ctx, _cache) => {\n      return openBlock(), createElementBlock(\"span\", {\n        ref_key: \"arrowRef\",\n        ref: arrowRef,\n        style: normalizeStyle(unref(arrowStyle)),\n        class: normalizeClass(unref(ns).e(\"arrow\"))\n      }, null, 6);\n    };\n  }\n\n});\n\nvar TooltipV2Arrow = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/tooltip-v2/src/arrow.vue\"]]);\n\nexport { TooltipV2Arrow as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;IAoBA;MAAAA;IAAA;IACA;MAAAC;IAAA;IAEA;MACA;QAAAC;QAAAC;QAAAC;MAAA;MACA;MAEA;QACA,uDADA;QAEA,yDAFA;QAGA,kEAHA;QAIA,8DAJA;QAKA;MALA;IAOA,CAXA","names":["ns","arrowRef","style","width","height"],"sources":["../../../../../../packages/components/tooltip-v2/src/arrow.vue"],"sourcesContent":["<template>\n  <span ref=\"arrowRef\" :style=\"arrowStyle\" :class=\"ns.e('arrow')\" />\n</template>\n\n<script setup lang=\"ts\">\nimport { computed, inject } from 'vue'\nimport { tooltipV2ContentKey, tooltipV2RootKey } from '@element-plus/tokens'\nimport { tooltipV2ArrowProps, tooltipV2ArrowSpecialProps } from './arrow'\n\nimport type { CSSProperties } from 'vue'\n\ndefineOptions({\n  name: 'ElTooltipV2Arrow',\n})\n\nconst props = defineProps({\n  ...tooltipV2ArrowProps,\n  ...tooltipV2ArrowSpecialProps,\n})\n\nconst { ns } = inject(tooltipV2RootKey)!\nconst { arrowRef } = inject(tooltipV2ContentKey)!\n\nconst arrowStyle = computed<CSSProperties>(() => {\n  const { style, width, height } = props\n  const namespace = ns.namespace.value\n\n  return {\n    [`--${namespace}-tooltip-v2-arrow-width`]: `${width}px`,\n    [`--${namespace}-tooltip-v2-arrow-height`]: `${height}px`,\n    [`--${namespace}-tooltip-v2-arrow-border-width`]: `${width / 2}px`,\n    [`--${namespace}-tooltip-v2-arrow-cover-width`]: width / 2 - 1,\n    ...(style || {}),\n  }\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}