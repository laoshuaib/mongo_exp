{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { watch } from 'vue';\nimport { useVModel } from '@vueuse/core';\nimport '../../../utils/index.mjs';\nimport { genFileId } from './upload.mjs';\nimport { debugWarn, throwError } from '../../../utils/error.mjs';\nconst SCOPE = \"ElUpload\";\n\nconst revokeObjectURL = file => {\n  var _a;\n\n  if ((_a = file.url) == null ? void 0 : _a.startsWith(\"blob:\")) {\n    URL.revokeObjectURL(file.url);\n  }\n};\n\nconst useHandlers = (props, uploadRef) => {\n  const uploadFiles = useVModel(props, \"fileList\", void 0, {\n    passive: true\n  });\n\n  const getFile = rawFile => uploadFiles.value.find(file => file.uid === rawFile.uid);\n\n  function abort(file) {\n    var _a;\n\n    (_a = uploadRef.value) == null ? void 0 : _a.abort(file);\n  }\n\n  function clearFiles(states = [\"ready\", \"uploading\", \"success\", \"fail\"]) {\n    uploadFiles.value = uploadFiles.value.filter(row => !states.includes(row.status));\n  }\n\n  const handleError = (err, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file) return;\n    console.error(err);\n    file.status = \"fail\";\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1);\n    props.onError(err, file, uploadFiles.value);\n    props.onChange(file, uploadFiles.value);\n  };\n\n  const handleProgress = (evt, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file) return;\n    props.onProgress(evt, file, uploadFiles.value);\n    file.status = \"uploading\";\n    file.percentage = Math.round(evt.percent);\n  };\n\n  const handleSuccess = (response, rawFile) => {\n    const file = getFile(rawFile);\n    if (!file) return;\n    file.status = \"success\";\n    file.response = response;\n    props.onSuccess(response, file, uploadFiles.value);\n    props.onChange(file, uploadFiles.value);\n  };\n\n  const handleStart = file => {\n    const uploadFile = {\n      name: file.name,\n      percentage: 0,\n      status: \"ready\",\n      size: file.size,\n      raw: file,\n      uid: file.uid\n    };\n\n    if (props.listType === \"picture-card\" || props.listType === \"picture\") {\n      try {\n        uploadFile.url = URL.createObjectURL(file);\n      } catch (err) {\n        debugWarn(SCOPE, err.message);\n        props.onError(err, uploadFile, uploadFiles.value);\n      }\n    }\n\n    uploadFiles.value = [...uploadFiles.value, uploadFile];\n    props.onChange(uploadFile, uploadFiles.value);\n  };\n\n  const handleRemove = async file => {\n    const uploadFile = file instanceof File ? getFile(file) : file;\n    if (!uploadFile) throwError(SCOPE, \"file to be removed not found\");\n\n    const doRemove = file2 => {\n      abort(file2);\n      const fileList = uploadFiles.value;\n      fileList.splice(fileList.indexOf(file2), 1);\n      props.onRemove(file2, fileList);\n      revokeObjectURL(file2);\n    };\n\n    if (props.beforeRemove) {\n      const before = await props.beforeRemove(uploadFile, uploadFiles.value);\n      if (before !== false) doRemove(uploadFile);\n    } else {\n      doRemove(uploadFile);\n    }\n  };\n\n  function submit() {\n    uploadFiles.value.filter(({\n      status\n    }) => status === \"ready\").forEach(({\n      raw\n    }) => {\n      var _a;\n\n      return raw && ((_a = uploadRef.value) == null ? void 0 : _a.upload(raw));\n    });\n  }\n\n  watch(() => props.listType, val => {\n    if (val !== \"picture-card\" && val !== \"picture\") {\n      return;\n    }\n\n    uploadFiles.value = uploadFiles.value.map(file => {\n      const {\n        raw,\n        url\n      } = file;\n\n      if (!url && raw) {\n        try {\n          file.url = URL.createObjectURL(raw);\n        } catch (err) {\n          props.onError(err, file, uploadFiles.value);\n        }\n      }\n\n      return file;\n    });\n  });\n  watch(uploadFiles, files => {\n    for (const file of files) {\n      file.uid || (file.uid = genFileId());\n      file.status || (file.status = \"success\");\n    }\n  }, {\n    immediate: true,\n    deep: true\n  });\n  return {\n    uploadFiles,\n    abort,\n    clearFiles,\n    handleError,\n    handleProgress,\n    handleStart,\n    handleSuccess,\n    handleRemove,\n    submit\n  };\n};\n\nexport { useHandlers };","map":{"version":3,"mappings":";;;;;;AAIA,MAAMA,KAAK,GAAG,UAAd;;AACA,MAAMC,eAAe,GAAIC,IAAD,IAAU;EAChC,IAAIC,EAAJ;;EACA,IAAI,CAACA,EAAE,GAAGD,IAAI,CAACE,GAAX,KAAmB,IAAnB,GAA0B,KAAK,CAA/B,GAAmCD,EAAE,CAACE,UAAH,CAAc,OAAd,CAAvC,EAA+D;IAC7DC,GAAG,CAACL,eAAJ,CAAoBC,IAAI,CAACE,GAAzB;EACD;AACF,CALD;;AAMY,MAACG,WAAW,GAAG,CAACC,KAAD,EAAQC,SAAR,KAAsB;EAC/C,MAAMC,WAAW,GAAGC,SAAS,CAACH,KAAD,EAAQ,UAAR,EAAoB,KAAK,CAAzB,EAA4B;IAAEI,OAAO,EAAE;EAAX,CAA5B,CAA7B;;EACA,MAAMC,OAAO,GAAIC,OAAD,IAAaJ,WAAW,CAACK,KAAZ,CAAkBC,IAAlB,CAAwBd,IAAD,IAAUA,IAAI,CAACe,GAAL,KAAaH,OAAO,CAACG,GAAtD,CAA7B;;EACA,SAASC,KAAT,CAAehB,IAAf,EAAqB;IACnB,IAAIC,EAAJ;;IACA,CAACA,EAAE,GAAGM,SAAS,CAACM,KAAhB,KAA0B,IAA1B,GAAiC,KAAK,CAAtC,GAA0CZ,EAAE,CAACe,KAAH,CAAShB,IAAT,CAA1C;EACD;;EACD,SAASiB,UAAT,CAAoBC,MAAM,GAAG,CAAC,OAAD,EAAU,WAAV,EAAuB,SAAvB,EAAkC,MAAlC,CAA7B,EAAwE;IACtEV,WAAW,CAACK,KAAZ,GAAoBL,WAAW,CAACK,KAAZ,CAAkBM,MAAlB,CAA0BC,GAAD,IAAS,CAACF,MAAM,CAACG,QAAP,CAAgBD,GAAG,CAACE,MAApB,CAAnC,CAApB;EACD;;EACD,MAAMC,WAAW,GAAG,CAACC,GAAD,EAAMZ,OAAN,KAAkB;IACpC,MAAMZ,IAAI,GAAGW,OAAO,CAACC,OAAD,CAApB;IACA,IAAI,CAACZ,IAAL,EACE;IACFyB,OAAO,CAACC,KAAR,CAAcF,GAAd;IACAxB,IAAI,CAACsB,MAAL,GAAc,MAAd;IACAd,WAAW,CAACK,KAAZ,CAAkBc,MAAlB,CAAyBnB,WAAW,CAACK,KAAZ,CAAkBe,OAAlB,CAA0B5B,IAA1B,CAAzB,EAA0D,CAA1D;IACAM,KAAK,CAACuB,OAAN,CAAcL,GAAd,EAAmBxB,IAAnB,EAAyBQ,WAAW,CAACK,KAArC;IACAP,KAAK,CAACwB,QAAN,CAAe9B,IAAf,EAAqBQ,WAAW,CAACK,KAAjC;EACD,CATD;;EAUA,MAAMkB,cAAc,GAAG,CAACC,GAAD,EAAMpB,OAAN,KAAkB;IACvC,MAAMZ,IAAI,GAAGW,OAAO,CAACC,OAAD,CAApB;IACA,IAAI,CAACZ,IAAL,EACE;IACFM,KAAK,CAAC2B,UAAN,CAAiBD,GAAjB,EAAsBhC,IAAtB,EAA4BQ,WAAW,CAACK,KAAxC;IACAb,IAAI,CAACsB,MAAL,GAAc,WAAd;IACAtB,IAAI,CAACkC,UAAL,GAAkBC,IAAI,CAACC,KAAL,CAAWJ,GAAG,CAACK,OAAf,CAAlB;EACD,CAPD;;EAQA,MAAMC,aAAa,GAAG,CAACC,QAAD,EAAW3B,OAAX,KAAuB;IAC3C,MAAMZ,IAAI,GAAGW,OAAO,CAACC,OAAD,CAApB;IACA,IAAI,CAACZ,IAAL,EACE;IACFA,IAAI,CAACsB,MAAL,GAAc,SAAd;IACAtB,IAAI,CAACuC,QAAL,GAAgBA,QAAhB;IACAjC,KAAK,CAACkC,SAAN,CAAgBD,QAAhB,EAA0BvC,IAA1B,EAAgCQ,WAAW,CAACK,KAA5C;IACAP,KAAK,CAACwB,QAAN,CAAe9B,IAAf,EAAqBQ,WAAW,CAACK,KAAjC;EACD,CARD;;EASA,MAAM4B,WAAW,GAAIzC,IAAD,IAAU;IAC5B,MAAM0C,UAAU,GAAG;MACjBC,IAAI,EAAE3C,IAAI,CAAC2C,IADM;MAEjBT,UAAU,EAAE,CAFK;MAGjBZ,MAAM,EAAE,OAHS;MAIjBsB,IAAI,EAAE5C,IAAI,CAAC4C,IAJM;MAKjBC,GAAG,EAAE7C,IALY;MAMjBe,GAAG,EAAEf,IAAI,CAACe;IANO,CAAnB;;IAQA,IAAIT,KAAK,CAACwC,QAAN,KAAmB,cAAnB,IAAqCxC,KAAK,CAACwC,QAAN,KAAmB,SAA5D,EAAuE;MACrE,IAAI;QACFJ,UAAU,CAACxC,GAAX,GAAiBE,GAAG,CAAC2C,eAAJ,CAAoB/C,IAApB,CAAjB;MACD,CAFD,CAEE,OAAOwB,GAAP,EAAY;QACZwB,SAAS,CAAClD,KAAD,EAAQ0B,GAAG,CAACyB,OAAZ,CAAT;QACA3C,KAAK,CAACuB,OAAN,CAAcL,GAAd,EAAmBkB,UAAnB,EAA+BlC,WAAW,CAACK,KAA3C;MACD;IACF;;IACDL,WAAW,CAACK,KAAZ,GAAoB,CAAC,GAAGL,WAAW,CAACK,KAAhB,EAAuB6B,UAAvB,CAApB;IACApC,KAAK,CAACwB,QAAN,CAAeY,UAAf,EAA2BlC,WAAW,CAACK,KAAvC;EACD,CAnBD;;EAoBA,MAAMqC,YAAY,GAAG,MAAOlD,IAAP,IAAgB;IACnC,MAAM0C,UAAU,GAAG1C,IAAI,YAAYmD,IAAhB,GAAuBxC,OAAO,CAACX,IAAD,CAA9B,GAAuCA,IAA1D;IACA,IAAI,CAAC0C,UAAL,EACEU,UAAU,CAACtD,KAAD,EAAQ,8BAAR,CAAV;;IACF,MAAMuD,QAAQ,GAAIC,KAAD,IAAW;MAC1BtC,KAAK,CAACsC,KAAD,CAAL;MACA,MAAMC,QAAQ,GAAG/C,WAAW,CAACK,KAA7B;MACA0C,QAAQ,CAAC5B,MAAT,CAAgB4B,QAAQ,CAAC3B,OAAT,CAAiB0B,KAAjB,CAAhB,EAAyC,CAAzC;MACAhD,KAAK,CAACkD,QAAN,CAAeF,KAAf,EAAsBC,QAAtB;MACAxD,eAAe,CAACuD,KAAD,CAAf;IACD,CAND;;IAOA,IAAIhD,KAAK,CAACmD,YAAV,EAAwB;MACtB,MAAMC,MAAM,GAAG,MAAMpD,KAAK,CAACmD,YAAN,CAAmBf,UAAnB,EAA+BlC,WAAW,CAACK,KAA3C,CAArB;MACA,IAAI6C,MAAM,KAAK,KAAf,EACEL,QAAQ,CAACX,UAAD,CAAR;IACH,CAJD,MAIO;MACLW,QAAQ,CAACX,UAAD,CAAR;IACD;EACF,CAlBD;;EAmBA,SAASiB,MAAT,GAAkB;IAChBnD,WAAW,CAACK,KAAZ,CAAkBM,MAAlB,CAAyB,CAAC;MAAEG;IAAF,CAAD,KAAgBA,MAAM,KAAK,OAApD,EAA6DsC,OAA7D,CAAqE,CAAC;MAAEf;IAAF,CAAD,KAAa;MAChF,IAAI5C,EAAJ;;MACA,OAAO4C,GAAG,KAAK,CAAC5C,EAAE,GAAGM,SAAS,CAACM,KAAhB,KAA0B,IAA1B,GAAiC,KAAK,CAAtC,GAA0CZ,EAAE,CAAC4D,MAAH,CAAUhB,GAAV,CAA/C,CAAV;IACD,CAHD;EAID;;EACDiB,KAAK,CAAC,MAAMxD,KAAK,CAACwC,QAAb,EAAwBiB,GAAD,IAAS;IACnC,IAAIA,GAAG,KAAK,cAAR,IAA0BA,GAAG,KAAK,SAAtC,EAAiD;MAC/C;IACD;;IACDvD,WAAW,CAACK,KAAZ,GAAoBL,WAAW,CAACK,KAAZ,CAAkBmD,GAAlB,CAAuBhE,IAAD,IAAU;MAClD,MAAM;QAAE6C,GAAF;QAAO3C;MAAP,IAAeF,IAArB;;MACA,IAAI,CAACE,GAAD,IAAQ2C,GAAZ,EAAiB;QACf,IAAI;UACF7C,IAAI,CAACE,GAAL,GAAWE,GAAG,CAAC2C,eAAJ,CAAoBF,GAApB,CAAX;QACD,CAFD,CAEE,OAAOrB,GAAP,EAAY;UACZlB,KAAK,CAACuB,OAAN,CAAcL,GAAd,EAAmBxB,IAAnB,EAAyBQ,WAAW,CAACK,KAArC;QACD;MACF;;MACD,OAAOb,IAAP;IACD,CAVmB,CAApB;EAWD,CAfI,CAAL;EAgBA8D,KAAK,CAACtD,WAAD,EAAeyD,KAAD,IAAW;IAC5B,KAAK,MAAMjE,IAAX,IAAmBiE,KAAnB,EAA0B;MACxBjE,IAAI,CAACe,GAAL,KAAaf,IAAI,CAACe,GAAL,GAAWmD,SAAS,EAAjC;MACAlE,IAAI,CAACsB,MAAL,KAAgBtB,IAAI,CAACsB,MAAL,GAAc,SAA9B;IACD;EACF,CALI,EAKF;IAAE6C,SAAS,EAAE,IAAb;IAAmBC,IAAI,EAAE;EAAzB,CALE,CAAL;EAMA,OAAO;IACL5D,WADK;IAELQ,KAFK;IAGLC,UAHK;IAILM,WAJK;IAKLQ,cALK;IAMLU,WANK;IAOLH,aAPK;IAQLY,YARK;IASLS;EATK,CAAP;AAWF,CAnHY","names":["SCOPE","revokeObjectURL","file","_a","url","startsWith","URL","useHandlers","props","uploadRef","uploadFiles","useVModel","passive","getFile","rawFile","value","find","uid","abort","clearFiles","states","filter","row","includes","status","handleError","err","console","error","splice","indexOf","onError","onChange","handleProgress","evt","onProgress","percentage","Math","round","percent","handleSuccess","response","onSuccess","handleStart","uploadFile","name","size","raw","listType","createObjectURL","debugWarn","message","handleRemove","File","throwError","doRemove","file2","fileList","onRemove","beforeRemove","before","submit","forEach","upload","watch","val","map","files","genFileId","immediate","deep"],"sources":["../../../../../../packages/components/upload/src/use-handlers.ts"],"sourcesContent":["import { watch } from 'vue'\nimport { useVModel } from '@vueuse/core'\nimport { debugWarn, throwError } from '@element-plus/utils'\nimport { genFileId } from './upload'\nimport type { ShallowRef } from 'vue'\nimport type {\n  UploadContentInstance,\n  UploadContentProps,\n} from './upload-content'\nimport type {\n  UploadFile,\n  UploadFiles,\n  UploadProps,\n  UploadRawFile,\n  UploadStatus,\n} from './upload'\n\nconst SCOPE = 'ElUpload'\n\nconst revokeObjectURL = (file: UploadFile) => {\n  if (file.url?.startsWith('blob:')) {\n    URL.revokeObjectURL(file.url)\n  }\n}\n\nexport const useHandlers = (\n  props: UploadProps,\n  uploadRef: ShallowRef<UploadContentInstance | undefined>\n) => {\n  const uploadFiles = useVModel(\n    props as Omit<UploadProps, 'fileList'> & { fileList: UploadFiles },\n    'fileList',\n    undefined,\n    { passive: true }\n  )\n\n  const getFile = (rawFile: UploadRawFile) =>\n    uploadFiles.value.find((file) => file.uid === rawFile.uid)\n\n  function abort(file: UploadFile) {\n    uploadRef.value?.abort(file)\n  }\n\n  function clearFiles(\n    /** @default ['ready', 'uploading', 'success', 'fail'] */\n    states: UploadStatus[] = ['ready', 'uploading', 'success', 'fail']\n  ) {\n    uploadFiles.value = uploadFiles.value.filter(\n      (row) => !states.includes(row.status)\n    )\n  }\n\n  const handleError: UploadContentProps['onError'] = (err, rawFile) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    console.error(err)\n    file.status = 'fail'\n    uploadFiles.value.splice(uploadFiles.value.indexOf(file), 1)\n    props.onError(err, file, uploadFiles.value)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  const handleProgress: UploadContentProps['onProgress'] = (evt, rawFile) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    props.onProgress(evt, file, uploadFiles.value)\n    file.status = 'uploading'\n    file.percentage = Math.round(evt.percent)\n  }\n\n  const handleSuccess: UploadContentProps['onSuccess'] = (\n    response,\n    rawFile\n  ) => {\n    const file = getFile(rawFile)\n    if (!file) return\n\n    file.status = 'success'\n    file.response = response\n    props.onSuccess(response, file, uploadFiles.value)\n    props.onChange(file, uploadFiles.value)\n  }\n\n  const handleStart: UploadContentProps['onStart'] = (file) => {\n    const uploadFile: UploadFile = {\n      name: file.name,\n      percentage: 0,\n      status: 'ready',\n      size: file.size,\n      raw: file,\n      uid: file.uid,\n    }\n    if (props.listType === 'picture-card' || props.listType === 'picture') {\n      try {\n        uploadFile.url = URL.createObjectURL(file)\n      } catch (err: unknown) {\n        debugWarn(SCOPE, (err as Error).message)\n        props.onError(err as Error, uploadFile, uploadFiles.value)\n      }\n    }\n    uploadFiles.value = [...uploadFiles.value, uploadFile]\n    props.onChange(uploadFile, uploadFiles.value)\n  }\n\n  const handleRemove: UploadContentProps['onRemove'] = async (\n    file\n  ): Promise<void> => {\n    const uploadFile = file instanceof File ? getFile(file) : file\n    if (!uploadFile) throwError(SCOPE, 'file to be removed not found')\n\n    const doRemove = (file: UploadFile) => {\n      abort(file)\n      const fileList = uploadFiles.value\n      fileList.splice(fileList.indexOf(file), 1)\n      props.onRemove(file, fileList)\n      revokeObjectURL(file)\n    }\n\n    if (props.beforeRemove) {\n      const before = await props.beforeRemove(uploadFile, uploadFiles.value)\n      if (before !== false) doRemove(uploadFile)\n    } else {\n      doRemove(uploadFile)\n    }\n  }\n\n  function submit() {\n    uploadFiles.value\n      .filter(({ status }) => status === 'ready')\n      .forEach(({ raw }) => raw && uploadRef.value?.upload(raw))\n  }\n\n  watch(\n    () => props.listType,\n    (val) => {\n      if (val !== 'picture-card' && val !== 'picture') {\n        return\n      }\n\n      uploadFiles.value = uploadFiles.value.map((file) => {\n        const { raw, url } = file\n        if (!url && raw) {\n          try {\n            file.url = URL.createObjectURL(raw)\n          } catch (err: unknown) {\n            props.onError(err as Error, file, uploadFiles.value)\n          }\n        }\n        return file\n      })\n    }\n  )\n\n  watch(\n    uploadFiles,\n    (files) => {\n      for (const file of files) {\n        file.uid ||= genFileId()\n        file.status ||= 'success'\n      }\n    },\n    { immediate: true, deep: true }\n  )\n\n  return {\n    /** @description two-way binding ref from props `fileList` */\n    uploadFiles,\n    abort,\n    clearFiles,\n    handleError,\n    handleProgress,\n    handleStart,\n    handleSuccess,\n    handleRemove,\n    submit,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}