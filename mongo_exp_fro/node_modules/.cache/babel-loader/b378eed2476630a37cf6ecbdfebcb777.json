{"ast":null,"code":"import { computed } from 'vue';\nimport { NOOP } from '@vue/shared';\nimport { ExpandTrigger } from './node.mjs';\nconst CommonProps = {\n  modelValue: [Number, String, Array],\n  options: {\n    type: Array,\n    default: () => []\n  },\n  props: {\n    type: Object,\n    default: () => ({})\n  }\n};\nconst DefaultProps = {\n  expandTrigger: ExpandTrigger.CLICK,\n  multiple: false,\n  checkStrictly: false,\n  emitPath: true,\n  lazy: false,\n  lazyLoad: NOOP,\n  value: \"value\",\n  label: \"label\",\n  children: \"children\",\n  leaf: \"leaf\",\n  disabled: \"disabled\",\n  hoverThreshold: 500\n};\n\nconst useCascaderConfig = props => {\n  return computed(() => ({ ...DefaultProps,\n    ...props.props\n  }));\n};\n\nexport { CommonProps, DefaultProps, useCascaderConfig };","map":{"version":3,"mappings":";;;AAGY,MAACA,WAAW,GAAG;EACzBC,UAAU,EAAE,CAACC,MAAD,EAASC,MAAT,EAAiBC,KAAjB,CADa;EAEzBC,OAAO,EAAE;IACPC,IAAI,EAAEF,KADC;IAEPG,OAAO,EAAE,MAAM;EAFR,CAFgB;EAMzBC,KAAK,EAAE;IACLF,IAAI,EAAEG,MADD;IAELF,OAAO,EAAE,OAAO,EAAP;EAFJ;AANkB,CAAf;AAWA,MAACG,YAAY,GAAG;EAC1BC,aAAa,EAAEC,aAAa,CAACC,KADH;EAE1BC,QAAQ,EAAE,KAFgB;EAG1BC,aAAa,EAAE,KAHW;EAI1BC,QAAQ,EAAE,IAJgB;EAK1BC,IAAI,EAAE,KALoB;EAM1BC,QAAQ,EAAEC,IANgB;EAO1BC,KAAK,EAAE,OAPmB;EAQ1BC,KAAK,EAAE,OARmB;EAS1BC,QAAQ,EAAE,UATgB;EAU1BC,IAAI,EAAE,MAVoB;EAW1BC,QAAQ,EAAE,UAXgB;EAY1BC,cAAc,EAAE;AAZU,CAAhB;;AAcA,MAACC,iBAAiB,GAAIlB,KAAD,IAAW;EAC1C,OAAOmB,QAAQ,CAAC,OAAO,EACrB,GAAGjB,YADkB;IAErB,GAAGF,KAAK,CAACA;EAFY,CAAP,CAAD,CAAf;AAIF,CALY","names":["CommonProps","modelValue","Number","String","Array","options","type","default","props","Object","DefaultProps","expandTrigger","ExpandTrigger","CLICK","multiple","checkStrictly","emitPath","lazy","lazyLoad","NOOP","value","label","children","leaf","disabled","hoverThreshold","useCascaderConfig","computed"],"sources":["../../../../../../packages/components/cascader-panel/src/config.ts"],"sourcesContent":["import { computed } from 'vue'\nimport { NOOP } from '@vue/shared'\nimport { ExpandTrigger } from './node'\n\nimport type { PropType } from 'vue'\nimport type {\n  CascaderConfig,\n  CascaderOption,\n  CascaderProps,\n  CascaderValue,\n} from './node'\n\nexport const CommonProps = {\n  modelValue: [Number, String, Array] as PropType<CascaderValue>,\n  options: {\n    type: Array as PropType<CascaderOption[]>,\n    default: () => [] as CascaderOption[],\n  },\n  props: {\n    type: Object as PropType<CascaderProps>,\n    default: () => ({} as CascaderProps),\n  },\n}\n\nexport const DefaultProps: CascaderConfig = {\n  expandTrigger: ExpandTrigger.CLICK,\n  multiple: false,\n  checkStrictly: false, // whether all nodes can be selected\n  emitPath: true, // wether to emit an array of all levels value in which node is located\n  lazy: false,\n  lazyLoad: NOOP,\n  value: 'value',\n  label: 'label',\n  children: 'children',\n  leaf: 'leaf',\n  disabled: 'disabled',\n  hoverThreshold: 500,\n}\n\nexport const useCascaderConfig = (props: { props: CascaderProps }) => {\n  return computed(() => ({\n    ...DefaultProps,\n    ...props.props,\n  }))\n}\n"]},"metadata":{},"sourceType":"module"}