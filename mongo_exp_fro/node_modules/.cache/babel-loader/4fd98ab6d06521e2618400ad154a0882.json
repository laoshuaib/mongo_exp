{"ast":null,"code":"import { getCurrentInstance, useAttrs, useSlots } from 'vue';\nimport dayjs from 'dayjs';\nimport '../../../../utils/index.mjs';\nimport { isFunction } from '@vue/shared';\n\nconst useShortcut = lang => {\n  const {\n    emit\n  } = getCurrentInstance();\n  const attrs = useAttrs();\n  const slots = useSlots();\n\n  const handleShortcutClick = shortcut => {\n    const shortcutValues = isFunction(shortcut.value) ? shortcut.value() : shortcut.value;\n\n    if (shortcutValues) {\n      emit(\"pick\", [dayjs(shortcutValues[0]).locale(lang.value), dayjs(shortcutValues[1]).locale(lang.value)]);\n      return;\n    }\n\n    if (shortcut.onClick) {\n      shortcut.onClick({\n        attrs,\n        slots,\n        emit\n      });\n    }\n  };\n\n  return handleShortcutClick;\n};\n\nexport { useShortcut };","map":{"version":3,"mappings":";;;;;AAGY,MAACA,WAAW,GAAIC,IAAD,IAAU;EACnC,MAAM;IAAEC;EAAF,IAAWC,kBAAkB,EAAnC;EACA,MAAMC,KAAK,GAAGC,QAAQ,EAAtB;EACA,MAAMC,KAAK,GAAGC,QAAQ,EAAtB;;EACA,MAAMC,mBAAmB,GAAIC,QAAD,IAAc;IACxC,MAAMC,cAAc,GAAGC,UAAU,CAACF,QAAQ,CAACG,KAAV,CAAV,GAA6BH,QAAQ,CAACG,KAAT,EAA7B,GAAgDH,QAAQ,CAACG,KAAhF;;IACA,IAAIF,cAAJ,EAAoB;MAClBR,IAAI,CAAC,MAAD,EAAS,CACXW,KAAK,CAACH,cAAc,CAAC,CAAD,CAAf,CAAL,CAAyBI,MAAzB,CAAgCb,IAAI,CAACW,KAArC,CADW,EAEXC,KAAK,CAACH,cAAc,CAAC,CAAD,CAAf,CAAL,CAAyBI,MAAzB,CAAgCb,IAAI,CAACW,KAArC,CAFW,CAAT,CAAJ;MAIA;IACD;;IACD,IAAIH,QAAQ,CAACM,OAAb,EAAsB;MACpBN,QAAQ,CAACM,OAAT,CAAiB;QACfX,KADe;QAEfE,KAFe;QAGfJ;MAHe,CAAjB;IAKD;EACF,CAhBD;;EAiBA,OAAOM,mBAAP;AACF,CAtBY","names":["useShortcut","lang","emit","getCurrentInstance","attrs","useAttrs","slots","useSlots","handleShortcutClick","shortcut","shortcutValues","isFunction","value","dayjs","locale","onClick"],"sources":["../../../../../../../packages/components/date-picker/src/composables/use-shortcut.ts"],"sourcesContent":["import { getCurrentInstance, useAttrs, useSlots } from 'vue'\nimport dayjs from 'dayjs'\nimport { isFunction } from '@element-plus/utils'\n\nimport type { SetupContext } from 'vue'\nimport type { useLocale } from '@element-plus/hooks'\nimport type { RangePickerSharedEmits } from '../props/shared'\n\n// FIXME: extract this to `date-picker.ts`\nexport type Shortcut = {\n  text: string\n  value: [Date, Date] | (() => [Date, Date])\n  onClick?: (ctx: Omit<SetupContext<RangePickerSharedEmits>, 'expose'>) => void\n}\n\nexport const useShortcut = (lang: ReturnType<typeof useLocale>['lang']) => {\n  const { emit } = getCurrentInstance()!\n  const attrs = useAttrs()\n  const slots = useSlots()\n\n  const handleShortcutClick = (shortcut: Shortcut) => {\n    const shortcutValues = isFunction(shortcut.value)\n      ? shortcut.value()\n      : shortcut.value\n\n    if (shortcutValues) {\n      emit('pick', [\n        dayjs(shortcutValues[0]).locale(lang.value),\n        dayjs(shortcutValues[1]).locale(lang.value),\n      ])\n      return\n    }\n    if (shortcut.onClick) {\n      shortcut.onClick({\n        attrs,\n        slots,\n        emit,\n      })\n    }\n  }\n\n  return handleShortcutClick\n}\n"]},"metadata":{},"sourceType":"module"}