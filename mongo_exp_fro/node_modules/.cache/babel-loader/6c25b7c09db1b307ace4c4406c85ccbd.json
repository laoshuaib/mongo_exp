{"ast":null,"code":"import { computed } from 'vue';\n\nconst useMarks = props => {\n  return computed(() => {\n    if (!props.marks) {\n      return [];\n    }\n\n    const marksKeys = Object.keys(props.marks);\n    return marksKeys.map(parseFloat).sort((a, b) => a - b).filter(point => point <= props.max && point >= props.min).map(point => ({\n      point,\n      position: (point - props.min) * 100 / (props.max - props.min),\n      mark: props.marks[point]\n    }));\n  });\n};\n\nexport { useMarks };","map":{"version":3,"mappings":";;AACY,MAACA,QAAQ,GAAIC,KAAD,IAAW;EACjC,OAAOC,QAAQ,CAAC,MAAM;IACpB,IAAI,CAACD,KAAK,CAACE,KAAX,EAAkB;MAChB,OAAO,EAAP;IACD;;IACD,MAAMC,SAAS,GAAGC,MAAM,CAACC,IAAP,CAAYL,KAAK,CAACE,KAAlB,CAAlB;IACA,OAAOC,SAAS,CAACG,GAAV,CAAcC,UAAd,EAA0BC,IAA1B,CAA+B,CAACC,CAAD,EAAIC,CAAJ,KAAUD,CAAC,GAAGC,CAA7C,EAAgDC,MAAhD,CAAwDC,KAAD,IAAWA,KAAK,IAAIZ,KAAK,CAACa,GAAf,IAAsBD,KAAK,IAAIZ,KAAK,CAACc,GAAvG,EAA4GR,GAA5G,CAAiHM,KAAD,KAAY;MACjIA,KADiI;MAEjIG,QAAQ,EAAE,CAACH,KAAK,GAAGZ,KAAK,CAACc,GAAf,IAAsB,GAAtB,IAA6Bd,KAAK,CAACa,GAAN,GAAYb,KAAK,CAACc,GAA/C,CAFuH;MAGjIE,IAAI,EAAEhB,KAAK,CAACE,KAAN,CAAYU,KAAZ;IAH2H,CAAZ,CAAhH,CAAP;EAKD,CAVc,CAAf;AAWF,CAZY","names":["useMarks","props","computed","marks","marksKeys","Object","keys","map","parseFloat","sort","a","b","filter","point","max","min","position","mark"],"sources":["../../../../../../../packages/components/slider/src/composables/use-marks.ts"],"sourcesContent":["import { computed } from 'vue'\nimport type { SliderProps } from '../slider'\nimport type { SliderMarkerProps } from '../marker'\n\nexport interface Mark extends SliderMarkerProps {\n  point: number\n  position: number\n}\n\nexport const useMarks = (props: SliderProps) => {\n  return computed(() => {\n    if (!props.marks) {\n      return []\n    }\n\n    const marksKeys = Object.keys(props.marks)\n    return marksKeys\n      .map(parseFloat)\n      .sort((a, b) => a - b)\n      .filter((point) => point <= props.max && point >= props.min)\n      .map(\n        (point): Mark => ({\n          point,\n          position: ((point - props.min) * 100) / (props.max - props.min),\n          mark: props.marks![point],\n        })\n      )\n  })\n}\n"]},"metadata":{},"sourceType":"module"}