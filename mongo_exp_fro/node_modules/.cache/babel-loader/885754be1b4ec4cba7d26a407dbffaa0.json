{"ast":null,"code":"/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n\n  return -1;\n}\n\nexport default baseIndexOfWith;","map":{"version":3,"names":["baseIndexOfWith","array","value","fromIndex","comparator","index","length"],"sources":["C:/Users/laoshuaib/Desktop/restaurant/node_modules/lodash-es/_baseIndexOfWith.js"],"sourcesContent":["/**\n * This function is like `baseIndexOf` except that it accepts a comparator.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOfWith(array, value, fromIndex, comparator) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (comparator(array[index], value)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nexport default baseIndexOfWith;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASA,eAAT,CAAyBC,KAAzB,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkDC,UAAlD,EAA8D;EAC5D,IAAIC,KAAK,GAAGF,SAAS,GAAG,CAAxB;EAAA,IACIG,MAAM,GAAGL,KAAK,CAACK,MADnB;;EAGA,OAAO,EAAED,KAAF,GAAUC,MAAjB,EAAyB;IACvB,IAAIF,UAAU,CAACH,KAAK,CAACI,KAAD,CAAN,EAAeH,KAAf,CAAd,EAAqC;MACnC,OAAOG,KAAP;IACD;EACF;;EACD,OAAO,CAAC,CAAR;AACD;;AAED,eAAeL,eAAf"},"metadata":{},"sourceType":"module"}