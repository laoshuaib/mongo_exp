{"ast":null,"code":"import \"core-js/modules/es.array.includes.js\";\nimport { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction isWindow(value) {\n  return value && value.document && value.location && value.alert && value.setInterval;\n}\n\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\n\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\n\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\n\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\n\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\n\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\n\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element); // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || // @ts-ignore (TS 4.1 compat)\n  css.contain === 'paint' || ['transform', 'perspective'].includes(css.willChange) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false);\n}\n\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // @ts-ignore\n    node.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    node.parentNode || ( // DOM Element detected\n    isShadowRoot(node) ? node.host : null) || // ShadowRoot detected\n    getDocumentElement(node) // fallback\n\n  );\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && !['html', 'body'].includes(getNodeName(currentNode))) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return { ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n} // of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (['html', 'body', '#document'].includes(getNodeName(parentNode))) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList : // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getOverflowAncestors(target));\n}\n\nfunction contains(parent, child) {\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n\n    do {\n      // use `===` replace node.isSameNode()\n      if (next && parent === next) {\n        return true;\n      } // @ts-ignore: need a better way to handle this...\n\n\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n\n  return false;\n}\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingParent, strategy) {\n  if (clippingParent === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingParent)) {\n    return getInnerBoundingClientRect(clippingParent, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingAncestors(element) {\n  const clippingAncestors = getOverflowAncestors(element);\n  const canEscapeClipping = ['absolute', 'fixed'].includes(getComputedStyle$1(element).position);\n  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // @ts-ignore isElement check ensures we return Array<Element>\n\n\n  return clippingAncestors.filter(clippingAncestors => isElement(clippingAncestors) && contains(clippingAncestors, clipperElement) && getNodeName(clippingAncestors) !== 'body');\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const mainClippingAncestors = boundary === 'clippingAncestors' ? getClippingAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...mainClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: { ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\n\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize: _ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestorResize = _ancestorResize && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { autoUpdate, computePosition, getOverflowAncestors };","map":{"version":3,"names":["rectToClientRect","computePosition","computePosition$1","arrow","autoPlacement","detectOverflow","flip","hide","inline","limitShift","offset","shift","size","isWindow","value","document","location","alert","setInterval","getWindow","node","window","ownerDocument","defaultView","getComputedStyle$1","element","getComputedStyle","getNodeName","nodeName","toLowerCase","getUAString","uaData","navigator","userAgentData","brands","map","item","brand","version","join","userAgent","isHTMLElement","HTMLElement","isElement","Element","isNode","Node","isShadowRoot","ShadowRoot","OwnElement","isOverflowElement","overflow","overflowX","overflowY","test","isTableElement","includes","isContainingBlock","isFirefox","css","transform","perspective","contain","willChange","filter","isLayoutViewport","min","Math","max","round","getBoundingClientRect","includeScale","isFixedStrategy","_win$visualViewport$o","_win$visualViewport","_win$visualViewport$o2","_win$visualViewport2","clientRect","scaleX","scaleY","offsetWidth","width","offsetHeight","height","win","addVisualOffsets","x","left","visualViewport","offsetLeft","y","top","offsetTop","right","bottom","getDocumentElement","documentElement","getNodeScroll","scrollLeft","scrollTop","pageXOffset","pageYOffset","getWindowScrollBarX","isScaled","rect","getRectRelativeToOffsetParent","offsetParent","strategy","isOffsetParentAnElement","scroll","offsets","offsetRect","clientLeft","clientTop","getParentNode","assignedSlot","parentNode","host","getTrueOffsetParent","position","getContainingBlock","currentNode","getOffsetParent","getDimensions","convertOffsetParentRelativeRectToViewportRelativeRect","_ref","getViewportRect","html","clientWidth","clientHeight","layoutViewport","getDocumentRect","_element$ownerDocumen","body","scrollWidth","scrollHeight","direction","getNearestOverflowAncestor","getOverflowAncestors","list","_node$ownerDocument","scrollableAncestor","isBody","target","concat","updatedList","contains","parent","child","rootNode","getRootNode","next","getInnerBoundingClientRect","getClientRectFromClippingAncestor","clippingParent","getClippingAncestors","clippingAncestors","canEscapeClipping","clipperElement","getClippingRect","boundary","rootBoundary","mainClippingAncestors","firstClippingAncestor","clippingRect","reduce","accRect","clippingAncestor","platform","getElementRects","reference","floating","getClientRects","Array","from","isRTL","autoUpdate","update","options","ancestorScroll","_ancestorScroll","ancestorResize","_ancestorResize","elementResize","animationFrame","ancestors","forEach","ancestor","addEventListener","passive","observer","initialUpdate","ResizeObserver","observe","frameId","prevRefRect","frameLoop","nextRefRect","requestAnimationFrame","_observer","removeEventListener","disconnect","cancelAnimationFrame"],"sources":["C:/Users/laoshuaib/Desktop/restaurant/node_modules/@floating-ui/dom/dist/floating-ui.dom.browser.mjs"],"sourcesContent":["import { rectToClientRect, computePosition as computePosition$1 } from '@floating-ui/core';\nexport { arrow, autoPlacement, detectOverflow, flip, hide, inline, limitShift, offset, shift, size } from '@floating-ui/core';\n\nfunction isWindow(value) {\n  return value && value.document && value.location && value.alert && value.setInterval;\n}\nfunction getWindow(node) {\n  if (node == null) {\n    return window;\n  }\n\n  if (!isWindow(node)) {\n    const ownerDocument = node.ownerDocument;\n    return ownerDocument ? ownerDocument.defaultView || window : window;\n  }\n\n  return node;\n}\n\nfunction getComputedStyle$1(element) {\n  return getWindow(element).getComputedStyle(element);\n}\n\nfunction getNodeName(node) {\n  return isWindow(node) ? '' : node ? (node.nodeName || '').toLowerCase() : '';\n}\n\nfunction getUAString() {\n  const uaData = navigator.userAgentData;\n\n  if (uaData != null && uaData.brands) {\n    return uaData.brands.map(item => item.brand + \"/\" + item.version).join(' ');\n  }\n\n  return navigator.userAgent;\n}\n\nfunction isHTMLElement(value) {\n  return value instanceof getWindow(value).HTMLElement;\n}\nfunction isElement(value) {\n  return value instanceof getWindow(value).Element;\n}\nfunction isNode(value) {\n  return value instanceof getWindow(value).Node;\n}\nfunction isShadowRoot(node) {\n  // Browsers without `ShadowRoot` support\n  if (typeof ShadowRoot === 'undefined') {\n    return false;\n  }\n\n  const OwnElement = getWindow(node).ShadowRoot;\n  return node instanceof OwnElement || node instanceof ShadowRoot;\n}\nfunction isOverflowElement(element) {\n  // Firefox wants us to check `-x` and `-y` variations as well\n  const {\n    overflow,\n    overflowX,\n    overflowY\n  } = getComputedStyle$1(element);\n  return /auto|scroll|overlay|hidden/.test(overflow + overflowY + overflowX);\n}\nfunction isTableElement(element) {\n  return ['table', 'td', 'th'].includes(getNodeName(element));\n}\nfunction isContainingBlock(element) {\n  // TODO: Try and use feature detection here instead\n  const isFirefox = /firefox/i.test(getUAString());\n  const css = getComputedStyle$1(element); // This is non-exhaustive but covers the most common CSS properties that\n  // create a containing block.\n  // https://developer.mozilla.org/en-US/docs/Web/CSS/Containing_block#identifying_the_containing_block\n\n  return css.transform !== 'none' || css.perspective !== 'none' || // @ts-ignore (TS 4.1 compat)\n  css.contain === 'paint' || ['transform', 'perspective'].includes(css.willChange) || isFirefox && css.willChange === 'filter' || isFirefox && (css.filter ? css.filter !== 'none' : false);\n}\nfunction isLayoutViewport() {\n  // Not Safari\n  return !/^((?!chrome|android).)*safari/i.test(getUAString()); // Feature detection for this fails in various ways\n  // • Always-visible scrollbar or not\n  // • Width of <html>, etc.\n  // const vV = win.visualViewport;\n  // return vV ? Math.abs(win.innerWidth / vV.scale - vV.width) < 0.5 : true;\n}\n\nconst min = Math.min;\nconst max = Math.max;\nconst round = Math.round;\n\nfunction getBoundingClientRect(element, includeScale, isFixedStrategy) {\n  var _win$visualViewport$o, _win$visualViewport, _win$visualViewport$o2, _win$visualViewport2;\n\n  if (includeScale === void 0) {\n    includeScale = false;\n  }\n\n  if (isFixedStrategy === void 0) {\n    isFixedStrategy = false;\n  }\n\n  const clientRect = element.getBoundingClientRect();\n  let scaleX = 1;\n  let scaleY = 1;\n\n  if (includeScale && isHTMLElement(element)) {\n    scaleX = element.offsetWidth > 0 ? round(clientRect.width) / element.offsetWidth || 1 : 1;\n    scaleY = element.offsetHeight > 0 ? round(clientRect.height) / element.offsetHeight || 1 : 1;\n  }\n\n  const win = isElement(element) ? getWindow(element) : window;\n  const addVisualOffsets = !isLayoutViewport() && isFixedStrategy;\n  const x = (clientRect.left + (addVisualOffsets ? (_win$visualViewport$o = (_win$visualViewport = win.visualViewport) == null ? void 0 : _win$visualViewport.offsetLeft) != null ? _win$visualViewport$o : 0 : 0)) / scaleX;\n  const y = (clientRect.top + (addVisualOffsets ? (_win$visualViewport$o2 = (_win$visualViewport2 = win.visualViewport) == null ? void 0 : _win$visualViewport2.offsetTop) != null ? _win$visualViewport$o2 : 0 : 0)) / scaleY;\n  const width = clientRect.width / scaleX;\n  const height = clientRect.height / scaleY;\n  return {\n    width,\n    height,\n    top: y,\n    right: x + width,\n    bottom: y + height,\n    left: x,\n    x,\n    y\n  };\n}\n\nfunction getDocumentElement(node) {\n  return ((isNode(node) ? node.ownerDocument : node.document) || window.document).documentElement;\n}\n\nfunction getNodeScroll(element) {\n  if (isElement(element)) {\n    return {\n      scrollLeft: element.scrollLeft,\n      scrollTop: element.scrollTop\n    };\n  }\n\n  return {\n    scrollLeft: element.pageXOffset,\n    scrollTop: element.pageYOffset\n  };\n}\n\nfunction getWindowScrollBarX(element) {\n  // If <html> has a CSS width greater than the viewport, then this will be\n  // incorrect for RTL.\n  return getBoundingClientRect(getDocumentElement(element)).left + getNodeScroll(element).scrollLeft;\n}\n\nfunction isScaled(element) {\n  const rect = getBoundingClientRect(element);\n  return round(rect.width) !== element.offsetWidth || round(rect.height) !== element.offsetHeight;\n}\n\nfunction getRectRelativeToOffsetParent(element, offsetParent, strategy) {\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n  const rect = getBoundingClientRect(element, // @ts-ignore - checked above (TS 4.1 compat)\n  isOffsetParentAnElement && isScaled(offsetParent), strategy === 'fixed');\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } else if (documentElement) {\n      offsets.x = getWindowScrollBarX(documentElement);\n    }\n  }\n\n  return {\n    x: rect.left + scroll.scrollLeft - offsets.x,\n    y: rect.top + scroll.scrollTop - offsets.y,\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction getParentNode(node) {\n  if (getNodeName(node) === 'html') {\n    return node;\n  }\n\n  return (// this is a quicker (but less type safe) way to save quite some bytes from the bundle\n    // @ts-ignore\n    node.assignedSlot || // step into the shadow DOM of the parent of a slotted node\n    node.parentNode || ( // DOM Element detected\n    isShadowRoot(node) ? node.host : null) || // ShadowRoot detected\n    getDocumentElement(node) // fallback\n\n  );\n}\n\nfunction getTrueOffsetParent(element) {\n  if (!isHTMLElement(element) || getComputedStyle(element).position === 'fixed') {\n    return null;\n  }\n\n  return element.offsetParent;\n}\n\nfunction getContainingBlock(element) {\n  let currentNode = getParentNode(element);\n\n  if (isShadowRoot(currentNode)) {\n    currentNode = currentNode.host;\n  }\n\n  while (isHTMLElement(currentNode) && !['html', 'body'].includes(getNodeName(currentNode))) {\n    if (isContainingBlock(currentNode)) {\n      return currentNode;\n    } else {\n      currentNode = currentNode.parentNode;\n    }\n  }\n\n  return null;\n} // Gets the closest ancestor positioned element. Handles some edge cases,\n// such as table ancestors and cross browser bugs.\n\n\nfunction getOffsetParent(element) {\n  const window = getWindow(element);\n  let offsetParent = getTrueOffsetParent(element);\n\n  while (offsetParent && isTableElement(offsetParent) && getComputedStyle(offsetParent).position === 'static') {\n    offsetParent = getTrueOffsetParent(offsetParent);\n  }\n\n  if (offsetParent && (getNodeName(offsetParent) === 'html' || getNodeName(offsetParent) === 'body' && getComputedStyle(offsetParent).position === 'static' && !isContainingBlock(offsetParent))) {\n    return window;\n  }\n\n  return offsetParent || getContainingBlock(element) || window;\n}\n\nfunction getDimensions(element) {\n  if (isHTMLElement(element)) {\n    return {\n      width: element.offsetWidth,\n      height: element.offsetHeight\n    };\n  }\n\n  const rect = getBoundingClientRect(element);\n  return {\n    width: rect.width,\n    height: rect.height\n  };\n}\n\nfunction convertOffsetParentRelativeRectToViewportRelativeRect(_ref) {\n  let {\n    rect,\n    offsetParent,\n    strategy\n  } = _ref;\n  const isOffsetParentAnElement = isHTMLElement(offsetParent);\n  const documentElement = getDocumentElement(offsetParent);\n\n  if (offsetParent === documentElement) {\n    return rect;\n  }\n\n  let scroll = {\n    scrollLeft: 0,\n    scrollTop: 0\n  };\n  const offsets = {\n    x: 0,\n    y: 0\n  };\n\n  if (isOffsetParentAnElement || !isOffsetParentAnElement && strategy !== 'fixed') {\n    if (getNodeName(offsetParent) !== 'body' || isOverflowElement(documentElement)) {\n      scroll = getNodeScroll(offsetParent);\n    }\n\n    if (isHTMLElement(offsetParent)) {\n      const offsetRect = getBoundingClientRect(offsetParent, true);\n      offsets.x = offsetRect.x + offsetParent.clientLeft;\n      offsets.y = offsetRect.y + offsetParent.clientTop;\n    } // This doesn't appear to be need to be negated.\n    // else if (documentElement) {\n    //   offsets.x = getWindowScrollBarX(documentElement);\n    // }\n\n  }\n\n  return { ...rect,\n    x: rect.x - scroll.scrollLeft + offsets.x,\n    y: rect.y - scroll.scrollTop + offsets.y\n  };\n}\n\nfunction getViewportRect(element, strategy) {\n  const win = getWindow(element);\n  const html = getDocumentElement(element);\n  const visualViewport = win.visualViewport;\n  let width = html.clientWidth;\n  let height = html.clientHeight;\n  let x = 0;\n  let y = 0;\n\n  if (visualViewport) {\n    width = visualViewport.width;\n    height = visualViewport.height;\n    const layoutViewport = isLayoutViewport();\n\n    if (layoutViewport || !layoutViewport && strategy === 'fixed') {\n      x = visualViewport.offsetLeft;\n      y = visualViewport.offsetTop;\n    }\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\n// of the `<html>` and `<body>` rect bounds if horizontally scrollable\n\nfunction getDocumentRect(element) {\n  var _element$ownerDocumen;\n\n  const html = getDocumentElement(element);\n  const scroll = getNodeScroll(element);\n  const body = (_element$ownerDocumen = element.ownerDocument) == null ? void 0 : _element$ownerDocumen.body;\n  const width = max(html.scrollWidth, html.clientWidth, body ? body.scrollWidth : 0, body ? body.clientWidth : 0);\n  const height = max(html.scrollHeight, html.clientHeight, body ? body.scrollHeight : 0, body ? body.clientHeight : 0);\n  let x = -scroll.scrollLeft + getWindowScrollBarX(element);\n  const y = -scroll.scrollTop;\n\n  if (getComputedStyle$1(body || html).direction === 'rtl') {\n    x += max(html.clientWidth, body ? body.clientWidth : 0) - width;\n  }\n\n  return {\n    width,\n    height,\n    x,\n    y\n  };\n}\n\nfunction getNearestOverflowAncestor(node) {\n  const parentNode = getParentNode(node);\n\n  if (['html', 'body', '#document'].includes(getNodeName(parentNode))) {\n    // @ts-ignore assume body is always available\n    return node.ownerDocument.body;\n  }\n\n  if (isHTMLElement(parentNode) && isOverflowElement(parentNode)) {\n    return parentNode;\n  }\n\n  return getNearestOverflowAncestor(parentNode);\n}\n\nfunction getOverflowAncestors(node, list) {\n  var _node$ownerDocument;\n\n  if (list === void 0) {\n    list = [];\n  }\n\n  const scrollableAncestor = getNearestOverflowAncestor(node);\n  const isBody = scrollableAncestor === ((_node$ownerDocument = node.ownerDocument) == null ? void 0 : _node$ownerDocument.body);\n  const win = getWindow(scrollableAncestor);\n  const target = isBody ? [win].concat(win.visualViewport || [], isOverflowElement(scrollableAncestor) ? scrollableAncestor : []) : scrollableAncestor;\n  const updatedList = list.concat(target);\n  return isBody ? updatedList : // @ts-ignore: isBody tells us target will be an HTMLElement here\n  updatedList.concat(getOverflowAncestors(target));\n}\n\nfunction contains(parent, child) {\n  const rootNode = child.getRootNode == null ? void 0 : child.getRootNode(); // First, attempt with faster native method\n\n  if (parent.contains(child)) {\n    return true;\n  } // then fallback to custom implementation with Shadow DOM support\n  else if (rootNode && isShadowRoot(rootNode)) {\n    let next = child;\n\n    do {\n      // use `===` replace node.isSameNode()\n      if (next && parent === next) {\n        return true;\n      } // @ts-ignore: need a better way to handle this...\n\n\n      next = next.parentNode || next.host;\n    } while (next);\n  }\n\n  return false;\n}\n\nfunction getInnerBoundingClientRect(element, strategy) {\n  const clientRect = getBoundingClientRect(element, false, strategy === 'fixed');\n  const top = clientRect.top + element.clientTop;\n  const left = clientRect.left + element.clientLeft;\n  return {\n    top,\n    left,\n    x: left,\n    y: top,\n    right: left + element.clientWidth,\n    bottom: top + element.clientHeight,\n    width: element.clientWidth,\n    height: element.clientHeight\n  };\n}\n\nfunction getClientRectFromClippingAncestor(element, clippingParent, strategy) {\n  if (clippingParent === 'viewport') {\n    return rectToClientRect(getViewportRect(element, strategy));\n  }\n\n  if (isElement(clippingParent)) {\n    return getInnerBoundingClientRect(clippingParent, strategy);\n  }\n\n  return rectToClientRect(getDocumentRect(getDocumentElement(element)));\n} // A \"clipping ancestor\" is an overflowable container with the characteristic of\n// clipping (or hiding) overflowing elements with a position different from\n// `initial`\n\n\nfunction getClippingAncestors(element) {\n  const clippingAncestors = getOverflowAncestors(element);\n  const canEscapeClipping = ['absolute', 'fixed'].includes(getComputedStyle$1(element).position);\n  const clipperElement = canEscapeClipping && isHTMLElement(element) ? getOffsetParent(element) : element;\n\n  if (!isElement(clipperElement)) {\n    return [];\n  } // @ts-ignore isElement check ensures we return Array<Element>\n\n\n  return clippingAncestors.filter(clippingAncestors => isElement(clippingAncestors) && contains(clippingAncestors, clipperElement) && getNodeName(clippingAncestors) !== 'body');\n} // Gets the maximum area that the element is visible in due to any number of\n// clipping ancestors\n\n\nfunction getClippingRect(_ref) {\n  let {\n    element,\n    boundary,\n    rootBoundary,\n    strategy\n  } = _ref;\n  const mainClippingAncestors = boundary === 'clippingAncestors' ? getClippingAncestors(element) : [].concat(boundary);\n  const clippingAncestors = [...mainClippingAncestors, rootBoundary];\n  const firstClippingAncestor = clippingAncestors[0];\n  const clippingRect = clippingAncestors.reduce((accRect, clippingAncestor) => {\n    const rect = getClientRectFromClippingAncestor(element, clippingAncestor, strategy);\n    accRect.top = max(rect.top, accRect.top);\n    accRect.right = min(rect.right, accRect.right);\n    accRect.bottom = min(rect.bottom, accRect.bottom);\n    accRect.left = max(rect.left, accRect.left);\n    return accRect;\n  }, getClientRectFromClippingAncestor(element, firstClippingAncestor, strategy));\n  return {\n    width: clippingRect.right - clippingRect.left,\n    height: clippingRect.bottom - clippingRect.top,\n    x: clippingRect.left,\n    y: clippingRect.top\n  };\n}\n\nconst platform = {\n  getClippingRect,\n  convertOffsetParentRelativeRectToViewportRelativeRect,\n  isElement,\n  getDimensions,\n  getOffsetParent,\n  getDocumentElement,\n  getElementRects: _ref => {\n    let {\n      reference,\n      floating,\n      strategy\n    } = _ref;\n    return {\n      reference: getRectRelativeToOffsetParent(reference, getOffsetParent(floating), strategy),\n      floating: { ...getDimensions(floating),\n        x: 0,\n        y: 0\n      }\n    };\n  },\n  getClientRects: element => Array.from(element.getClientRects()),\n  isRTL: element => getComputedStyle$1(element).direction === 'rtl'\n};\n\n/**\n * Automatically updates the position of the floating element when necessary.\n * @see https://floating-ui.com/docs/autoUpdate\n */\nfunction autoUpdate(reference, floating, update, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  const {\n    ancestorScroll: _ancestorScroll = true,\n    ancestorResize: _ancestorResize = true,\n    elementResize = true,\n    animationFrame = false\n  } = options;\n  const ancestorScroll = _ancestorScroll && !animationFrame;\n  const ancestorResize = _ancestorResize && !animationFrame;\n  const ancestors = ancestorScroll || ancestorResize ? [...(isElement(reference) ? getOverflowAncestors(reference) : []), ...getOverflowAncestors(floating)] : [];\n  ancestors.forEach(ancestor => {\n    ancestorScroll && ancestor.addEventListener('scroll', update, {\n      passive: true\n    });\n    ancestorResize && ancestor.addEventListener('resize', update);\n  });\n  let observer = null;\n\n  if (elementResize) {\n    let initialUpdate = true;\n    observer = new ResizeObserver(() => {\n      if (!initialUpdate) {\n        update();\n      }\n\n      initialUpdate = false;\n    });\n    isElement(reference) && !animationFrame && observer.observe(reference);\n    observer.observe(floating);\n  }\n\n  let frameId;\n  let prevRefRect = animationFrame ? getBoundingClientRect(reference) : null;\n\n  if (animationFrame) {\n    frameLoop();\n  }\n\n  function frameLoop() {\n    const nextRefRect = getBoundingClientRect(reference);\n\n    if (prevRefRect && (nextRefRect.x !== prevRefRect.x || nextRefRect.y !== prevRefRect.y || nextRefRect.width !== prevRefRect.width || nextRefRect.height !== prevRefRect.height)) {\n      update();\n    }\n\n    prevRefRect = nextRefRect;\n    frameId = requestAnimationFrame(frameLoop);\n  }\n\n  update();\n  return () => {\n    var _observer;\n\n    ancestors.forEach(ancestor => {\n      ancestorScroll && ancestor.removeEventListener('scroll', update);\n      ancestorResize && ancestor.removeEventListener('resize', update);\n    });\n    (_observer = observer) == null ? void 0 : _observer.disconnect();\n    observer = null;\n\n    if (animationFrame) {\n      cancelAnimationFrame(frameId);\n    }\n  };\n}\n\n/**\n * Computes the `x` and `y` coordinates that will place the floating element\n * next to a reference element when it is given a certain CSS positioning\n * strategy.\n */\n\nconst computePosition = (reference, floating, options) => computePosition$1(reference, floating, {\n  platform,\n  ...options\n});\n\nexport { autoUpdate, computePosition, getOverflowAncestors };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}