{"ast":null,"code":"import arrayFilter from './_arrayFilter.js';\nimport arrayMap from './_arrayMap.js';\nimport baseProperty from './_baseProperty.js';\nimport baseTimes from './_baseTimes.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n/* Built-in method references for those with the same name as other `lodash` methods. */\n\nvar nativeMax = Math.max;\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */\n\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n\n  var length = 0;\n  array = arrayFilter(array, function (group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function (index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\n\nexport default unzip;","map":{"version":3,"names":["arrayFilter","arrayMap","baseProperty","baseTimes","isArrayLikeObject","nativeMax","Math","max","unzip","array","length","group","index"],"sources":["C:/Users/laoshuaib/Desktop/restaurant/node_modules/lodash-es/unzip.js"],"sourcesContent":["import arrayFilter from './_arrayFilter.js';\nimport arrayMap from './_arrayMap.js';\nimport baseProperty from './_baseProperty.js';\nimport baseTimes from './_baseTimes.js';\nimport isArrayLikeObject from './isArrayLikeObject.js';\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * This method is like `_.zip` except that it accepts an array of grouped\n * elements and creates an array regrouping the elements to their pre-zip\n * configuration.\n *\n * @static\n * @memberOf _\n * @since 1.2.0\n * @category Array\n * @param {Array} array The array of grouped elements to process.\n * @returns {Array} Returns the new array of regrouped elements.\n * @example\n *\n * var zipped = _.zip(['a', 'b'], [1, 2], [true, false]);\n * // => [['a', 1, true], ['b', 2, false]]\n *\n * _.unzip(zipped);\n * // => [['a', 'b'], [1, 2], [true, false]]\n */\nfunction unzip(array) {\n  if (!(array && array.length)) {\n    return [];\n  }\n  var length = 0;\n  array = arrayFilter(array, function(group) {\n    if (isArrayLikeObject(group)) {\n      length = nativeMax(group.length, length);\n      return true;\n    }\n  });\n  return baseTimes(length, function(index) {\n    return arrayMap(array, baseProperty(index));\n  });\n}\n\nexport default unzip;\n"],"mappings":"AAAA,OAAOA,WAAP,MAAwB,mBAAxB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,iBAAtB;AACA,OAAOC,iBAAP,MAA8B,wBAA9B;AAEA;;AACA,IAAIC,SAAS,GAAGC,IAAI,CAACC,GAArB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,SAASC,KAAT,CAAeC,KAAf,EAAsB;EACpB,IAAI,EAAEA,KAAK,IAAIA,KAAK,CAACC,MAAjB,CAAJ,EAA8B;IAC5B,OAAO,EAAP;EACD;;EACD,IAAIA,MAAM,GAAG,CAAb;EACAD,KAAK,GAAGT,WAAW,CAACS,KAAD,EAAQ,UAASE,KAAT,EAAgB;IACzC,IAAIP,iBAAiB,CAACO,KAAD,CAArB,EAA8B;MAC5BD,MAAM,GAAGL,SAAS,CAACM,KAAK,CAACD,MAAP,EAAeA,MAAf,CAAlB;MACA,OAAO,IAAP;IACD;EACF,CALkB,CAAnB;EAMA,OAAOP,SAAS,CAACO,MAAD,EAAS,UAASE,KAAT,EAAgB;IACvC,OAAOX,QAAQ,CAACQ,KAAD,EAAQP,YAAY,CAACU,KAAD,CAApB,CAAf;EACD,CAFe,CAAhB;AAGD;;AAED,eAAeJ,KAAf"},"metadata":{},"sourceType":"module"}