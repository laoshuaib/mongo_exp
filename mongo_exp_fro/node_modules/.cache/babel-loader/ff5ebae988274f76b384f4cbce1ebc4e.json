{"ast":null,"code":"import { defineComponent, vModelText, provide, reactive, toRefs, resolveComponent, resolveDirective, withDirectives, openBlock, createElementBlock, normalizeClass, withModifiers, createVNode, withCtx, createElementVNode, renderSlot, createCommentVNode, normalizeStyle, toDisplayString, createBlock, Fragment, renderList, withKeys, resolveDynamicComponent, vShow, normalizeProps, guardReactiveProps } from 'vue';\nimport '../../../directives/index.mjs';\nimport { ElTooltip } from '../../tooltip/index.mjs';\nimport { ElTag } from '../../tag/index.mjs';\nimport { ElIcon } from '../../icon/index.mjs';\nimport '../../../constants/index.mjs';\nimport ElSelectMenu from './select-dropdown.mjs';\nimport useSelect from './useSelect.mjs';\nimport { selectV2InjectionKey } from './token.mjs';\nimport { SelectProps } from './defaults.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport ClickOutside from '../../../directives/click-outside/index.mjs';\nimport { UPDATE_MODEL_EVENT, CHANGE_EVENT } from '../../../constants/event.mjs';\n\nconst _sfc_main = defineComponent({\n  name: \"ElSelectV2\",\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon\n  },\n  directives: {\n    ClickOutside,\n    ModelText: vModelText\n  },\n  props: SelectProps,\n  emits: [UPDATE_MODEL_EVENT, CHANGE_EVENT, \"remove-tag\", \"clear\", \"visible-change\", \"focus\", \"blur\"],\n\n  setup(props, {\n    emit\n  }) {\n    const API = useSelect(props, emit);\n    provide(selectV2InjectionKey, {\n      props: reactive({ ...toRefs(props),\n        height: API.popupHeight\n      }),\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect\n    });\n    return API;\n  }\n\n});\n\nconst _hoisted_1 = {\n  key: 0\n};\nconst _hoisted_2 = [\"id\", \"autocomplete\", \"aria-expanded\", \"aria-labelledby\", \"disabled\", \"readonly\", \"name\", \"unselectable\"];\nconst _hoisted_3 = [\"textContent\"];\nconst _hoisted_4 = [\"id\", \"aria-labelledby\", \"aria-expanded\", \"autocomplete\", \"disabled\", \"name\", \"readonly\", \"unselectable\"];\nconst _hoisted_5 = [\"textContent\"];\n\nfunction _sfc_render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_el_tag = resolveComponent(\"el-tag\");\n\n  const _component_el_tooltip = resolveComponent(\"el-tooltip\");\n\n  const _component_el_icon = resolveComponent(\"el-icon\");\n\n  const _component_el_select_menu = resolveComponent(\"el-select-menu\");\n\n  const _directive_model_text = resolveDirective(\"model-text\");\n\n  const _directive_click_outside = resolveDirective(\"click-outside\");\n\n  return withDirectives((openBlock(), createElementBlock(\"div\", {\n    ref: \"selectRef\",\n    class: normalizeClass([_ctx.nsSelectV2.b(), _ctx.nsSelectV2.m(_ctx.selectSize)]),\n    onClick: _cache[23] || (_cache[23] = withModifiers((...args) => _ctx.toggleMenu && _ctx.toggleMenu(...args), [\"stop\"])),\n    onMouseenter: _cache[24] || (_cache[24] = $event => _ctx.states.comboBoxHovering = true),\n    onMouseleave: _cache[25] || (_cache[25] = $event => _ctx.states.comboBoxHovering = false)\n  }, [createVNode(_component_el_tooltip, {\n    ref: \"popper\",\n    visible: _ctx.dropdownMenuVisible,\n    teleported: _ctx.teleported,\n    \"popper-class\": [_ctx.nsSelectV2.e(\"popper\"), _ctx.popperClass],\n    \"gpu-acceleration\": false,\n    \"stop-popper-mouse-event\": false,\n    \"popper-options\": _ctx.popperOptions,\n    \"fallback-placements\": [\"bottom-start\", \"top-start\", \"right\", \"left\"],\n    effect: _ctx.effect,\n    placement: \"bottom-start\",\n    pure: \"\",\n    transition: `${_ctx.nsSelectV2.namespace.value}-zoom-in-top`,\n    trigger: \"click\",\n    persistent: _ctx.persistent,\n    onBeforeShow: _ctx.handleMenuEnter,\n    onHide: _cache[22] || (_cache[22] = $event => _ctx.states.inputValue = _ctx.states.displayInputValue)\n  }, {\n    default: withCtx(() => {\n      var _a;\n\n      return [createElementVNode(\"div\", {\n        ref: \"selectionRef\",\n        class: normalizeClass([_ctx.nsSelectV2.e(\"wrapper\"), _ctx.nsSelectV2.is(\"focused\", _ctx.states.isComposing), _ctx.nsSelectV2.is(\"hovering\", _ctx.states.comboBoxHovering), _ctx.nsSelectV2.is(\"filterable\", _ctx.filterable), _ctx.nsSelectV2.is(\"disabled\", _ctx.selectDisabled)])\n      }, [_ctx.$slots.prefix ? (openBlock(), createElementBlock(\"div\", _hoisted_1, [renderSlot(_ctx.$slots, \"prefix\")])) : createCommentVNode(\"v-if\", true), _ctx.multiple ? (openBlock(), createElementBlock(\"div\", {\n        key: 1,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"selection\"))\n      }, [_ctx.collapseTags && _ctx.modelValue.length > 0 ? (openBlock(), createElementBlock(\"div\", {\n        key: 0,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n      }, [createVNode(_component_el_tag, {\n        closable: !_ctx.selectDisabled && !((_a = _ctx.states.cachedOptions[0]) == null ? void 0 : _a.disable),\n        size: _ctx.collapseTagSize,\n        type: \"info\",\n        \"disable-transitions\": \"\",\n        onClose: _cache[0] || (_cache[0] = $event => _ctx.deleteTag($event, _ctx.states.cachedOptions[0]))\n      }, {\n        default: withCtx(() => {\n          var _a2;\n\n          return [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, toDisplayString((_a2 = _ctx.states.cachedOptions[0]) == null ? void 0 : _a2.label), 7)];\n        }),\n        _: 1\n      }, 8, [\"closable\", \"size\"]), _ctx.modelValue.length > 1 ? (openBlock(), createBlock(_component_el_tag, {\n        key: 0,\n        closable: false,\n        size: _ctx.collapseTagSize,\n        type: \"info\",\n        \"disable-transitions\": \"\"\n      }, {\n        default: withCtx(() => [_ctx.collapseTagsTooltip ? (openBlock(), createBlock(_component_el_tooltip, {\n          key: 0,\n          disabled: _ctx.dropdownMenuVisible,\n          \"fallback-placements\": [\"bottom\", \"top\", \"right\", \"left\"],\n          effect: _ctx.effect,\n          placement: \"bottom\",\n          teleported: false\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, \"+ \" + toDisplayString(_ctx.modelValue.length - 1), 7)]),\n          content: withCtx(() => [createElementVNode(\"div\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"selection\"))\n          }, [(openBlock(true), createElementBlock(Fragment, null, renderList(_ctx.states.cachedOptions.slice(1), (selected, idx) => {\n            return openBlock(), createElementBlock(\"div\", {\n              key: idx,\n              class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n            }, [(openBlock(), createBlock(_component_el_tag, {\n              key: _ctx.getValueKey(selected),\n              closable: !_ctx.selectDisabled && !selected.disabled,\n              size: _ctx.collapseTagSize,\n              class: \"in-tooltip\",\n              type: \"info\",\n              \"disable-transitions\": \"\",\n              onClose: $event => _ctx.deleteTag($event, selected)\n            }, {\n              default: withCtx(() => [createElementVNode(\"span\", {\n                class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n                style: normalizeStyle({\n                  maxWidth: `${_ctx.tagMaxWidth}px`\n                })\n              }, toDisplayString(_ctx.getLabel(selected)), 7)]),\n              _: 2\n            }, 1032, [\"closable\", \"size\", \"onClose\"]))], 2);\n          }), 128))], 2)]),\n          _: 1\n        }, 8, [\"disabled\", \"effect\"])) : (openBlock(), createElementBlock(\"span\", {\n          key: 1,\n          class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n          style: normalizeStyle({\n            maxWidth: `${_ctx.tagMaxWidth}px`\n          })\n        }, \"+ \" + toDisplayString(_ctx.modelValue.length - 1), 7))]),\n        _: 1\n      }, 8, [\"size\"])) : createCommentVNode(\"v-if\", true)], 2)) : (openBlock(true), createElementBlock(Fragment, {\n        key: 1\n      }, renderList(_ctx.states.cachedOptions, (selected, idx) => {\n        return openBlock(), createElementBlock(\"div\", {\n          key: idx,\n          class: normalizeClass(_ctx.nsSelectV2.e(\"selected-item\"))\n        }, [(openBlock(), createBlock(_component_el_tag, {\n          key: _ctx.getValueKey(selected),\n          closable: !_ctx.selectDisabled && !selected.disabled,\n          size: _ctx.collapseTagSize,\n          type: \"info\",\n          \"disable-transitions\": \"\",\n          onClose: $event => _ctx.deleteTag($event, selected)\n        }, {\n          default: withCtx(() => [createElementVNode(\"span\", {\n            class: normalizeClass(_ctx.nsSelectV2.e(\"tags-text\")),\n            style: normalizeStyle({\n              maxWidth: `${_ctx.tagMaxWidth}px`\n            })\n          }, toDisplayString(_ctx.getLabel(selected)), 7)]),\n          _: 2\n        }, 1032, [\"closable\", \"size\", \"onClose\"]))], 2);\n      }), 128)), createElementVNode(\"div\", {\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-wrapper\")]),\n        style: normalizeStyle(_ctx.inputWrapperStyle)\n      }, [withDirectives(createElementVNode(\"input\", {\n        id: _ctx.id,\n        ref: \"inputRef\",\n        autocomplete: _ctx.autocomplete,\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        autocapitalize: \"off\",\n        \"aria-expanded\": _ctx.expanded,\n        \"aria-labelledby\": _ctx.label,\n        class: normalizeClass([_ctx.nsSelectV2.is(_ctx.selectSize), _ctx.nsSelectV2.e(\"combobox-input\")]),\n        disabled: _ctx.disabled,\n        role: \"combobox\",\n        readonly: !_ctx.filterable,\n        spellcheck: \"false\",\n        type: \"text\",\n        name: _ctx.name,\n        unselectable: _ctx.expanded ? \"on\" : void 0,\n        \"onUpdate:modelValue\": _cache[1] || (_cache[1] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args)),\n        onFocus: _cache[2] || (_cache[2] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n        onInput: _cache[3] || (_cache[3] = (...args) => _ctx.onInput && _ctx.onInput(...args)),\n        onCompositionstart: _cache[4] || (_cache[4] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),\n        onCompositionupdate: _cache[5] || (_cache[5] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),\n        onCompositionend: _cache[6] || (_cache[6] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),\n        onKeydown: [_cache[7] || (_cache[7] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[8] || (_cache[8] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[9] || (_cache[9] = withKeys(withModifiers((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[10] || (_cache[10] = withKeys(withModifiers((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), [\"stop\", \"prevent\"]), [\"esc\"])), _cache[11] || (_cache[11] = withKeys(withModifiers((...args) => _ctx.handleDel && _ctx.handleDel(...args), [\"stop\"]), [\"delete\"]))]\n      }, null, 42, _hoisted_2), [[_directive_model_text, _ctx.states.displayInputValue]]), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        ref: \"calculatorRef\",\n        \"aria-hidden\": \"true\",\n        class: normalizeClass(_ctx.nsSelectV2.e(\"input-calculator\")),\n        textContent: toDisplayString(_ctx.states.displayInputValue)\n      }, null, 10, _hoisted_3)) : createCommentVNode(\"v-if\", true)], 6)], 2)) : (openBlock(), createElementBlock(Fragment, {\n        key: 2\n      }, [createElementVNode(\"div\", {\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-wrapper\")])\n      }, [withDirectives(createElementVNode(\"input\", {\n        id: _ctx.id,\n        ref: \"inputRef\",\n        \"aria-autocomplete\": \"list\",\n        \"aria-haspopup\": \"listbox\",\n        \"aria-labelledby\": _ctx.label,\n        \"aria-expanded\": _ctx.expanded,\n        autocapitalize: \"off\",\n        autocomplete: _ctx.autocomplete,\n        class: normalizeClass(_ctx.nsSelectV2.e(\"combobox-input\")),\n        disabled: _ctx.disabled,\n        name: _ctx.name,\n        role: \"combobox\",\n        readonly: !_ctx.filterable,\n        spellcheck: \"false\",\n        type: \"text\",\n        unselectable: _ctx.expanded ? \"on\" : void 0,\n        onCompositionstart: _cache[12] || (_cache[12] = (...args) => _ctx.handleCompositionStart && _ctx.handleCompositionStart(...args)),\n        onCompositionupdate: _cache[13] || (_cache[13] = (...args) => _ctx.handleCompositionUpdate && _ctx.handleCompositionUpdate(...args)),\n        onCompositionend: _cache[14] || (_cache[14] = (...args) => _ctx.handleCompositionEnd && _ctx.handleCompositionEnd(...args)),\n        onFocus: _cache[15] || (_cache[15] = (...args) => _ctx.handleFocus && _ctx.handleFocus(...args)),\n        onInput: _cache[16] || (_cache[16] = (...args) => _ctx.onInput && _ctx.onInput(...args)),\n        onKeydown: [_cache[17] || (_cache[17] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"backward\"), [\"stop\", \"prevent\"]), [\"up\"])), _cache[18] || (_cache[18] = withKeys(withModifiers($event => _ctx.onKeyboardNavigate(\"forward\"), [\"stop\", \"prevent\"]), [\"down\"])), _cache[19] || (_cache[19] = withKeys(withModifiers((...args) => _ctx.onKeyboardSelect && _ctx.onKeyboardSelect(...args), [\"stop\", \"prevent\"]), [\"enter\"])), _cache[20] || (_cache[20] = withKeys(withModifiers((...args) => _ctx.handleEsc && _ctx.handleEsc(...args), [\"stop\", \"prevent\"]), [\"esc\"]))],\n        \"onUpdate:modelValue\": _cache[21] || (_cache[21] = (...args) => _ctx.onUpdateInputValue && _ctx.onUpdateInputValue(...args))\n      }, null, 42, _hoisted_4), [[_directive_model_text, _ctx.states.displayInputValue]])], 2), _ctx.filterable ? (openBlock(), createElementBlock(\"span\", {\n        key: 0,\n        ref: \"calculatorRef\",\n        \"aria-hidden\": \"true\",\n        class: normalizeClass([_ctx.nsSelectV2.e(\"selected-item\"), _ctx.nsSelectV2.e(\"input-calculator\")]),\n        textContent: toDisplayString(_ctx.states.displayInputValue)\n      }, null, 10, _hoisted_5)) : createCommentVNode(\"v-if\", true)], 64)), _ctx.shouldShowPlaceholder ? (openBlock(), createElementBlock(\"span\", {\n        key: 3,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"placeholder\"), _ctx.nsSelectV2.is(\"transparent\", _ctx.states.isComposing || (_ctx.placeholder && _ctx.multiple ? _ctx.modelValue.length === 0 : !_ctx.hasModelValue))])\n      }, toDisplayString(_ctx.currentPlaceholder), 3)) : createCommentVNode(\"v-if\", true), createElementVNode(\"span\", {\n        class: normalizeClass(_ctx.nsSelectV2.e(\"suffix\"))\n      }, [_ctx.iconComponent ? withDirectives((openBlock(), createBlock(_component_el_icon, {\n        key: 0,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"caret\"), _ctx.nsInput.e(\"icon\"), _ctx.iconReverse])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.iconComponent)))]),\n        _: 1\n      }, 8, [\"class\"])), [[vShow, !_ctx.showClearBtn]]) : createCommentVNode(\"v-if\", true), _ctx.showClearBtn && _ctx.clearIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 1,\n        class: normalizeClass([_ctx.nsSelectV2.e(\"caret\"), _ctx.nsInput.e(\"icon\")]),\n        onClick: withModifiers(_ctx.handleClear, [\"prevent\", \"stop\"])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.clearIcon)))]),\n        _: 1\n      }, 8, [\"class\", \"onClick\"])) : createCommentVNode(\"v-if\", true), _ctx.validateState && _ctx.validateIcon ? (openBlock(), createBlock(_component_el_icon, {\n        key: 2,\n        class: normalizeClass([_ctx.nsInput.e(\"icon\"), _ctx.nsInput.e(\"validateIcon\")])\n      }, {\n        default: withCtx(() => [(openBlock(), createBlock(resolveDynamicComponent(_ctx.validateIcon)))]),\n        _: 1\n      }, 8, [\"class\"])) : createCommentVNode(\"v-if\", true)], 2)], 2)];\n    }),\n    content: withCtx(() => [createVNode(_component_el_select_menu, {\n      ref: \"menuRef\",\n      data: _ctx.filteredOptions,\n      width: _ctx.popperSize,\n      \"hovering-index\": _ctx.states.hoveringIndex,\n      \"scrollbar-always-on\": _ctx.scrollbarAlwaysOn\n    }, {\n      default: withCtx(scope => [renderSlot(_ctx.$slots, \"default\", normalizeProps(guardReactiveProps(scope)))]),\n      empty: withCtx(() => [renderSlot(_ctx.$slots, \"empty\", {}, () => [createElementVNode(\"p\", {\n        class: normalizeClass(_ctx.nsSelectV2.e(\"empty\"))\n      }, toDisplayString(_ctx.emptyText ? _ctx.emptyText : \"\"), 3)])]),\n      _: 3\n    }, 8, [\"data\", \"width\", \"hovering-index\", \"scrollbar-always-on\"])]),\n    _: 3\n  }, 8, [\"visible\", \"teleported\", \"popper-class\", \"popper-options\", \"effect\", \"transition\", \"persistent\", \"onBeforeShow\"])], 34)), [[_directive_click_outside, _ctx.handleClickOutside, _ctx.popperRef]]);\n}\n\nvar Select = /* @__PURE__ */_export_sfc(_sfc_main, [[\"render\", _sfc_render], [\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/select-v2/src/select.vue\"]]);\n\nexport { Select as default };","map":{"version":3,"mappings":"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","names":["_sfc_main","defineComponent","name","components","ElSelectMenu","ElTag","ElTooltip","ElIcon","directives","ClickOutside","ModelText","vModelText","props","emits","UPDATE_MODEL_EVENT","CHANGE_EVENT","setup","emit","useSelect","provide","selectV2InjectionKey","reactive","toRefs","height","API","onSelect","onHover","onKeyboardNavigate","onKeyboardSelect","_createElementBlock","ref","class","_normalizeClass","b","_ctx","m","onClick","_cache","onMouseenter","comboBoxHovering","onMouseleave","_createVNode","visible","teleported","e","effect","placement","pure","transition","namespace","value","trigger","persistent","onBeforeShow","onHide","inputValue","displayInputValue","default","_withCtx","_a","_createElementVNode","is","isComposing","_renderSlot","_createCommentVNode","_openBlock","key","closable","size","type","_a2","style","_toDisplayString","cachedOptions","_","disabled","maxWidth","onClose","selected","_withDirectives","id","autocomplete","autocapitalize","role","readonly","spellcheck","unselectable","expanded","onFocus","onInput","onCompositionstart","handleCompositionStart","onCompositionupdate","handleCompositionUpdate","onCompositionend","onKeydown","_withKeys","_hoisted_2","textContent","_hoisted_3","_hoisted_4","_hoisted_5","_createBlock","content","data","width"],"sources":["../../../../../../packages/components/select-v2/src/select.vue"],"sourcesContent":["<template>\n  <div\n    ref=\"selectRef\"\n    v-click-outside:[popperRef]=\"handleClickOutside\"\n    :class=\"[nsSelectV2.b(), nsSelectV2.m(selectSize)]\"\n    @click.stop=\"toggleMenu\"\n    @mouseenter=\"states.comboBoxHovering = true\"\n    @mouseleave=\"states.comboBoxHovering = false\"\n  >\n    <el-tooltip\n      ref=\"popper\"\n      :visible=\"dropdownMenuVisible\"\n      :teleported=\"teleported\"\n      :popper-class=\"[nsSelectV2.e('popper'), popperClass]\"\n      :gpu-acceleration=\"false\"\n      :stop-popper-mouse-event=\"false\"\n      :popper-options=\"popperOptions\"\n      :fallback-placements=\"['bottom-start', 'top-start', 'right', 'left']\"\n      :effect=\"effect\"\n      placement=\"bottom-start\"\n      pure\n      :transition=\"`${nsSelectV2.namespace.value}-zoom-in-top`\"\n      trigger=\"click\"\n      :persistent=\"persistent\"\n      @before-show=\"handleMenuEnter\"\n      @hide=\"states.inputValue = states.displayInputValue\"\n    >\n      <template #default>\n        <div\n          ref=\"selectionRef\"\n          :class=\"[\n            nsSelectV2.e('wrapper'),\n            nsSelectV2.is('focused', states.isComposing),\n            nsSelectV2.is('hovering', states.comboBoxHovering),\n            nsSelectV2.is('filterable', filterable),\n            nsSelectV2.is('disabled', selectDisabled),\n          ]\"\n        >\n          <div v-if=\"$slots.prefix\">\n            <slot name=\"prefix\" />\n          </div>\n          <div v-if=\"multiple\" :class=\"nsSelectV2.e('selection')\">\n            <template v-if=\"collapseTags && modelValue.length > 0\">\n              <div :class=\"nsSelectV2.e('selected-item')\">\n                <el-tag\n                  :closable=\"\n                    !selectDisabled && !states.cachedOptions[0]?.disable\n                  \"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, states.cachedOptions[0])\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ states.cachedOptions[0]?.label }}</span\n                  >\n                </el-tag>\n                <el-tag\n                  v-if=\"modelValue.length > 1\"\n                  :closable=\"false\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                >\n                  <el-tooltip\n                    v-if=\"collapseTagsTooltip\"\n                    :disabled=\"dropdownMenuVisible\"\n                    :fallback-placements=\"['bottom', 'top', 'right', 'left']\"\n                    :effect=\"effect\"\n                    placement=\"bottom\"\n                    :teleported=\"false\"\n                  >\n                    <template #default>\n                      <span\n                        :class=\"nsSelectV2.e('tags-text')\"\n                        :style=\"{\n                          maxWidth: `${tagMaxWidth}px`,\n                        }\"\n                        >+ {{ modelValue.length - 1 }}</span\n                      >\n                    </template>\n                    <template #content>\n                      <div :class=\"nsSelectV2.e('selection')\">\n                        <div\n                          v-for=\"(selected, idx) in states.cachedOptions.slice(\n                            1\n                          )\"\n                          :key=\"idx\"\n                          :class=\"nsSelectV2.e('selected-item')\"\n                        >\n                          <el-tag\n                            :key=\"getValueKey(selected)\"\n                            :closable=\"!selectDisabled && !selected.disabled\"\n                            :size=\"collapseTagSize\"\n                            class=\"in-tooltip\"\n                            type=\"info\"\n                            disable-transitions\n                            @close=\"deleteTag($event, selected)\"\n                          >\n                            <span\n                              :class=\"nsSelectV2.e('tags-text')\"\n                              :style=\"{\n                                maxWidth: `${tagMaxWidth}px`,\n                              }\"\n                              >{{ getLabel(selected) }}</span\n                            >\n                          </el-tag>\n                        </div>\n                      </div>\n                    </template>\n                  </el-tooltip>\n                  <span\n                    v-else\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >+ {{ modelValue.length - 1 }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n\n            <template v-else>\n              <div\n                v-for=\"(selected, idx) in states.cachedOptions\"\n                :key=\"idx\"\n                :class=\"nsSelectV2.e('selected-item')\"\n              >\n                <el-tag\n                  :key=\"getValueKey(selected)\"\n                  :closable=\"!selectDisabled && !selected.disabled\"\n                  :size=\"collapseTagSize\"\n                  type=\"info\"\n                  disable-transitions\n                  @close=\"deleteTag($event, selected)\"\n                >\n                  <span\n                    :class=\"nsSelectV2.e('tags-text')\"\n                    :style=\"{\n                      maxWidth: `${tagMaxWidth}px`,\n                    }\"\n                    >{{ getLabel(selected) }}</span\n                  >\n                </el-tag>\n              </div>\n            </template>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n              :style=\"inputWrapperStyle\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                :autocomplete=\"autocomplete\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                autocapitalize=\"off\"\n                :aria-expanded=\"expanded\"\n                :aria-labelledby=\"label\"\n                :class=\"[\n                  nsSelectV2.is(selectSize),\n                  nsSelectV2.e('combobox-input'),\n                ]\"\n                :disabled=\"disabled\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :name=\"name\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @update:modelValue=\"onUpdateInputValue\"\n                @focus=\"handleFocus\"\n                @input=\"onInput\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @keydown.delete.stop=\"handleDel\"\n              />\n              <span\n                v-if=\"filterable\"\n                ref=\"calculatorRef\"\n                aria-hidden=\"true\"\n                :class=\"nsSelectV2.e('input-calculator')\"\n                v-text=\"states.displayInputValue\"\n              />\n            </div>\n          </div>\n          <template v-else>\n            <div\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-wrapper'),\n              ]\"\n            >\n              <input\n                :id=\"id\"\n                ref=\"inputRef\"\n                v-model-text=\"states.displayInputValue\"\n                aria-autocomplete=\"list\"\n                aria-haspopup=\"listbox\"\n                :aria-labelledby=\"label\"\n                :aria-expanded=\"expanded\"\n                autocapitalize=\"off\"\n                :autocomplete=\"autocomplete\"\n                :class=\"nsSelectV2.e('combobox-input')\"\n                :disabled=\"disabled\"\n                :name=\"name\"\n                role=\"combobox\"\n                :readonly=\"!filterable\"\n                spellcheck=\"false\"\n                type=\"text\"\n                :unselectable=\"expanded ? 'on' : undefined\"\n                @compositionstart=\"handleCompositionStart\"\n                @compositionupdate=\"handleCompositionUpdate\"\n                @compositionend=\"handleCompositionEnd\"\n                @focus=\"handleFocus\"\n                @input=\"onInput\"\n                @keydown.up.stop.prevent=\"onKeyboardNavigate('backward')\"\n                @keydown.down.stop.prevent=\"onKeyboardNavigate('forward')\"\n                @keydown.enter.stop.prevent=\"onKeyboardSelect\"\n                @keydown.esc.stop.prevent=\"handleEsc\"\n                @update:modelValue=\"onUpdateInputValue\"\n              />\n            </div>\n            <span\n              v-if=\"filterable\"\n              ref=\"calculatorRef\"\n              aria-hidden=\"true\"\n              :class=\"[\n                nsSelectV2.e('selected-item'),\n                nsSelectV2.e('input-calculator'),\n              ]\"\n              v-text=\"states.displayInputValue\"\n            />\n          </template>\n          <span\n            v-if=\"shouldShowPlaceholder\"\n            :class=\"[\n              nsSelectV2.e('placeholder'),\n              nsSelectV2.is(\n                'transparent',\n                states.isComposing ||\n                  (placeholder && multiple\n                    ? modelValue.length === 0\n                    : !hasModelValue)\n              ),\n            ]\"\n          >\n            {{ currentPlaceholder }}\n          </span>\n          <span :class=\"nsSelectV2.e('suffix')\">\n            <el-icon\n              v-if=\"iconComponent\"\n              v-show=\"!showClearBtn\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon'), iconReverse]\"\n            >\n              <component :is=\"iconComponent\" />\n            </el-icon>\n            <el-icon\n              v-if=\"showClearBtn && clearIcon\"\n              :class=\"[nsSelectV2.e('caret'), nsInput.e('icon')]\"\n              @click.prevent.stop=\"handleClear\"\n            >\n              <component :is=\"clearIcon\" />\n            </el-icon>\n            <el-icon\n              v-if=\"validateState && validateIcon\"\n              :class=\"[nsInput.e('icon'), nsInput.e('validateIcon')]\"\n            >\n              <component :is=\"validateIcon\" />\n            </el-icon>\n          </span>\n        </div>\n      </template>\n      <template #content>\n        <el-select-menu\n          ref=\"menuRef\"\n          :data=\"filteredOptions\"\n          :width=\"popperSize\"\n          :hovering-index=\"states.hoveringIndex\"\n          :scrollbar-always-on=\"scrollbarAlwaysOn\"\n        >\n          <template #default=\"scope\">\n            <slot v-bind=\"scope\" />\n          </template>\n          <template #empty>\n            <slot name=\"empty\">\n              <p :class=\"nsSelectV2.e('empty')\">\n                {{ emptyText ? emptyText : '' }}\n              </p>\n            </slot>\n          </template>\n        </el-select-menu>\n      </template>\n    </el-tooltip>\n  </div>\n</template>\n\n<script lang=\"ts\">\nimport { defineComponent, provide, reactive, toRefs, vModelText } from 'vue'\nimport { ClickOutside } from '@element-plus/directives'\nimport ElTooltip from '@element-plus/components/tooltip'\nimport ElTag from '@element-plus/components/tag'\nimport ElIcon from '@element-plus/components/icon'\nimport { CHANGE_EVENT, UPDATE_MODEL_EVENT } from '@element-plus/constants'\nimport ElSelectMenu from './select-dropdown'\nimport useSelect from './useSelect'\nimport { selectV2InjectionKey } from './token'\nimport { SelectProps } from './defaults'\nexport default defineComponent({\n  name: 'ElSelectV2',\n  components: {\n    ElSelectMenu,\n    ElTag,\n    ElTooltip,\n    ElIcon,\n  },\n  directives: { ClickOutside, ModelText: vModelText },\n  props: SelectProps,\n  emits: [\n    UPDATE_MODEL_EVENT,\n    CHANGE_EVENT,\n    'remove-tag',\n    'clear',\n    'visible-change',\n    'focus',\n    'blur',\n  ],\n\n  setup(props, { emit }) {\n    const API = useSelect(props, emit)\n    // TODO, remove the any cast to align the actual API.\n    provide(selectV2InjectionKey, {\n      props: reactive({\n        ...toRefs(props),\n        height: API.popupHeight,\n      }),\n      onSelect: API.onSelect,\n      onHover: API.onHover,\n      onKeyboardNavigate: API.onKeyboardNavigate,\n      onKeyboardSelect: API.onKeyboardSelect,\n    } as any)\n\n    return API\n  },\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}