{"ast":null,"code":"import { onMounted, watchEffect, onBeforeUnmount } from 'vue';\nimport '../../utils/index.mjs';\nimport { addUnit } from '../../utils/dom/style.mjs';\n\nconst useDraggable = (targetRef, dragRef, draggable) => {\n  let transform = {\n    offsetX: 0,\n    offsetY: 0\n  };\n\n  const onMousedown = e => {\n    const downX = e.clientX;\n    const downY = e.clientY;\n    const {\n      offsetX,\n      offsetY\n    } = transform;\n    const targetRect = targetRef.value.getBoundingClientRect();\n    const targetLeft = targetRect.left;\n    const targetTop = targetRect.top;\n    const targetWidth = targetRect.width;\n    const targetHeight = targetRect.height;\n    const clientWidth = document.documentElement.clientWidth;\n    const clientHeight = document.documentElement.clientHeight;\n    const minLeft = -targetLeft + offsetX;\n    const minTop = -targetTop + offsetY;\n    const maxLeft = clientWidth - targetLeft - targetWidth + offsetX;\n    const maxTop = clientHeight - targetTop - targetHeight + offsetY;\n\n    const onMousemove = e2 => {\n      const moveX = Math.min(Math.max(offsetX + e2.clientX - downX, minLeft), maxLeft);\n      const moveY = Math.min(Math.max(offsetY + e2.clientY - downY, minTop), maxTop);\n      transform = {\n        offsetX: moveX,\n        offsetY: moveY\n      };\n      targetRef.value.style.transform = `translate(${addUnit(moveX)}, ${addUnit(moveY)})`;\n    };\n\n    const onMouseup = () => {\n      document.removeEventListener(\"mousemove\", onMousemove);\n      document.removeEventListener(\"mouseup\", onMouseup);\n    };\n\n    document.addEventListener(\"mousemove\", onMousemove);\n    document.addEventListener(\"mouseup\", onMouseup);\n  };\n\n  const onDraggable = () => {\n    if (dragRef.value && targetRef.value) {\n      dragRef.value.addEventListener(\"mousedown\", onMousedown);\n    }\n  };\n\n  const offDraggable = () => {\n    if (dragRef.value && targetRef.value) {\n      dragRef.value.removeEventListener(\"mousedown\", onMousedown);\n    }\n  };\n\n  onMounted(() => {\n    watchEffect(() => {\n      if (draggable.value) {\n        onDraggable();\n      } else {\n        offDraggable();\n      }\n    });\n  });\n  onBeforeUnmount(() => {\n    offDraggable();\n  });\n};\n\nexport { useDraggable };","map":{"version":3,"mappings":"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","names":["useDraggable","targetRef","dragRef","draggable","transform","offsetX","offsetY","onMousedown","e","downX","clientX","downY","clientY","targetRect","value","getBoundingClientRect","targetLeft","left","targetTop","top","targetWidth","width","targetHeight","height","clientWidth","document","documentElement","clientHeight","minLeft","minTop","maxLeft","maxTop","onMousemove","e2","moveX","Math","min","max","moveY","style","addUnit","onMouseup","removeEventListener","addEventListener","onDraggable","offDraggable","onMounted","watchEffect","onBeforeUnmount"],"sources":["../../../../../packages/hooks/use-draggable/index.ts"],"sourcesContent":["import { onBeforeUnmount, onMounted, watchEffect } from 'vue'\nimport { addUnit } from '@element-plus/utils'\nimport type { ComputedRef, Ref } from 'vue'\n\nexport const useDraggable = (\n  targetRef: Ref<HTMLElement | undefined>,\n  dragRef: Ref<HTMLElement | undefined>,\n  draggable: ComputedRef<boolean>\n) => {\n  let transform = {\n    offsetX: 0,\n    offsetY: 0,\n  }\n\n  const onMousedown = (e: MouseEvent) => {\n    const downX = e.clientX\n    const downY = e.clientY\n    const { offsetX, offsetY } = transform\n\n    const targetRect = targetRef.value!.getBoundingClientRect()\n    const targetLeft = targetRect.left\n    const targetTop = targetRect.top\n    const targetWidth = targetRect.width\n    const targetHeight = targetRect.height\n\n    const clientWidth = document.documentElement.clientWidth\n    const clientHeight = document.documentElement.clientHeight\n\n    const minLeft = -targetLeft + offsetX\n    const minTop = -targetTop + offsetY\n    const maxLeft = clientWidth - targetLeft - targetWidth + offsetX\n    const maxTop = clientHeight - targetTop - targetHeight + offsetY\n\n    const onMousemove = (e: MouseEvent) => {\n      const moveX = Math.min(\n        Math.max(offsetX + e.clientX - downX, minLeft),\n        maxLeft\n      )\n      const moveY = Math.min(\n        Math.max(offsetY + e.clientY - downY, minTop),\n        maxTop\n      )\n\n      transform = {\n        offsetX: moveX,\n        offsetY: moveY,\n      }\n      targetRef.value!.style.transform = `translate(${addUnit(\n        moveX\n      )}, ${addUnit(moveY)})`\n    }\n\n    const onMouseup = () => {\n      document.removeEventListener('mousemove', onMousemove)\n      document.removeEventListener('mouseup', onMouseup)\n    }\n\n    document.addEventListener('mousemove', onMousemove)\n    document.addEventListener('mouseup', onMouseup)\n  }\n\n  const onDraggable = () => {\n    if (dragRef.value && targetRef.value) {\n      dragRef.value.addEventListener('mousedown', onMousedown)\n    }\n  }\n\n  const offDraggable = () => {\n    if (dragRef.value && targetRef.value) {\n      dragRef.value.removeEventListener('mousedown', onMousedown)\n    }\n  }\n\n  onMounted(() => {\n    watchEffect(() => {\n      if (draggable.value) {\n        onDraggable()\n      } else {\n        offDraggable()\n      }\n    })\n  })\n\n  onBeforeUnmount(() => {\n    offDraggable()\n  })\n}\n"]},"metadata":{},"sourceType":"module"}