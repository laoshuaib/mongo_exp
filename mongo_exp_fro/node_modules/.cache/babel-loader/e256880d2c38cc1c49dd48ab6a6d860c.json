{"ast":null,"code":"import '../../../utils/index.mjs';\nimport '../../tooltip/index.mjs';\nimport '../../dropdown/index.mjs';\nimport { buildProps } from '../../../utils/vue/props/runtime.mjs';\nimport { useTooltipTriggerProps, useTooltipContentProps } from '../../tooltip/src/tooltip.mjs';\nimport { dropdownProps } from '../../dropdown/src/dropdown.mjs';\nimport { isBoolean } from '@vueuse/core';\nconst popoverProps = buildProps({\n  trigger: useTooltipTriggerProps.trigger,\n  placement: dropdownProps.placement,\n  disabled: useTooltipTriggerProps.disabled,\n  visible: useTooltipContentProps.visible,\n  transition: useTooltipContentProps.transition,\n  popperOptions: dropdownProps.popperOptions,\n  tabindex: dropdownProps.tabindex,\n  content: useTooltipContentProps.content,\n  popperStyle: useTooltipContentProps.popperStyle,\n  popperClass: useTooltipContentProps.popperClass,\n  enterable: { ...useTooltipContentProps.enterable,\n    default: true\n  },\n  effect: { ...useTooltipContentProps.effect,\n    default: \"light\"\n  },\n  teleported: useTooltipContentProps.teleported,\n  title: String,\n  width: {\n    type: [String, Number],\n    default: 150\n  },\n  offset: {\n    type: Number,\n    default: void 0\n  },\n  showAfter: {\n    type: Number,\n    default: 0\n  },\n  hideAfter: {\n    type: Number,\n    default: 200\n  },\n  autoClose: {\n    type: Number,\n    default: 0\n  },\n  showArrow: {\n    type: Boolean,\n    default: true\n  },\n  persistent: {\n    type: Boolean,\n    default: true\n  },\n  \"onUpdate:visible\": {\n    type: Function\n  }\n});\nconst popoverEmits = {\n  \"update:visible\": value => isBoolean(value),\n  \"before-enter\": () => true,\n  \"before-leave\": () => true,\n  \"after-enter\": () => true,\n  \"after-leave\": () => true\n};\nexport { popoverEmits, popoverProps };","map":{"version":3,"mappings":";;;;;;;AAMY,MAACA,YAAY,GAAGC,UAAU,CAAC;EACrCC,OAAO,EAAEC,sBAAsB,CAACD,OADK;EAErCE,SAAS,EAAEC,aAAa,CAACD,SAFY;EAGrCE,QAAQ,EAAEH,sBAAsB,CAACG,QAHI;EAIrCC,OAAO,EAAEC,sBAAsB,CAACD,OAJK;EAKrCE,UAAU,EAAED,sBAAsB,CAACC,UALE;EAMrCC,aAAa,EAAEL,aAAa,CAACK,aANQ;EAOrCC,QAAQ,EAAEN,aAAa,CAACM,QAPa;EAQrCC,OAAO,EAAEJ,sBAAsB,CAACI,OARK;EASrCC,WAAW,EAAEL,sBAAsB,CAACK,WATC;EAUrCC,WAAW,EAAEN,sBAAsB,CAACM,WAVC;EAWrCC,SAAS,EAAE,EACT,GAAGP,sBAAsB,CAACO,SADjB;IAETC,OAAO,EAAE;EAFA,CAX0B;EAerCC,MAAM,EAAE,EACN,GAAGT,sBAAsB,CAACS,MADpB;IAEND,OAAO,EAAE;EAFH,CAf6B;EAmBrCE,UAAU,EAAEV,sBAAsB,CAACU,UAnBE;EAoBrCC,KAAK,EAAEC,MApB8B;EAqBrCC,KAAK,EAAE;IACLC,IAAI,EAAE,CAACF,MAAD,EAASG,MAAT,CADD;IAELP,OAAO,EAAE;EAFJ,CArB8B;EAyBrCQ,MAAM,EAAE;IACNF,IAAI,EAAEC,MADA;IAENP,OAAO,EAAE,KAAK;EAFR,CAzB6B;EA6BrCS,SAAS,EAAE;IACTH,IAAI,EAAEC,MADG;IAETP,OAAO,EAAE;EAFA,CA7B0B;EAiCrCU,SAAS,EAAE;IACTJ,IAAI,EAAEC,MADG;IAETP,OAAO,EAAE;EAFA,CAjC0B;EAqCrCW,SAAS,EAAE;IACTL,IAAI,EAAEC,MADG;IAETP,OAAO,EAAE;EAFA,CArC0B;EAyCrCY,SAAS,EAAE;IACTN,IAAI,EAAEO,OADG;IAETb,OAAO,EAAE;EAFA,CAzC0B;EA6CrCc,UAAU,EAAE;IACVR,IAAI,EAAEO,OADI;IAEVb,OAAO,EAAE;EAFC,CA7CyB;EAiDrC,oBAAoB;IAClBM,IAAI,EAAES;EADY;AAjDiB,CAAD,CAA1B;AAqDA,MAACC,YAAY,GAAG;EAC1B,kBAAmBC,KAAD,IAAWC,SAAS,CAACD,KAAD,CADZ;EAE1B,gBAAgB,MAAM,IAFI;EAG1B,gBAAgB,MAAM,IAHI;EAI1B,eAAe,MAAM,IAJK;EAK1B,eAAe,MAAM;AALK,CAAhB","names":["popoverProps","buildProps","trigger","useTooltipTriggerProps","placement","dropdownProps","disabled","visible","useTooltipContentProps","transition","popperOptions","tabindex","content","popperStyle","popperClass","enterable","default","effect","teleported","title","String","width","type","Number","offset","showAfter","hideAfter","autoClose","showArrow","Boolean","persistent","Function","popoverEmits","value","isBoolean"],"sources":["../../../../../../packages/components/popover/src/popover.ts"],"sourcesContent":["import { buildProps, isBoolean } from '@element-plus/utils'\nimport {\n  useTooltipContentProps,\n  useTooltipTriggerProps,\n} from '@element-plus/components/tooltip'\nimport { dropdownProps } from '@element-plus/components/dropdown'\nimport type { ExtractPropTypes, PropType } from 'vue'\nimport type Popover from './popover.vue'\n\nexport const popoverProps = buildProps({\n  trigger: useTooltipTriggerProps.trigger,\n  placement: dropdownProps.placement,\n  disabled: useTooltipTriggerProps.disabled,\n  visible: useTooltipContentProps.visible,\n  transition: useTooltipContentProps.transition,\n  popperOptions: dropdownProps.popperOptions,\n  tabindex: dropdownProps.tabindex,\n  content: useTooltipContentProps.content,\n  popperStyle: useTooltipContentProps.popperStyle,\n  popperClass: useTooltipContentProps.popperClass,\n  enterable: {\n    ...useTooltipContentProps.enterable,\n    default: true,\n  },\n  effect: {\n    ...useTooltipContentProps.effect,\n    default: 'light',\n  },\n  teleported: useTooltipContentProps.teleported,\n  title: String,\n\n  width: {\n    type: [String, Number],\n    default: 150,\n  },\n  offset: {\n    type: Number,\n    default: undefined,\n  },\n  showAfter: {\n    type: Number,\n    default: 0,\n  },\n  hideAfter: {\n    type: Number,\n    default: 200,\n  },\n  autoClose: {\n    type: Number,\n    default: 0,\n  },\n  showArrow: {\n    type: Boolean,\n    default: true,\n  },\n  persistent: {\n    type: Boolean,\n    default: true,\n  },\n  'onUpdate:visible': {\n    type: Function as PropType<(visible: boolean) => void>,\n  },\n} as const)\nexport type PopoverProps = ExtractPropTypes<typeof popoverProps>\n\nexport const popoverEmits = {\n  'update:visible': (value: boolean) => isBoolean(value),\n  'before-enter': () => true,\n  'before-leave': () => true,\n  'after-enter': () => true,\n  'after-leave': () => true,\n}\nexport type PopoverEmits = typeof popoverEmits\n\nexport type PopoverInstance = InstanceType<typeof Popover>\n"]},"metadata":{},"sourceType":"module"}