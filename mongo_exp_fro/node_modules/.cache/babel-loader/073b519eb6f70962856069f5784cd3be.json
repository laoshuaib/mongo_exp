{"ast":null,"code":"import { ref, inject, computed, unref } from 'vue';\nimport '../../tokens/index.mjs';\nimport '../../utils/index.mjs';\nimport '../../constants/index.mjs';\nimport { useProp } from '../use-prop/index.mjs';\nimport { useGlobalConfig } from '../use-global-config/index.mjs';\nimport { buildProp } from '../../utils/vue/props/runtime.mjs';\nimport { componentSizes } from '../../constants/size.mjs';\nimport { formContextKey, formItemContextKey } from '../../tokens/form.mjs';\nconst useSizeProp = buildProp({\n  type: String,\n  values: componentSizes,\n  required: false\n});\n\nconst useSize = (fallback, ignore = {}) => {\n  const emptyRef = ref(void 0);\n  const size = ignore.prop ? emptyRef : useProp(\"size\");\n  const globalConfig = ignore.global ? emptyRef : useGlobalConfig(\"size\");\n  const form = ignore.form ? {\n    size: void 0\n  } : inject(formContextKey, void 0);\n  const formItem = ignore.formItem ? {\n    size: void 0\n  } : inject(formItemContextKey, void 0);\n  return computed(() => size.value || unref(fallback) || (formItem == null ? void 0 : formItem.size) || (form == null ? void 0 : form.size) || globalConfig.value || \"\");\n};\n\nconst useDisabled = fallback => {\n  const disabled = useProp(\"disabled\");\n  const form = inject(formContextKey, void 0);\n  return computed(() => disabled.value || unref(fallback) || (form == null ? void 0 : form.disabled) || false);\n};\n\nexport { useDisabled, useSize, useSizeProp };","map":{"version":3,"mappings":";;;;;;;;;AAMY,MAACA,WAAW,GAAGC,SAAS,CAAC;EACnCC,IAAI,EAAEC,MAD6B;EAEnCC,MAAM,EAAEC,cAF2B;EAGnCC,QAAQ,EAAE;AAHyB,CAAD,CAAxB;;AAKA,MAACC,OAAO,GAAG,CAACC,QAAD,EAAWC,MAAM,GAAG,EAApB,KAA2B;EAChD,MAAMC,QAAQ,GAAGC,GAAG,CAAC,KAAK,CAAN,CAApB;EACA,MAAMC,IAAI,GAAGH,MAAM,CAACI,IAAP,GAAcH,QAAd,GAAyBI,OAAO,CAAC,MAAD,CAA7C;EACA,MAAMC,YAAY,GAAGN,MAAM,CAACO,MAAP,GAAgBN,QAAhB,GAA2BO,eAAe,CAAC,MAAD,CAA/D;EACA,MAAMC,IAAI,GAAGT,MAAM,CAACS,IAAP,GAAc;IAAEN,IAAI,EAAE,KAAK;EAAb,CAAd,GAAiCO,MAAM,CAACC,cAAD,EAAiB,KAAK,CAAtB,CAApD;EACA,MAAMC,QAAQ,GAAGZ,MAAM,CAACY,QAAP,GAAkB;IAAET,IAAI,EAAE,KAAK;EAAb,CAAlB,GAAqCO,MAAM,CAACG,kBAAD,EAAqB,KAAK,CAA1B,CAA5D;EACA,OAAOC,QAAQ,CAAC,MAAMX,IAAI,CAACY,KAAL,IAAcC,KAAK,CAACjB,QAAD,CAAnB,KAAkCa,QAAQ,IAAI,IAAZ,GAAmB,KAAK,CAAxB,GAA4BA,QAAQ,CAACT,IAAvE,MAAiFM,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACN,IAA9G,KAAuHG,YAAY,CAACS,KAApI,IAA6I,EAApJ,CAAf;AACF,CAPY;;AAQA,MAACE,WAAW,GAAIlB,QAAD,IAAc;EACvC,MAAMmB,QAAQ,GAAGb,OAAO,CAAC,UAAD,CAAxB;EACA,MAAMI,IAAI,GAAGC,MAAM,CAACC,cAAD,EAAiB,KAAK,CAAtB,CAAnB;EACA,OAAOG,QAAQ,CAAC,MAAMI,QAAQ,CAACH,KAAT,IAAkBC,KAAK,CAACjB,QAAD,CAAvB,KAAsCU,IAAI,IAAI,IAAR,GAAe,KAAK,CAApB,GAAwBA,IAAI,CAACS,QAAnE,KAAgF,KAAvF,CAAf;AACF,CAJY","names":["useSizeProp","buildProp","type","String","values","componentSizes","required","useSize","fallback","ignore","emptyRef","ref","size","prop","useProp","globalConfig","global","useGlobalConfig","form","inject","formContextKey","formItem","formItemContextKey","computed","value","unref","useDisabled","disabled"],"sources":["../../../../../packages/hooks/use-common-props/index.ts"],"sourcesContent":["import { computed, inject, ref, unref } from 'vue'\nimport { formContextKey, formItemContextKey } from '@element-plus/tokens'\nimport { buildProp } from '@element-plus/utils'\nimport { componentSizes } from '@element-plus/constants'\nimport { useProp } from '../use-prop'\nimport { useGlobalConfig } from '../use-global-config'\nimport type { ComponentSize } from '@element-plus/constants'\nimport type { MaybeRef } from '@vueuse/core'\n\nexport const useSizeProp = buildProp({\n  type: String,\n  values: componentSizes,\n  required: false,\n} as const)\n\nexport const useSize = (\n  fallback?: MaybeRef<ComponentSize | undefined>,\n  ignore: Partial<Record<'prop' | 'form' | 'formItem' | 'global', boolean>> = {}\n) => {\n  const emptyRef = ref(undefined)\n\n  const size = ignore.prop ? emptyRef : useProp<ComponentSize>('size')\n  const globalConfig = ignore.global ? emptyRef : useGlobalConfig('size')\n  const form = ignore.form\n    ? { size: undefined }\n    : inject(formContextKey, undefined)\n  const formItem = ignore.formItem\n    ? { size: undefined }\n    : inject(formItemContextKey, undefined)\n\n  return computed(\n    (): ComponentSize =>\n      size.value ||\n      unref(fallback) ||\n      formItem?.size ||\n      form?.size ||\n      globalConfig.value ||\n      ''\n  )\n}\n\nexport const useDisabled = (fallback?: MaybeRef<boolean | undefined>) => {\n  const disabled = useProp<boolean>('disabled')\n  const form = inject(formContextKey, undefined)\n  return computed(\n    () => disabled.value || unref(fallback) || form?.disabled || false\n  )\n}\n"]},"metadata":{},"sourceType":"module"}