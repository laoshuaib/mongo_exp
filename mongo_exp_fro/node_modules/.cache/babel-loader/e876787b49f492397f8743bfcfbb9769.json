{"ast":null,"code":"import { computed } from 'vue';\nimport '../../../../hooks/index.mjs';\nimport { useLocale } from '../../../../hooks/use-locale/index.mjs';\n\nconst useMonthRangeHeader = ({\n  unlinkPanels,\n  leftDate,\n  rightDate\n}) => {\n  const {\n    t\n  } = useLocale();\n\n  const leftPrevYear = () => {\n    leftDate.value = leftDate.value.subtract(1, \"year\");\n\n    if (!unlinkPanels) {\n      rightDate.value = rightDate.value.subtract(1, \"year\");\n    }\n  };\n\n  const rightNextYear = () => {\n    if (!unlinkPanels) {\n      leftDate.value = leftDate.value.add(1, \"year\");\n    }\n\n    rightDate.value = rightDate.value.add(1, \"year\");\n  };\n\n  const leftNextYear = () => {\n    leftDate.value = leftDate.value.add(1, \"year\");\n  };\n\n  const rightPrevYear = () => {\n    rightDate.value = rightDate.value.subtract(1, \"year\");\n  };\n\n  const leftLabel = computed(() => {\n    return `${leftDate.value.year()} ${t(\"el.datepicker.year\")}`;\n  });\n  const rightLabel = computed(() => {\n    return `${rightDate.value.year()} ${t(\"el.datepicker.year\")}`;\n  });\n  const leftYear = computed(() => {\n    return leftDate.value.year();\n  });\n  const rightYear = computed(() => {\n    return rightDate.value.year() === leftDate.value.year() ? leftDate.value.year() + 1 : rightDate.value.year();\n  });\n  return {\n    leftPrevYear,\n    rightNextYear,\n    leftNextYear,\n    rightPrevYear,\n    leftLabel,\n    rightLabel,\n    leftYear,\n    rightYear\n  };\n};\n\nexport { useMonthRangeHeader };","map":{"version":3,"mappings":";;;;AAEY,MAACA,mBAAmB,GAAG,CAAC;EAClCC,YADkC;EAElCC,QAFkC;EAGlCC;AAHkC,CAAD,KAI7B;EACJ,MAAM;IAAEC;EAAF,IAAQC,SAAS,EAAvB;;EACA,MAAMC,YAAY,GAAG,MAAM;IACzBJ,QAAQ,CAACK,KAAT,GAAiBL,QAAQ,CAACK,KAAT,CAAeC,QAAf,CAAwB,CAAxB,EAA2B,MAA3B,CAAjB;;IACA,IAAI,CAACP,YAAL,EAAmB;MACjBE,SAAS,CAACI,KAAV,GAAkBJ,SAAS,CAACI,KAAV,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,MAA5B,CAAlB;IACD;EACF,CALD;;EAMA,MAAMC,aAAa,GAAG,MAAM;IAC1B,IAAI,CAACR,YAAL,EAAmB;MACjBC,QAAQ,CAACK,KAAT,GAAiBL,QAAQ,CAACK,KAAT,CAAeG,GAAf,CAAmB,CAAnB,EAAsB,MAAtB,CAAjB;IACD;;IACDP,SAAS,CAACI,KAAV,GAAkBJ,SAAS,CAACI,KAAV,CAAgBG,GAAhB,CAAoB,CAApB,EAAuB,MAAvB,CAAlB;EACD,CALD;;EAMA,MAAMC,YAAY,GAAG,MAAM;IACzBT,QAAQ,CAACK,KAAT,GAAiBL,QAAQ,CAACK,KAAT,CAAeG,GAAf,CAAmB,CAAnB,EAAsB,MAAtB,CAAjB;EACD,CAFD;;EAGA,MAAME,aAAa,GAAG,MAAM;IAC1BT,SAAS,CAACI,KAAV,GAAkBJ,SAAS,CAACI,KAAV,CAAgBC,QAAhB,CAAyB,CAAzB,EAA4B,MAA5B,CAAlB;EACD,CAFD;;EAGA,MAAMK,SAAS,GAAGC,QAAQ,CAAC,MAAM;IAC/B,OAAQ,GAAEZ,QAAQ,CAACK,KAAT,CAAeQ,IAAf,EAAsB,IAAGX,CAAC,CAAC,oBAAD,CAAuB,EAA3D;EACD,CAFyB,CAA1B;EAGA,MAAMY,UAAU,GAAGF,QAAQ,CAAC,MAAM;IAChC,OAAQ,GAAEX,SAAS,CAACI,KAAV,CAAgBQ,IAAhB,EAAuB,IAAGX,CAAC,CAAC,oBAAD,CAAuB,EAA5D;EACD,CAF0B,CAA3B;EAGA,MAAMa,QAAQ,GAAGH,QAAQ,CAAC,MAAM;IAC9B,OAAOZ,QAAQ,CAACK,KAAT,CAAeQ,IAAf,EAAP;EACD,CAFwB,CAAzB;EAGA,MAAMG,SAAS,GAAGJ,QAAQ,CAAC,MAAM;IAC/B,OAAOX,SAAS,CAACI,KAAV,CAAgBQ,IAAhB,OAA2Bb,QAAQ,CAACK,KAAT,CAAeQ,IAAf,EAA3B,GAAmDb,QAAQ,CAACK,KAAT,CAAeQ,IAAf,KAAwB,CAA3E,GAA+EZ,SAAS,CAACI,KAAV,CAAgBQ,IAAhB,EAAtF;EACD,CAFyB,CAA1B;EAGA,OAAO;IACLT,YADK;IAELG,aAFK;IAGLE,YAHK;IAILC,aAJK;IAKLC,SALK;IAMLG,UANK;IAOLC,QAPK;IAQLC;EARK,CAAP;AAUF,CA9CY","names":["useMonthRangeHeader","unlinkPanels","leftDate","rightDate","t","useLocale","leftPrevYear","value","subtract","rightNextYear","add","leftNextYear","rightPrevYear","leftLabel","computed","year","rightLabel","leftYear","rightYear"],"sources":["../../../../../../../packages/components/date-picker/src/composables/use-month-range-header.ts"],"sourcesContent":["import { computed } from 'vue'\nimport { useLocale } from '@element-plus/hooks'\nimport type { Ref, ToRef } from 'vue'\nimport type { Dayjs } from 'dayjs'\n\nexport const useMonthRangeHeader = ({\n  unlinkPanels,\n  leftDate,\n  rightDate,\n}: {\n  unlinkPanels: ToRef<boolean>\n  leftDate: Ref<Dayjs>\n  rightDate: Ref<Dayjs>\n}) => {\n  const { t } = useLocale()\n  const leftPrevYear = () => {\n    leftDate.value = leftDate.value.subtract(1, 'year')\n    if (!unlinkPanels) {\n      rightDate.value = rightDate.value.subtract(1, 'year')\n    }\n  }\n\n  const rightNextYear = () => {\n    if (!unlinkPanels) {\n      leftDate.value = leftDate.value.add(1, 'year')\n    }\n    rightDate.value = rightDate.value.add(1, 'year')\n  }\n\n  const leftNextYear = () => {\n    leftDate.value = leftDate.value.add(1, 'year')\n  }\n\n  const rightPrevYear = () => {\n    rightDate.value = rightDate.value.subtract(1, 'year')\n  }\n  const leftLabel = computed(() => {\n    return `${leftDate.value.year()} ${t('el.datepicker.year')}`\n  })\n\n  const rightLabel = computed(() => {\n    return `${rightDate.value.year()} ${t('el.datepicker.year')}`\n  })\n\n  const leftYear = computed(() => {\n    return leftDate.value.year()\n  })\n\n  const rightYear = computed(() => {\n    return rightDate.value.year() === leftDate.value.year()\n      ? leftDate.value.year() + 1\n      : rightDate.value.year()\n  })\n\n  return {\n    leftPrevYear,\n    rightNextYear,\n    leftNextYear,\n    rightPrevYear,\n    leftLabel,\n    rightLabel,\n    leftYear,\n    rightYear,\n  }\n}\n"]},"metadata":{},"sourceType":"module"}