{"ast":null,"code":"import { defineComponent, inject, computed, onMounted, watch, onBeforeUnmount, openBlock, createBlock, unref, mergeProps, withCtx, renderSlot, createCommentVNode } from 'vue';\nimport { isNil } from 'lodash-unified';\nimport { unrefElement } from '@vueuse/core';\nimport '../../slot/index.mjs';\nimport '../../../hooks/index.mjs';\nimport '../../../tokens/index.mjs';\nimport '../../../utils/index.mjs';\nimport { usePopperTriggerProps } from './trigger.mjs';\nimport _export_sfc from '../../../_virtual/plugin-vue_export-helper.mjs';\nimport { POPPER_INJECTION_KEY } from '../../../tokens/popper.mjs';\nimport { useForwardRef } from '../../../hooks/use-forward-ref/index.mjs';\nimport { isElement } from '../../../utils/types.mjs';\nimport { OnlyChild } from '../../slot/src/only-child.mjs';\nconst __default__ = {\n  name: \"ElPopperTrigger\",\n  inheritAttrs: false\n};\n\nconst _sfc_main = /* @__PURE__ */defineComponent({ ...__default__,\n  props: usePopperTriggerProps,\n\n  setup(__props, {\n    expose\n  }) {\n    const props = __props;\n    const {\n      role,\n      triggerRef\n    } = inject(POPPER_INJECTION_KEY, void 0);\n    useForwardRef(triggerRef);\n    const ariaControls = computed(() => {\n      return ariaHaspopup.value ? props.id : void 0;\n    });\n    const ariaDescribedby = computed(() => {\n      if (role && role.value === \"tooltip\") {\n        return props.open && props.id ? props.id : void 0;\n      }\n\n      return void 0;\n    });\n    const ariaHaspopup = computed(() => {\n      if (role && role.value !== \"tooltip\") {\n        return role.value;\n      }\n\n      return void 0;\n    });\n    const ariaExpanded = computed(() => {\n      return ariaHaspopup.value ? `${props.open}` : void 0;\n    });\n    let virtualTriggerAriaStopWatch = void 0;\n    onMounted(() => {\n      watch(() => props.virtualRef, virtualEl => {\n        if (virtualEl) {\n          triggerRef.value = unrefElement(virtualEl);\n        }\n      }, {\n        immediate: true\n      });\n      watch(() => triggerRef.value, (el, prevEl) => {\n        virtualTriggerAriaStopWatch == null ? void 0 : virtualTriggerAriaStopWatch();\n        virtualTriggerAriaStopWatch = void 0;\n\n        if (isElement(el)) {\n          ;\n          [\"onMouseenter\", \"onMouseleave\", \"onClick\", \"onKeydown\", \"onFocus\", \"onBlur\", \"onContextmenu\"].forEach(eventName => {\n            var _a;\n\n            const handler = props[eventName];\n\n            if (handler) {\n              ;\n              el.addEventListener(eventName.slice(2).toLowerCase(), handler);\n              (_a = prevEl == null ? void 0 : prevEl.removeEventListener) == null ? void 0 : _a.call(prevEl, eventName.slice(2).toLowerCase(), handler);\n            }\n          });\n          virtualTriggerAriaStopWatch = watch([ariaControls, ariaDescribedby, ariaHaspopup, ariaExpanded], watches => {\n            ;\n            [\"aria-controls\", \"aria-describedby\", \"aria-haspopup\", \"aria-expanded\"].forEach((key, idx) => {\n              isNil(watches[idx]) ? el.removeAttribute(key) : el.setAttribute(key, watches[idx]);\n            });\n          }, {\n            immediate: true\n          });\n        }\n\n        if (isElement(prevEl)) {\n          ;\n          [\"aria-controls\", \"aria-describedby\", \"aria-haspopup\", \"aria-expanded\"].forEach(key => prevEl.removeAttribute(key));\n        }\n      }, {\n        immediate: true\n      });\n    });\n    onBeforeUnmount(() => {\n      virtualTriggerAriaStopWatch == null ? void 0 : virtualTriggerAriaStopWatch();\n      virtualTriggerAriaStopWatch = void 0;\n    });\n    expose({\n      triggerRef\n    });\n    return (_ctx, _cache) => {\n      return !_ctx.virtualTriggering ? (openBlock(), createBlock(unref(OnlyChild), mergeProps({\n        key: 0\n      }, _ctx.$attrs, {\n        \"aria-controls\": unref(ariaControls),\n        \"aria-describedby\": unref(ariaDescribedby),\n        \"aria-expanded\": unref(ariaExpanded),\n        \"aria-haspopup\": unref(ariaHaspopup)\n      }), {\n        default: withCtx(() => [renderSlot(_ctx.$slots, \"default\")]),\n        _: 3\n      }, 16, [\"aria-controls\", \"aria-describedby\", \"aria-expanded\", \"aria-haspopup\"])) : createCommentVNode(\"v-if\", true);\n    };\n  }\n\n});\n\nvar ElPopperTrigger = /* @__PURE__ */_export_sfc(_sfc_main, [[\"__file\", \"/home/runner/work/element-plus/element-plus/packages/components/popper/src/trigger.vue\"]]);\n\nexport { ElPopperTrigger as default };","map":{"version":3,"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;IAiCA;MAAAA;MAAAC;IAAA;IAEAC;IAEA;MACA;IACA,CAFA;IAIA;MACA;QACA;MACA;;MACA;IACA,CALA;IAOA;MACA;QACA;MACA;;MACA;IACA,CALA;IAOA;MACA;IACA,CAFA;IAIA;IAEAC;MACAC,MACA,sBADA,EAEAC;QACA;UACAJ;QACA;MAEA,CAPA,EAOA;QACAK;MADA,CAPA;MAYAF,MACA,sBADA,EAEA;QACAG;QACAA;;QACA;UACA;UAAA,CACA,cADA,EAEA,cAFA,EAGA,SAHA,EAIA,WAJA,EAKA,SALA,EAMA,QANA,EAOA,eAPA,EAQAC,OARA,CAQAC;YACA;;YACA;;YACA;cAAA;cAIAC,8BACAC,KADA,CACA,CADA,EACAC,WADA,IACAC,OADA;cAIA;YACA;UACA,CArBA;UAwBAN;YAAA;YACA,CACA,eADA,EAEA,kBAFA,EAGA,eAHA,EAIA,eAJA,EAKAC,OALA,CAKA,cACA;cAEAM;YAEA,CAVA;UAYA,CAbA,EAaA;YAAAR;UAAA,CAbA;QAcA;;QACA;UAAA;UACA,CACA,eADA,EAEA,kBAFA,EAGA,eAHA,EAIA,eAJA,EAKAE,OALA,CAKAO,kCALA;QAOA;MAAA,CArDA,EAsDA;QAEAT;MAFA,CAtDA;IA2DA,CAxEA;IAyEAU;MACAT;MACAA;IAEA,CAJA;IAQAU;MACAhB;IADA","names":["role","triggerRef","useForwardRef","onMounted","watch","virtualEl","immediate","virtualTriggerAriaStopWatch","forEach","eventName","el","slice","toLowerCase","handler","isNil","key","onBeforeUnmount","expose"],"sources":["../../../../../../packages/components/popper/src/trigger.vue"],"sourcesContent":["<template>\n  <el-only-child\n    v-if=\"!virtualTriggering\"\n    v-bind=\"$attrs\"\n    :aria-controls=\"ariaControls\"\n    :aria-describedby=\"ariaDescribedby\"\n    :aria-expanded=\"ariaExpanded\"\n    :aria-haspopup=\"ariaHaspopup\"\n  >\n    <slot />\n  </el-only-child>\n</template>\n\n<script lang=\"ts\" setup>\n// @ts-nocheck\nimport { computed, inject, onBeforeUnmount, onMounted, watch } from 'vue'\nimport { isNil } from 'lodash-unified'\nimport { unrefElement } from '@vueuse/core'\nimport { ElOnlyChild } from '@element-plus/components/slot'\nimport { useForwardRef } from '@element-plus/hooks'\nimport { POPPER_INJECTION_KEY } from '@element-plus/tokens'\nimport { isElement } from '@element-plus/utils'\nimport { usePopperTriggerProps } from './trigger'\n\nimport type { WatchStopHandle } from 'vue'\n\ndefineOptions({\n  name: 'ElPopperTrigger',\n  inheritAttrs: false,\n})\n\nconst props = defineProps(usePopperTriggerProps)\n\nconst { role, triggerRef } = inject(POPPER_INJECTION_KEY, undefined)!\n\nuseForwardRef(triggerRef)\n\nconst ariaControls = computed<string | undefined>(() => {\n  return ariaHaspopup.value ? props.id : undefined\n})\n\nconst ariaDescribedby = computed<string | undefined>(() => {\n  if (role && role.value === 'tooltip') {\n    return props.open && props.id ? props.id : undefined\n  }\n  return undefined\n})\n\nconst ariaHaspopup = computed<string | undefined>(() => {\n  if (role && role.value !== 'tooltip') {\n    return role.value\n  }\n  return undefined\n})\n\nconst ariaExpanded = computed<string | undefined>(() => {\n  return ariaHaspopup.value ? `${props.open}` : undefined\n})\n\nlet virtualTriggerAriaStopWatch: WatchStopHandle | undefined = undefined\n\nonMounted(() => {\n  watch(\n    () => props.virtualRef,\n    (virtualEl) => {\n      if (virtualEl) {\n        triggerRef.value = unrefElement(virtualEl as HTMLElement)\n      }\n    },\n    {\n      immediate: true,\n    }\n  )\n\n  watch(\n    () => triggerRef.value,\n    (el, prevEl) => {\n      virtualTriggerAriaStopWatch?.()\n      virtualTriggerAriaStopWatch = undefined\n      if (isElement(el)) {\n        ;[\n          'onMouseenter',\n          'onMouseleave',\n          'onClick',\n          'onKeydown',\n          'onFocus',\n          'onBlur',\n          'onContextmenu',\n        ].forEach((eventName) => {\n          const handler = props[eventName]\n          if (handler) {\n            ;(el as HTMLElement).addEventListener(\n              eventName.slice(2).toLowerCase(),\n              handler\n            )\n            ;(prevEl as HTMLElement)?.removeEventListener?.(\n              eventName.slice(2).toLowerCase(),\n              handler\n            )\n          }\n        })\n        virtualTriggerAriaStopWatch = watch(\n          [ariaControls, ariaDescribedby, ariaHaspopup, ariaExpanded],\n          (watches) => {\n            ;[\n              'aria-controls',\n              'aria-describedby',\n              'aria-haspopup',\n              'aria-expanded',\n            ].forEach((key, idx) => {\n              isNil(watches[idx])\n                ? el.removeAttribute(key)\n                : el.setAttribute(key, watches[idx])\n            })\n          },\n          { immediate: true }\n        )\n      }\n      if (isElement(prevEl)) {\n        ;[\n          'aria-controls',\n          'aria-describedby',\n          'aria-haspopup',\n          'aria-expanded',\n        ].forEach((key) => prevEl.removeAttribute(key))\n      }\n    },\n    {\n      immediate: true,\n    }\n  )\n})\n\nonBeforeUnmount(() => {\n  virtualTriggerAriaStopWatch?.()\n  virtualTriggerAriaStopWatch = undefined\n})\n\ndefineExpose({\n  /**\n   * @description trigger element\n   */\n  triggerRef,\n})\n</script>\n"]},"metadata":{},"sourceType":"module"}